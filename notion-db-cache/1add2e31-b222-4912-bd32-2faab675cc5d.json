[{"object":"block","id":"2786b3b5-f03d-4eb6-b2b9-146be5c877d1","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T01:49:00.000Z","last_edited_time":"2024-06-26T02:07:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"2024/06/25のOpenTelemetry Meetupで発表した『opentelemetry-js 探訪 Webフロントエンドでも自動計装したい！編』の中で、Service Workerを使った非破壊的な自動計装のPoCを紹介した。この記事では発表の中では割愛した詳細部分を含めて解説する。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"2024/06/25のOpenTelemetry Meetupで発表した『opentelemetry-js 探訪 Webフロントエンドでも自動計装したい！編』の中で、Service Workerを使った非破壊的な自動計装のPoCを紹介した。この記事では発表の中では割愛した詳細部分を含めて解説する。","href":null}],"color":"default"}},{"object":"block","id":"c2bbad40-5230-42c8-a98b-a1d2aaa4315a","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T01:56:00.000Z","last_edited_time":"2024-06-26T01:56:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://opentelemetry.connpass.com/event/317170/"}},{"object":"block","id":"8f8d5097-b885-498e-80d4-a0c10339bc62","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T01:57:00.000Z","last_edited_time":"2024-06-26T01:57:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://docs.google.com/presentation/d/e/2PACX-1vTofqAssUECvL19frdSwtW6AG03Hyr0VXyhLSHq7R8AE0oK6TQKfLjDYipEyrPT4_ZFXaFuwiDDe3HO/pub"}},{"object":"block","id":"8f2d130e-4ef7-4517-9645-5bbf43eb9e6c","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:56:00.000Z","last_edited_time":"2024-06-26T05:56:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://www.youtube.com/live/ATlbJnc4d3o?si=V97dld8w92wiLqxw&t=5804"}},{"object":"block","id":"32785cfa-a681-4415-8697-071d39dd7f59","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T06:19:00.000Z","last_edited_time":"2024-06-26T06:19:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[],"color":"default"}},{"object":"block","id":"059622e7-d6a6-440f-8dac-8bc9f2864a1e","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T06:19:00.000Z","last_edited_time":"2024-06-26T06:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"otel-jsのバージョン","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"otel-jsのバージョン","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"a2b9a120-3897-4381-85f4-25fe0d295b11","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T06:20:00.000Z","last_edited_time":"2024-06-26T06:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"今回のPoCのコードで利用しているopentelemetry-jsのパッケージバージョンは以下のとおりである。experimentalだらけなので時間が経てばいろいろと壊れるだろう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"今回のPoCのコードで利用しているopentelemetry-jsのパッケージバージョンは以下のとおりである。experimentalだらけなので時間が経てばいろいろと壊れるだろう。","href":null}],"color":"default"}},{"object":"block","id":"302f88f0-ab92-44d1-9d02-9866fb2a8ebb","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T06:20:00.000Z","last_edited_time":"2024-06-26T08:39:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"\"@opentelemetry/api\": \"^1.9.0\",\n\"@opentelemetry/core\": \"^1.25.1\",\n\"@opentelemetry/exporter-trace-otlp-http\": \"^0.52.1\",\n\"@opentelemetry/otlp-transformer\": \"^0.52.1\",\n\"@opentelemetry/resources\": \"^1.25.1\",\n\"@opentelemetry/sdk-trace-base\": \"^1.25.1\",\n\"@opentelemetry/sdk-trace-web\": \"^1.25.1\",\n\"@opentelemetry/semantic-conventions\": \"^1.25.1\",","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"\"@opentelemetry/api\": \"^1.9.0\",\n\"@opentelemetry/core\": \"^1.25.1\",\n\"@opentelemetry/exporter-trace-otlp-http\": \"^0.52.1\",\n\"@opentelemetry/otlp-transformer\": \"^0.52.1\",\n\"@opentelemetry/resources\": \"^1.25.1\",\n\"@opentelemetry/sdk-trace-base\": \"^1.25.1\",\n\"@opentelemetry/sdk-trace-web\": \"^1.25.1\",\n\"@opentelemetry/semantic-conventions\": \"^1.25.1\",","href":null}],"language":"plain text"}},{"object":"block","id":"f3ffec00-cb99-447b-b852-d8fb74406203","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T01:57:00.000Z","last_edited_time":"2024-06-26T03:00:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"FetchTraceExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"FetchTraceExporter","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"6c2df839-abe0-4754-b4c3-7723cedc8398","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:00:00.000Z","last_edited_time":"2024-06-26T03:08:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"今回のPoCの本質ではないが、技術的な制約のために自作せざるを得なかった ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"今回のPoCの本質ではないが、技術的な制約のために自作せざるを得なかった ","href":null},{"type":"text","text":{"content":"FetchTraceExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"FetchTraceExporter","href":null},{"type":"text","text":{"content":" について解説する。まずはコードの全文を見てもらおう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" について解説する。まずはコードの全文を見てもらおう。","href":null}],"color":"default"}},{"object":"block","id":"6ef8b17c-d246-48c4-a867-3d448c14b65c","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:08:00.000Z","last_edited_time":"2024-06-26T04:36:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[{"type":"text","text":{"content":"FetchTraceExporterの実装","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"FetchTraceExporterの実装","href":null}],"rich_text":[{"type":"text","text":{"content":"import {\n  OTLPExporterBrowserBase,\n  OTLPExporterConfigBase,\n  OTLPExporterError,\n} from \"@opentelemetry/otlp-exporter-base\";\nimport {\n  IExportTraceServiceResponse,\n  JsonTraceSerializer,\n} from \"@opentelemetry/otlp-transformer\";\nimport { ReadableSpan } from \"@opentelemetry/sdk-trace-base\";\n\n/**\n * Custom OTLPTraceExporter implementation for Fetch API\n */\nexport class FetchTraceExporter extends OTLPExporterBrowserBase<\n  ReadableSpan,\n  IExportTraceServiceResponse\n> {\n  constructor(config: OTLPExporterConfigBase) {\n    // same as OTLPTraceExporter in @opentelemetry/exporter-trace-otlp-http\n    super(config, JsonTraceSerializer, \"application/json\");\n  }\n\n  override send(\n    items: ReadableSpan[],\n    onSuccess: () => void,\n    onError: (error: OTLPExporterError) => void\n  ): void {\n    const body =\n      JsonTraceSerializer.serializeRequest(items) ?? new Uint8Array();\n    const request = new Request(this.url, {\n      method: \"POST\",\n      body,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        ...this._headers,\n      },\n    });\n    const promise = fetch(request).then(onSuccess).catch(onError);\n    // for managing the sending promises concurrency\n    this._sendingPromises.push(promise);\n    promise.finally(() => {\n      const index = this._sendingPromises.indexOf(promise);\n      this._sendingPromises.splice(index, 1);\n    });\n  }\n\n  override getDefaultUrl(config: OTLPExporterConfigBase): string {\n    if (typeof config.url !== \"string\") {\n      throw new OTLPExporterError(\"config.url is not a string\");\n    }\n    return config.url;\n  }\n}\n","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"import {\n  OTLPExporterBrowserBase,\n  OTLPExporterConfigBase,\n  OTLPExporterError,\n} from \"@opentelemetry/otlp-exporter-base\";\nimport {\n  IExportTraceServiceResponse,\n  JsonTraceSerializer,\n} from \"@opentelemetry/otlp-transformer\";\nimport { ReadableSpan } from \"@opentelemetry/sdk-trace-base\";\n\n/**\n * Custom OTLPTraceExporter implementation for Fetch API\n */\nexport class FetchTraceExporter extends OTLPExporterBrowserBase<\n  ReadableSpan,\n  IExportTraceServiceResponse\n> {\n  constructor(config: OTLPExporterConfigBase) {\n    // same as OTLPTraceExporter in @opentelemetry/exporter-trace-otlp-http\n    super(config, JsonTraceSerializer, \"application/json\");\n  }\n\n  override send(\n    items: ReadableSpan[],\n    onSuccess: () => void,\n    onError: (error: OTLPExporterError) => void\n  ): void {\n    const body =\n      JsonTraceSerializer.serializeRequest(items) ?? new Uint8Array();\n    const request = new Request(this.url, {\n      method: \"POST\",\n      body,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        ...this._headers,\n      },\n    });\n    const promise = fetch(request).then(onSuccess).catch(onError);\n    // for managing the sending promises concurrency\n    this._sendingPromises.push(promise);\n    promise.finally(() => {\n      const index = this._sendingPromises.indexOf(promise);\n      this._sendingPromises.splice(index, 1);\n    });\n  }\n\n  override getDefaultUrl(config: OTLPExporterConfigBase): string {\n    if (typeof config.url !== \"string\") {\n      throw new OTLPExporterError(\"config.url is not a string\");\n    }\n    return config.url;\n  }\n}\n","href":null}],"language":"typescript"}},{"object":"block","id":"4756b285-b0f0-4dcf-bae1-031bc3d9f281","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:08:00.000Z","last_edited_time":"2024-06-26T03:21:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"ここで実装している内容に入る前に、まずはこのクラスのインターフェースと継承関係について説明しておこう。もっとも基本的なインターフェースとして","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ここで実装している内容に入る前に、まずはこのクラスのインターフェースと継承関係について説明しておこう。もっとも基本的なインターフェースとして","href":null},{"type":"text","text":{"content":"SpanProcessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SpanProcessor","href":null},{"type":"text","text":{"content":"というものがある。これはトレーサーがスパンを開始・終了したときのフック処理を行うためのインターフェースで、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"というものがある。これはトレーサーがスパンを開始・終了したときのフック処理を行うためのインターフェースで、","href":null},{"type":"text","text":{"content":"TracerProvider","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"TracerProvider","href":null},{"type":"text","text":{"content":"の","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"の","href":null},{"type":"text","text":{"content":"addSpanProcessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"addSpanProcessor","href":null},{"type":"text","text":{"content":"メソッドで登録できる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"メソッドで登録できる。","href":null},{"type":"text","text":{"content":"SpanProcessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SpanProcessor","href":null},{"type":"text","text":{"content":"のインターフェース定義は","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"のインターフェース定義は","href":null},{"type":"text","text":{"content":"sdk-trace-base","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"sdk-trace-base","href":null},{"type":"text","text":{"content":"に含まれている。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"に含まれている。","href":null}],"color":"default"}},{"object":"block","id":"6084a11b-c5f0-4ee6-9408-73e2f24c71ee","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:20:00.000Z","last_edited_time":"2024-06-26T03:21:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"mention","mention":{"type":"link_preview","link_preview":{"url":"https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-base/src/SpanProcessor.ts"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-base/src/SpanProcessor.ts","href":"https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-base/src/SpanProcessor.ts"}],"color":"default"}},{"object":"block","id":"9c86c1e9-b2b4-4aa9-ab4a-833c17196131","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:19:00.000Z","last_edited_time":"2024-06-26T03:21:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"/**\n * SpanProcessor is the interface Tracer SDK uses to allow synchronous hooks\n * for when a {@link Span} is started or when a {@link Span} is ended.\n */\nexport interface SpanProcessor {\n  /**\n   * Forces to export all finished spans\n   */\n  forceFlush(): Promise<void>;\n\n  /**\n   * Called when a {@link Span} is started, if the `span.isRecording()`\n   * returns true.\n   * @param span the Span that just started.\n   */\n  onStart(span: Span, parentContext: Context): void;\n\n  /**\n   * Called when a {@link ReadableSpan} is ended, if the `span.isRecording()`\n   * returns true.\n   * @param span the Span that just ended.\n   */\n  onEnd(span: ReadableSpan): void;\n\n  /**\n   * Shuts down the processor. Called when SDK is shut down. This is an\n   * opportunity for processor to do any cleanup required.\n   */\n  shutdown(): Promise<void>;\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"/**\n * SpanProcessor is the interface Tracer SDK uses to allow synchronous hooks\n * for when a {@link Span} is started or when a {@link Span} is ended.\n */\nexport interface SpanProcessor {\n  /**\n   * Forces to export all finished spans\n   */\n  forceFlush(): Promise<void>;\n\n  /**\n   * Called when a {@link Span} is started, if the `span.isRecording()`\n   * returns true.\n   * @param span the Span that just started.\n   */\n  onStart(span: Span, parentContext: Context): void;\n\n  /**\n   * Called when a {@link ReadableSpan} is ended, if the `span.isRecording()`\n   * returns true.\n   * @param span the Span that just ended.\n   */\n  onEnd(span: ReadableSpan): void;\n\n  /**\n   * Shuts down the processor. Called when SDK is shut down. This is an\n   * opportunity for processor to do any cleanup required.\n   */\n  shutdown(): Promise<void>;\n}","href":null}],"language":"typescript"}},{"object":"block","id":"63201c32-143c-4ed1-bc67-f41b880b3dff","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:11:00.000Z","last_edited_time":"2024-06-26T06:11:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"見て分かるとおり","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"見て分かるとおり","href":null},{"type":"text","text":{"content":"SpanProcessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SpanProcessor","href":null},{"type":"text","text":{"content":"の用途は自由だが、その用途のひとつがスパンの外部送信（","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"の用途は自由だが、その用途のひとつがスパンの外部送信（","href":null},{"type":"text","text":{"content":"エクスポート","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"エクスポート","href":null},{"type":"text","text":{"content":"）であり、もっともシンプルな実装として提供されているのが ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"）であり、もっともシンプルな実装として提供されているのが ","href":null},{"type":"text","text":{"content":"sdk-trace-base","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"sdk-trace-base","href":null},{"type":"text","text":{"content":"の ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"の ","href":null},{"type":"text","text":{"content":"SimpleSpanProcessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SimpleSpanProcessor","href":null},{"type":"text","text":{"content":"である。長いので詳細は割愛するが、ここで重要なのはコンストラクタ引数に","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"である。長いので詳細は割愛するが、ここで重要なのはコンストラクタ引数に","href":null},{"type":"text","text":{"content":"SpanExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SpanExporter","href":null},{"type":"text","text":{"content":"というインターフェースを要求することである。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"というインターフェースを要求することである。","href":null}],"color":"default"}},{"object":"block","id":"aad81cb4-e025-4de6-9823-f5b42f639290","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:27:00.000Z","last_edited_time":"2024-06-26T03:27:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"mention","mention":{"type":"link_preview","link_preview":{"url":"https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-base/src/export/SimpleSpanProcessor.ts"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-base/src/export/SimpleSpanProcessor.ts","href":"https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-base/src/export/SimpleSpanProcessor.ts"}],"color":"default"}},{"object":"block","id":"6c2397ca-0c4e-4a7a-bcf3-0ef11ffc2039","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:27:00.000Z","last_edited_time":"2024-06-26T03:28:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"/**\n * An implementation of the {@link SpanProcessor} that converts the {@link Span}\n * to {@link ReadableSpan} and passes it to the configured exporter.\n *\n * Only spans that are sampled are converted.\n *\n * NOTE: This {@link SpanProcessor} exports every ended span individually instead of batching spans together, which causes significant performance overhead with most exporters. For production use, please consider using the {@link BatchSpanProcessor} instead.\n */\nexport class SimpleSpanProcessor implements SpanProcessor {\n\n  constructor(private readonly _exporter: SpanExporter) {\n\t\t...\n\t}\n\t...\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"/**\n * An implementation of the {@link SpanProcessor} that converts the {@link Span}\n * to {@link ReadableSpan} and passes it to the configured exporter.\n *\n * Only spans that are sampled are converted.\n *\n * NOTE: This {@link SpanProcessor} exports every ended span individually instead of batching spans together, which causes significant performance overhead with most exporters. For production use, please consider using the {@link BatchSpanProcessor} instead.\n */\nexport class SimpleSpanProcessor implements SpanProcessor {\n\n  constructor(private readonly _exporter: SpanExporter) {\n\t\t...\n\t}\n\t...\n}","href":null}],"language":"typescript"}},{"object":"block","id":"fba95e64-fcc9-4d24-b5ed-1794ae958006","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:29:00.000Z","last_edited_time":"2024-06-26T03:33:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"SimpleSpanProcessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SimpleSpanProcessor","href":null},{"type":"text","text":{"content":"の役割は、記録されたスパンがEndするたびにひとつずつ逐次的にエクスポート処理をすることである。今回は深く触れないが、対置されるものとして複数のスパンをまとめて送信する","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"の役割は、記録されたスパンがEndするたびにひとつずつ逐次的にエクスポート処理をすることである。今回は深く触れないが、対置されるものとして複数のスパンをまとめて送信する","href":null},{"type":"text","text":{"content":"BatchSpanProcessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"BatchSpanProcessor","href":null},{"type":"text","text":{"content":"も","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"も","href":null},{"type":"text","text":{"content":"sdk-trace-base","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"sdk-trace-base","href":null},{"type":"text","text":{"content":"から提供されている。共通するのは、どちらもエクスポート処理そのものは","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"から提供されている。共通するのは、どちらもエクスポート処理そのものは","href":null},{"type":"text","text":{"content":"SpanExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SpanExporter","href":null},{"type":"text","text":{"content":"に移譲しており、エクスポートのタイミングだけを責任範囲としている点である。スパンをエクスポートするトリガーは引くが、具体的にどのように、どこにエクスポートするかはすべて","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"に移譲しており、エクスポートのタイミングだけを責任範囲としている点である。スパンをエクスポートするトリガーは引くが、具体的にどのように、どこにエクスポートするかはすべて","href":null},{"type":"text","text":{"content":"SpanExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SpanExporter","href":null},{"type":"text","text":{"content":"に委ねられている。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"に委ねられている。","href":null}],"color":"default"}},{"object":"block","id":"9abd5ecf-c0c2-4910-857f-55783daa234b","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:33:00.000Z","last_edited_time":"2024-06-26T03:36:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"というわけで","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"というわけで","href":null},{"type":"text","text":{"content":"SpanExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SpanExporter","href":null},{"type":"text","text":{"content":"の実装が必要になるわけだが、これもインターフェースは","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"の実装が必要になるわけだが、これもインターフェースは","href":null},{"type":"text","text":{"content":"sdk-trace-base","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"sdk-trace-base","href":null},{"type":"text","text":{"content":"で定義されている。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"で定義されている。","href":null},{"type":"text","text":{"content":"SpanExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SpanExporter","href":null},{"type":"text","text":{"content":"には","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"には","href":null},{"type":"text","text":{"content":"export","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"export","href":null},{"type":"text","text":{"content":"メソッドが要求され、このメソッドで実際にスパンを外部送信する方法を記述することになる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"メソッドが要求され、このメソッドで実際にスパンを外部送信する方法を記述することになる。","href":null}],"color":"default"}},{"object":"block","id":"1078bb53-d88d-47a5-a7c7-eaa2d7b87e6e","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:34:00.000Z","last_edited_time":"2024-06-26T03:34:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"mention","mention":{"type":"link_preview","link_preview":{"url":"https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-base/src/export/SpanExporter.ts"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-base/src/export/SpanExporter.ts","href":"https://github.com/open-telemetry/opentelemetry-js/blob/main/packages/opentelemetry-sdk-trace-base/src/export/SpanExporter.ts"}],"color":"default"}},{"object":"block","id":"1d3d8282-d1c9-412b-a485-64ba5bb6e527","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:34:00.000Z","last_edited_time":"2024-06-26T03:34:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"/**\n * An interface that allows different tracing services to export recorded data\n * for sampled spans in their own format.\n *\n * To export data this MUST be register to the Tracer SDK using a optional\n * config.\n */\nexport interface SpanExporter {\n  /**\n   * Called to export sampled {@link ReadableSpan}s.\n   * @param spans the list of sampled Spans to be exported.\n   */\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void;\n\n  /** Stops the exporter. */\n  shutdown(): Promise<void>;\n\n  /** Immediately export all spans */\n  forceFlush?(): Promise<void>;\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"/**\n * An interface that allows different tracing services to export recorded data\n * for sampled spans in their own format.\n *\n * To export data this MUST be register to the Tracer SDK using a optional\n * config.\n */\nexport interface SpanExporter {\n  /**\n   * Called to export sampled {@link ReadableSpan}s.\n   * @param spans the list of sampled Spans to be exported.\n   */\n  export(\n    spans: ReadableSpan[],\n    resultCallback: (result: ExportResult) => void\n  ): void;\n\n  /** Stops the exporter. */\n  shutdown(): Promise<void>;\n\n  /** Immediately export all spans */\n  forceFlush?(): Promise<void>;\n}","href":null}],"language":"typescript"}},{"object":"block","id":"da313603-5f9d-4e50-98f0-46f4f3668076","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:36:00.000Z","last_edited_time":"2024-06-26T03:46:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"ところで、この","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ところで、この","href":null},{"type":"text","text":{"content":"SpanExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SpanExporter","href":null},{"type":"text","text":{"content":"インターフェースの具体的な実装でotel-jsの安定版パッケージから提供されているのは ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"インターフェースの具体的な実装でotel-jsの安定版パッケージから提供されているのは ","href":null},{"type":"text","text":{"content":"sdk-trace-base","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"sdk-trace-base","href":null},{"type":"text","text":{"content":" の","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" の","href":null},{"type":"text","text":{"content":"ConsoleSpanExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"ConsoleSpanExporter","href":null},{"type":"text","text":{"content":"と","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"と","href":null},{"type":"text","text":{"content":"InMemorySpanExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"InMemorySpanExporter","href":null},{"type":"text","text":{"content":"しかなく、ほかは非推奨である。packagesディレクトリには","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"しかなく、ほかは非推奨である。packagesディレクトリには","href":null},{"type":"text","text":{"content":"@opentelemetry/exporter-jaeger","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@opentelemetry/exporter-jaeger","href":null},{"type":"text","text":{"content":"と","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"と","href":null},{"type":"text","text":{"content":"@opentelemetry/exporter-zipkin","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@opentelemetry/exporter-zipkin","href":null},{"type":"text","text":{"content":"があるように見えるが、どちらも非推奨になっている。READMEには以下の新しいパッケージを使うよう書かれているが、これらは今のところすべてexperimentalである。つまり2024/06現在、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"があるように見えるが、どちらも非推奨になっている。READMEには以下の新しいパッケージを使うよう書かれているが、これらは今のところすべてexperimentalである。つまり2024/06現在、","href":null},{"type":"text","text":{"content":"ブラウザからスパンを外部送信する安定版の実装は皆無","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ブラウザからスパンを外部送信する安定版の実装は皆無","href":null},{"type":"text","text":{"content":"である。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"である。","href":null}],"color":"default"}},{"object":"block","id":"cb86f1f6-f3ea-4103-bc25-5260299a791f","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:45:00.000Z","last_edited_time":"2024-06-26T03:45:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"@opentelemetry/exporter-trace-otlp-proto","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@opentelemetry/exporter-trace-otlp-proto","href":null}],"color":"default"}},{"object":"block","id":"1d9de52f-cd3a-4545-946c-bed8a8ac7058","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:45:00.000Z","last_edited_time":"2024-06-26T03:45:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"@opentelemetry/exporter-trace-otlp-grpc","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@opentelemetry/exporter-trace-otlp-grpc","href":null}],"color":"default"}},{"object":"block","id":"4f9a6c8c-098a-456e-86ba-f60e0b1069e1","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:45:00.000Z","last_edited_time":"2024-06-26T03:46:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"@opentelemetry/exporter-trace-otlp-http","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@opentelemetry/exporter-trace-otlp-http","href":null}],"color":"default"}},{"object":"block","id":"cad5b4e5-c8f9-4c8c-b425-cb6d1a3ac6c2","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:46:00.000Z","last_edited_time":"2024-06-26T03:52:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"とはいえ実験的とはいえ実装があるにはあるので使うことはできる。今回はHTTP通信でJSON形式のエクスポートをするために","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"とはいえ実験的とはいえ実装があるにはあるので使うことはできる。今回はHTTP通信でJSON形式のエクスポートをするために","href":null},{"type":"text","text":{"content":"@opentelemetry/exporter-trace-otlp-http","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@opentelemetry/exporter-trace-otlp-http","href":null},{"type":"text","text":{"content":" を参考にする。このパッケージはブラウザとNode.jsの両方向けの実装を含んでおり","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" を参考にする。このパッケージはブラウザとNode.jsの両方向けの実装を含んでおり","href":null},{"type":"text","text":{"content":"package.json","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"package.json","href":null},{"type":"text","text":{"content":"で読み込むモジュールを分岐させているがそこは今回のテーマではないので割愛する。重要なのは、このパッケージからは","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"で読み込むモジュールを分岐させているがそこは今回のテーマではないので割愛する。重要なのは、このパッケージからは","href":null},{"type":"text","text":{"content":"OTLPTraceExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"OTLPTraceExporter","href":null},{"type":"text","text":{"content":"というクラスが提供されることである。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"というクラスが提供されることである。","href":null}],"color":"default"}},{"object":"block","id":"41dcbffa-9659-4334-8141-9329f41ed114","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:50:00.000Z","last_edited_time":"2024-06-26T03:50:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"mention","mention":{"type":"link_preview","link_preview":{"url":"https://github.com/open-telemetry/opentelemetry-js/blob/main/experimental/packages/exporter-trace-otlp-http/src/platform/browser/OTLPTraceExporter.ts"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"https://github.com/open-telemetry/opentelemetry-js/blob/main/experimental/packages/exporter-trace-otlp-http/src/platform/browser/OTLPTraceExporter.ts","href":"https://github.com/open-telemetry/opentelemetry-js/blob/main/experimental/packages/exporter-trace-otlp-http/src/platform/browser/OTLPTraceExporter.ts"}],"color":"default"}},{"object":"block","id":"d26575db-449a-4879-9006-0ae48ffffdbb","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:51:00.000Z","last_edited_time":"2024-06-26T03:52:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"export class OTLPTraceExporter\n  extends OTLPExporterBrowserBase<ReadableSpan, IExportTraceServiceResponse>\n  implements SpanExporter\n{\n  constructor(config: OTLPExporterConfigBase = {}) {\n    super(config, JsonTraceSerializer, 'application/json');\n    //...\n  }\n  /// ...\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"export class OTLPTraceExporter\n  extends OTLPExporterBrowserBase<ReadableSpan, IExportTraceServiceResponse>\n  implements SpanExporter\n{\n  constructor(config: OTLPExporterConfigBase = {}) {\n    super(config, JsonTraceSerializer, 'application/json');\n    //...\n  }\n  /// ...\n}","href":null}],"language":"typescript"}},{"object":"block","id":"637f10c3-aa21-4f01-a173-da642aaffdbf","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:52:00.000Z","last_edited_time":"2024-06-26T03:57:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"OTLPTraceExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"OTLPTraceExporter","href":null},{"type":"text","text":{"content":"は","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"は","href":null},{"type":"text","text":{"content":"SpanExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SpanExporter","href":null},{"type":"text","text":{"content":"を実装しているが、コードを見ればわかるようにその具体的な実装はこのクラスではなく継承元の","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を実装しているが、コードを見ればわかるようにその具体的な実装はこのクラスではなく継承元の","href":null},{"type":"text","text":{"content":"OTLPExporterBrowserBase","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"OTLPExporterBrowserBase","href":null},{"type":"text","text":{"content":"に移譲している。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"に移譲している。","href":null},{"type":"text","text":{"content":"OTLPExporterBrowserBase","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"OTLPExporterBrowserBase","href":null},{"type":"text","text":{"content":" は","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" は","href":null},{"type":"text","text":{"content":"@opentelemetry/otlp-exporter-base","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@opentelemetry/otlp-exporter-base","href":null},{"type":"text","text":{"content":"から提供されているのでそちらを読みに行くと、ようやくスパンを送信している処理にたどりつく。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"から提供されているのでそちらを読みに行くと、ようやくスパンを送信している処理にたどりつく。","href":null}],"color":"default"}},{"object":"block","id":"367b0336-a74e-4d82-9401-8e1dbb68f275","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:55:00.000Z","last_edited_time":"2024-06-26T03:55:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"mention","mention":{"type":"link_preview","link_preview":{"url":"https://github.com/open-telemetry/opentelemetry-js/blob/main/experimental/packages/otlp-exporter-base/src/platform/browser/OTLPExporterBrowserBase.ts"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"https://github.com/open-telemetry/opentelemetry-js/blob/main/experimental/packages/otlp-exporter-base/src/platform/browser/OTLPExporterBrowserBase.ts","href":"https://github.com/open-telemetry/opentelemetry-js/blob/main/experimental/packages/otlp-exporter-base/src/platform/browser/OTLPExporterBrowserBase.ts"}],"color":"default"}},{"object":"block","id":"e11f5549-6f70-44b0-bac0-6312a42b1cfa","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:55:00.000Z","last_edited_time":"2024-06-26T03:56:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"/**\n * Collector Metric Exporter abstract base class\n */\nexport abstract class OTLPExporterBrowserBase<ExportItem, ServiceResponse> \n  extends OTLPExporterBase<OTLPExporterConfigBase, ExportItem> {\n  //...\n  constructor(\n    config: OTLPExporterConfigBase = {},\n    serializer: ISerializer<ExportItem[], ServiceResponse>,\n    contentType: string\n  ) {\n    super(config);\n    this._serializer = serializer;\n    this._contentType = contentType;\n    this._useXHR =\n      !!config.headers || typeof navigator.sendBeacon !== 'function';\n    if (this._useXHR) {\n      this._headers = Object.assign(\n        {},\n        parseHeaders(config.headers),\n        baggageUtils.parseKeyPairsIntoRecord(\n          getEnv().OTEL_EXPORTER_OTLP_HEADERS\n        )\n      );\n    } else {\n      this._headers = {};\n    }\n  }\n\n  //...\n\n  send(\n    items: ExportItem[],\n    onSuccess: () => void,\n    onError: (error: otlpTypes.OTLPExporterError) => void\n  ): void {\n    //...\n    const body = this._serializer.serializeRequest(items) ?? new Uint8Array();\n\n    const promise = new Promise<void>((resolve, reject) => {\n      if (this._useXHR) {\n        sendWithXhr(\n          body,\n          this.url,\n          {\n            ...this._headers,\n            'Content-Type': this._contentType,\n          },\n          this.timeoutMillis,\n          resolve,\n          reject\n        );\n      } else {\n        sendWithBeacon(\n          body,\n          this.url,\n          { type: this._contentType },\n          resolve,\n          reject\n        );\n      }\n    }).then(onSuccess, onError);\n\n    this._sendingPromises.push(promise);\n    const popPromise = () => {\n      const index = this._sendingPromises.indexOf(promise);\n      this._sendingPromises.splice(index, 1);\n    };\n    promise.then(popPromise, popPromise);\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"/**\n * Collector Metric Exporter abstract base class\n */\nexport abstract class OTLPExporterBrowserBase<ExportItem, ServiceResponse> \n  extends OTLPExporterBase<OTLPExporterConfigBase, ExportItem> {\n  //...\n  constructor(\n    config: OTLPExporterConfigBase = {},\n    serializer: ISerializer<ExportItem[], ServiceResponse>,\n    contentType: string\n  ) {\n    super(config);\n    this._serializer = serializer;\n    this._contentType = contentType;\n    this._useXHR =\n      !!config.headers || typeof navigator.sendBeacon !== 'function';\n    if (this._useXHR) {\n      this._headers = Object.assign(\n        {},\n        parseHeaders(config.headers),\n        baggageUtils.parseKeyPairsIntoRecord(\n          getEnv().OTEL_EXPORTER_OTLP_HEADERS\n        )\n      );\n    } else {\n      this._headers = {};\n    }\n  }\n\n  //...\n\n  send(\n    items: ExportItem[],\n    onSuccess: () => void,\n    onError: (error: otlpTypes.OTLPExporterError) => void\n  ): void {\n    //...\n    const body = this._serializer.serializeRequest(items) ?? new Uint8Array();\n\n    const promise = new Promise<void>((resolve, reject) => {\n      if (this._useXHR) {\n        sendWithXhr(\n          body,\n          this.url,\n          {\n            ...this._headers,\n            'Content-Type': this._contentType,\n          },\n          this.timeoutMillis,\n          resolve,\n          reject\n        );\n      } else {\n        sendWithBeacon(\n          body,\n          this.url,\n          { type: this._contentType },\n          resolve,\n          reject\n        );\n      }\n    }).then(onSuccess, onError);\n\n    this._sendingPromises.push(promise);\n    const popPromise = () => {\n      const index = this._sendingPromises.indexOf(promise);\n      this._sendingPromises.splice(index, 1);\n    };\n    promise.then(popPromise, popPromise);\n  }\n}","href":null}],"language":"typescript"}},{"object":"block","id":"cad4fad9-7cb3-4204-806a-438526c7ff47","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T03:57:00.000Z","last_edited_time":"2024-06-26T04:00:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"このクラスではコンフィグによってスパンの送信にXHRを使うか","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"このクラスではコンフィグによってスパンの送信にXHRを使うか","href":null},{"type":"text","text":{"content":"sendBeacon","link":{"url":"https://developer.mozilla.org/ja/docs/Web/API/Navigator/sendBeacon"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"sendBeacon","href":"https://developer.mozilla.org/ja/docs/Web/API/Navigator/sendBeacon"},{"type":"text","text":{"content":"を使うかを切り替えている。当初の目的を思い出すと、今回は","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を使うかを切り替えている。当初の目的を思い出すと、今回は","href":null},{"type":"text","text":{"content":"fetch","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"fetch","href":null},{"type":"text","text":{"content":"関数しか使えない環境でスパンを外部送信したいのだった。つまり、やるべきことはこの","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"関数しか使えない環境でスパンを外部送信したいのだった。つまり、やるべきことはこの","href":null},{"type":"text","text":{"content":"OTLPExporterBrowserBase","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"OTLPExporterBrowserBase","href":null},{"type":"text","text":{"content":" の処理の代替品を作らなければならないことだとわかる。ここまでを踏まえたうえで改めて今回自作した","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" の処理の代替品を作らなければならないことだとわかる。ここまでを踏まえたうえで改めて今回自作した","href":null},{"type":"text","text":{"content":"FetchTraceExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"FetchTraceExporter","href":null},{"type":"text","text":{"content":"を見てもらおう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を見てもらおう。","href":null}],"color":"default"}},{"object":"block","id":"c7943637-aa3e-4ca0-a8ac-1ef6c7c193f2","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T04:00:00.000Z","last_edited_time":"2024-06-26T04:39:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"まずクラス宣言は","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"まずクラス宣言は","href":null},{"type":"text","text":{"content":"OTLPExporterBrowserBase","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"OTLPExporterBrowserBase","href":null},{"type":"text","text":{"content":" を継承する形にしているが、実際は無駄な実装を多く含むので真面目に作るならゼロから作ったほうがいい。コンストラクタで","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" を継承する形にしているが、実際は無駄な実装を多く含むので真面目に作るならゼロから作ったほうがいい。コンストラクタで","href":null},{"type":"text","text":{"content":"super","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"super","href":null},{"type":"text","text":{"content":"コンストラクタを呼び出しているところの引数は実際にはまったく意味がないが、コンパイルを通すためだけに渡している。本質的なのは","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"コンストラクタを呼び出しているところの引数は実際にはまったく意味がないが、コンパイルを通すためだけに渡している。本質的なのは","href":null},{"type":"text","text":{"content":"send","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"send","href":null},{"type":"text","text":{"content":"メソッドで行っているスパン配列のシリアライズと","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"メソッドで行っているスパン配列のシリアライズと","href":null},{"type":"text","text":{"content":"fetch","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"fetch","href":null},{"type":"text","text":{"content":"関数でのPOSTリクエスト送信である。ここまでの流れを踏まえたうえでならこのコードの意味がわかってもらえるだろう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"関数でのPOSTリクエスト送信である。ここまでの流れを踏まえたうえでならこのコードの意味がわかってもらえるだろう。","href":null}],"color":"default"}},{"object":"block","id":"ec1c440e-0924-4b8c-a3b9-a97a2cf049a8","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T04:00:00.000Z","last_edited_time":"2024-06-26T04:37:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"import {\n  OTLPExporterBrowserBase,\n  OTLPExporterConfigBase,\n  OTLPExporterError,\n} from \"@opentelemetry/otlp-exporter-base\";\nimport {\n  IExportTraceServiceResponse,\n  JsonTraceSerializer,\n} from \"@opentelemetry/otlp-transformer\";\nimport { ReadableSpan } from \"@opentelemetry/sdk-trace-base\";\n\n/**\n * Custom OTLPTraceExporter implementation for Fetch API\n */\nexport class FetchTraceExporter extends OTLPExporterBrowserBase<\n  ReadableSpan,\n  IExportTraceServiceResponse\n> {\n  constructor(config: OTLPExporterConfigBase) {\n    // same as OTLPTraceExporter in @opentelemetry/exporter-trace-otlp-http\n    super(config, JsonTraceSerializer, \"application/json\");\n  }\n\n  override send(\n    items: ReadableSpan[],\n    onSuccess: () => void,\n    onError: (error: OTLPExporterError) => void\n  ): void {\n    const body =\n      JsonTraceSerializer.serializeRequest(items) ?? new Uint8Array();\n    const request = new Request(this.url, {\n      method: \"POST\",\n      body,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        ...this._headers,\n      },\n    });\n    const promise = fetch(request).then(onSuccess).catch(onError);\n    // for managing the sending promises concurrency\n    this._sendingPromises.push(promise);\n    promise.finally(() => {\n      const index = this._sendingPromises.indexOf(promise);\n      this._sendingPromises.splice(index, 1);\n    });\n  }\n\n  override getDefaultUrl(config: OTLPExporterConfigBase): string {\n    if (typeof config.url !== \"string\") {\n      throw new OTLPExporterError(\"config.url is not a string\");\n    }\n    return config.url;\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"import {\n  OTLPExporterBrowserBase,\n  OTLPExporterConfigBase,\n  OTLPExporterError,\n} from \"@opentelemetry/otlp-exporter-base\";\nimport {\n  IExportTraceServiceResponse,\n  JsonTraceSerializer,\n} from \"@opentelemetry/otlp-transformer\";\nimport { ReadableSpan } from \"@opentelemetry/sdk-trace-base\";\n\n/**\n * Custom OTLPTraceExporter implementation for Fetch API\n */\nexport class FetchTraceExporter extends OTLPExporterBrowserBase<\n  ReadableSpan,\n  IExportTraceServiceResponse\n> {\n  constructor(config: OTLPExporterConfigBase) {\n    // same as OTLPTraceExporter in @opentelemetry/exporter-trace-otlp-http\n    super(config, JsonTraceSerializer, \"application/json\");\n  }\n\n  override send(\n    items: ReadableSpan[],\n    onSuccess: () => void,\n    onError: (error: OTLPExporterError) => void\n  ): void {\n    const body =\n      JsonTraceSerializer.serializeRequest(items) ?? new Uint8Array();\n    const request = new Request(this.url, {\n      method: \"POST\",\n      body,\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n        ...this._headers,\n      },\n    });\n    const promise = fetch(request).then(onSuccess).catch(onError);\n    // for managing the sending promises concurrency\n    this._sendingPromises.push(promise);\n    promise.finally(() => {\n      const index = this._sendingPromises.indexOf(promise);\n      this._sendingPromises.splice(index, 1);\n    });\n  }\n\n  override getDefaultUrl(config: OTLPExporterConfigBase): string {\n    if (typeof config.url !== \"string\") {\n      throw new OTLPExporterError(\"config.url is not a string\");\n    }\n    return config.url;\n  }\n}","href":null}],"language":"typescript"}},{"object":"block","id":"8ced710b-2396-4a9e-bba1-d2675e89767c","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T04:37:00.000Z","last_edited_time":"2024-06-26T04:42:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"このように実装した","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"このように実装した","href":null},{"type":"text","text":{"content":"FetchTraceExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"FetchTraceExporter","href":null},{"type":"text","text":{"content":"を","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を","href":null},{"type":"text","text":{"content":"TracerProvider","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"TracerProvider","href":null},{"type":"text","text":{"content":"のセットアップに組み込むのは簡単で、引数に","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"のセットアップに組み込むのは簡単で、引数に","href":null},{"type":"text","text":{"content":"SpanExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SpanExporter","href":null},{"type":"text","text":{"content":"を受け取る","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を受け取る","href":null},{"type":"text","text":{"content":"SpanProcessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SpanProcessor","href":null},{"type":"text","text":{"content":"クラスに渡せばよい。今回はデモなので雑にhoneycombに送信する作りにしており、そのエンドポイントと認証ヘッダ設定を加えた","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"クラスに渡せばよい。今回はデモなので雑にhoneycombに送信する作りにしており、そのエンドポイントと認証ヘッダ設定を加えた","href":null},{"type":"text","text":{"content":"honeycombExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"honeycombExporter","href":null},{"type":"text","text":{"content":" としてインスタンス化し、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" としてインスタンス化し、","href":null},{"type":"text","text":{"content":"SimpleSpanProcessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SimpleSpanProcessor","href":null},{"type":"text","text":{"content":"に渡している。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"に渡している。","href":null}],"color":"default"}},{"object":"block","id":"171f7feb-5819-4d3d-bce0-4022802a5962","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T04:40:00.000Z","last_edited_time":"2024-06-26T04:43:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"import { W3CTraceContextPropagator } from \"@opentelemetry/core\";\nimport { Resource } from \"@opentelemetry/resources\";\nimport {\n  BasicTracerProvider,\n  SimpleSpanProcessor,\n} from \"@opentelemetry/sdk-trace-base\";\nimport { StackContextManager } from \"@opentelemetry/sdk-trace-web\";\nimport { SEMRESATTRS_SERVICE_NAME } from \"@opentelemetry/semantic-conventions\";\nimport { FetchTraceExporter } from \"./exporter\";\n\nconst honeycombExporter = new FetchTraceExporter({\n  url: \"https://api.honeycomb.io/v1/traces\",\n  headers: {\n    \"X-Honeycomb-Team\": \"...\",\n  },\n});\n\nexport function registerTraceProvider(serviceName: string) {\n  const provider = new BasicTracerProvider({\n    resource: new Resource({\n      [SEMRESATTRS_SERVICE_NAME]: serviceName,\n    }),\n  });\n  // export traces to honeycomb.io\n  provider.addSpanProcessor(new SimpleSpanProcessor(honeycombExporter));\n  // extract|inject w3c trace context\n  provider.register({\n    propagator: new W3CTraceContextPropagator(),\n    contextManager: new StackContextManager(),\n  });\n  return provider;\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"import { W3CTraceContextPropagator } from \"@opentelemetry/core\";\nimport { Resource } from \"@opentelemetry/resources\";\nimport {\n  BasicTracerProvider,\n  SimpleSpanProcessor,\n} from \"@opentelemetry/sdk-trace-base\";\nimport { StackContextManager } from \"@opentelemetry/sdk-trace-web\";\nimport { SEMRESATTRS_SERVICE_NAME } from \"@opentelemetry/semantic-conventions\";\nimport { FetchTraceExporter } from \"./exporter\";\n\nconst honeycombExporter = new FetchTraceExporter({\n  url: \"https://api.honeycomb.io/v1/traces\",\n  headers: {\n    \"X-Honeycomb-Team\": \"...\",\n  },\n});\n\nexport function registerTraceProvider(serviceName: string) {\n  const provider = new BasicTracerProvider({\n    resource: new Resource({\n      [SEMRESATTRS_SERVICE_NAME]: serviceName,\n    }),\n  });\n  // export traces to honeycomb.io\n  provider.addSpanProcessor(new SimpleSpanProcessor(honeycombExporter));\n  // extract|inject w3c trace context\n  provider.register({\n    propagator: new W3CTraceContextPropagator(),\n    contextManager: new StackContextManager(),\n  });\n  return provider;\n}","href":null}],"language":"typescript"}},{"object":"block","id":"e7ae52b1-ef08-4eef-a17f-1f3bb52f352a","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T04:43:00.000Z","last_edited_time":"2024-06-26T04:43:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"FetchTraceExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"FetchTraceExporter","href":null},{"type":"text","text":{"content":"に関しては以上で解説は十分だろう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"に関しては以上で解説は十分だろう。","href":null}],"color":"default"}},{"object":"block","id":"f6ae8834-3165-480a-b932-552568e354ad","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T04:43:00.000Z","last_edited_time":"2024-06-26T04:43:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[],"color":"default"}},{"object":"block","id":"793f79a7-32bd-4b65-baa7-c3bf7130b007","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T04:43:00.000Z","last_edited_time":"2024-06-26T04:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"Trace on Service Worker","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Trace on Service Worker","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"db0e1ee3-44fb-4ed1-8d79-b2411e378ac2","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T04:44:00.000Z","last_edited_time":"2024-06-26T04:57:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"次に、Service Worker上でトレースの計装を行う上で考慮した点を解説する。PoCでのserviceWorker.tsの実装全文は以下のとおりである。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"次に、Service Worker上でトレースの計装を行う上で考慮した点を解説する。PoCでのserviceWorker.tsの実装全文は以下のとおりである。","href":null}],"color":"default"}},{"object":"block","id":"8766487a-3d60-4b72-9905-c3015a5b8ab9","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T04:57:00.000Z","last_edited_time":"2024-06-26T04:59:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[{"type":"text","text":{"content":"serviceWorker.ts","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"serviceWorker.ts","href":null}],"rich_text":[{"type":"text","text":{"content":"/// <reference lib=\"WebWorker\" />\nimport {\n  SpanKind,\n  SpanOptions,\n  context,\n  propagation,\n  trace,\n} from \"@opentelemetry/api\";\n\nimport * as SemanticAttributes from \"@opentelemetry/semantic-conventions\";\nimport { registerTraceProvider } from \"../opentelemetry/trace-provider\";\n\ndeclare const self: ServiceWorkerGlobalScope;\n\n/**\n * Setup Otel tracer for fetch events\n */\nfunction setupTracer() {\n  registerTraceProvider(\"browser-service-worker\");\n}\n\nfunction getRequestSpanOptions(request: Request): SpanOptions {\n  return {\n    attributes: {\n      [SemanticAttributes.SEMATTRS_HTTP_URL]: request.url,\n      [SemanticAttributes.SEMATTRS_HTTP_METHOD]: request.method.toUpperCase(),\n    },\n    kind: SpanKind.CLIENT,\n  };\n}\n\n// setup tracer on activate\nself.addEventListener(\"activate\", (event) => {\n  console.log(\"Service worker activated\");\n  setupTracer();\n});\n\nself.addEventListener(\"fetch\", (event) => {\n  const { request } = event;\n  // trace only requests from the same origin APIs\n  const reqURL = new URL(request.url);\n  const isApiRequest =\n    reqURL.origin === self.location.origin &&\n    reqURL.pathname.startsWith(\"/api\");\n  if (!isApiRequest) {\n    return;\n  }\n\n  // extract context from main thread\n  const traceContext = propagation.extract<Headers>(\n    context.active(),\n    request.headers,\n    {\n      keys: (carrier) => Object.keys(carrier),\n      get: (carrier, key) => carrier.get(key) ?? undefined,\n    }\n  );\n\n  // start fetch span\n  const tracer = trace.getTracer(\"sw-fetch\");\n  const spanOptions = getRequestSpanOptions(request);\n  const promise = tracer.startActiveSpan(\n    \"fetch\",\n    spanOptions,\n    traceContext,\n    async (span) => {\n      // propagate trace context to the server\n      const headers = new Headers(request.headers);\n      propagation.inject<Headers>(context.active(), headers, {\n        set: (carrier, key, value) => carrier.set(key, value),\n      });\n\n      return fetch(new Request(request, { headers }))\n        .then((resp) => {\n          span.setAttribute(\n            SemanticAttributes.SEMATTRS_HTTP_STATUS_CODE,\n            resp.status\n          );\n          return resp;\n        })\n        .finally(() => {\n          span.end();\n        });\n    }\n  );\n  event.respondWith(promise);\n});\n","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"/// <reference lib=\"WebWorker\" />\nimport {\n  SpanKind,\n  SpanOptions,\n  context,\n  propagation,\n  trace,\n} from \"@opentelemetry/api\";\n\nimport * as SemanticAttributes from \"@opentelemetry/semantic-conventions\";\nimport { registerTraceProvider } from \"../opentelemetry/trace-provider\";\n\ndeclare const self: ServiceWorkerGlobalScope;\n\n/**\n * Setup Otel tracer for fetch events\n */\nfunction setupTracer() {\n  registerTraceProvider(\"browser-service-worker\");\n}\n\nfunction getRequestSpanOptions(request: Request): SpanOptions {\n  return {\n    attributes: {\n      [SemanticAttributes.SEMATTRS_HTTP_URL]: request.url,\n      [SemanticAttributes.SEMATTRS_HTTP_METHOD]: request.method.toUpperCase(),\n    },\n    kind: SpanKind.CLIENT,\n  };\n}\n\n// setup tracer on activate\nself.addEventListener(\"activate\", (event) => {\n  console.log(\"Service worker activated\");\n  setupTracer();\n});\n\nself.addEventListener(\"fetch\", (event) => {\n  const { request } = event;\n  // trace only requests from the same origin APIs\n  const reqURL = new URL(request.url);\n  const isApiRequest =\n    reqURL.origin === self.location.origin &&\n    reqURL.pathname.startsWith(\"/api\");\n  if (!isApiRequest) {\n    return;\n  }\n\n  // extract context from main thread\n  const traceContext = propagation.extract<Headers>(\n    context.active(),\n    request.headers,\n    {\n      keys: (carrier) => Object.keys(carrier),\n      get: (carrier, key) => carrier.get(key) ?? undefined,\n    }\n  );\n\n  // start fetch span\n  const tracer = trace.getTracer(\"sw-fetch\");\n  const spanOptions = getRequestSpanOptions(request);\n  const promise = tracer.startActiveSpan(\n    \"fetch\",\n    spanOptions,\n    traceContext,\n    async (span) => {\n      // propagate trace context to the server\n      const headers = new Headers(request.headers);\n      propagation.inject<Headers>(context.active(), headers, {\n        set: (carrier, key, value) => carrier.set(key, value),\n      });\n\n      return fetch(new Request(request, { headers }))\n        .then((resp) => {\n          span.setAttribute(\n            SemanticAttributes.SEMATTRS_HTTP_STATUS_CODE,\n            resp.status\n          );\n          return resp;\n        })\n        .finally(() => {\n          span.end();\n        });\n    }\n  );\n  event.respondWith(promise);\n});\n","href":null}],"language":"typescript"}},{"object":"block","id":"c538e576-f2aa-4920-ab4c-efcc8be6fbe6","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T04:59:00.000Z","last_edited_time":"2024-06-26T04:59:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_3","heading_3":{"rich_text":[{"type":"text","text":{"content":"setupTracer関数","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"setupTracer関数","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"bcc5b549-ea46-4b1f-85f6-4b5ac4678d31","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T04:59:00.000Z","last_edited_time":"2024-06-26T05:01:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"この関数は上述の","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"この関数は上述の","href":null},{"type":"text","text":{"content":"FetchTraceExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"FetchTraceExporter","href":null},{"type":"text","text":{"content":"を組み込んだ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を組み込んだ","href":null},{"type":"text","text":{"content":"TracerProvider","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"TracerProvider","href":null},{"type":"text","text":{"content":"を初期化し、グローバルトレーサーとして登録するものである。Service Workerがアクティブな間は一回だけ実行すればよいので、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を初期化し、グローバルトレーサーとして登録するものである。Service Workerがアクティブな間は一回だけ実行すればよいので、","href":null},{"type":"text","text":{"content":"activate","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"activate","href":null},{"type":"text","text":{"content":"イベントで呼び出している。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"イベントで呼び出している。","href":null}],"color":"default"}},{"object":"block","id":"967896e5-3f7d-4704-ac67-9d92ab645646","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:01:00.000Z","last_edited_time":"2024-06-26T05:01:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[],"color":"default"}},{"object":"block","id":"5125a694-cf3c-4e1c-af96-f575ff408441","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:00:00.000Z","last_edited_time":"2024-06-26T05:01:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_3","heading_3":{"rich_text":[{"type":"text","text":{"content":"fetchイベントハンドラ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"fetchイベントハンドラ","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"450ec6b7-29f2-47f6-bd4a-e21186563178","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:01:00.000Z","last_edited_time":"2024-06-26T05:02:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"ここが本丸だが、いくつかのステップに分けて考えられる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ここが本丸だが、いくつかのステップに分けて考えられる。","href":null}],"color":"default"}},{"object":"block","id":"c59fe305-4633-49c4-b096-82cc0838e157","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:01:00.000Z","last_edited_time":"2024-06-26T05:02:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"リクエストのフィルタリング","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"リクエストのフィルタリング","href":null}],"color":"default"}},{"object":"block","id":"76963a9f-1b4a-4575-b126-defe6c46750b","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:02:00.000Z","last_edited_time":"2024-06-26T05:02:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"メインスレッドからのトレースコンテキストの抽出","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"メインスレッドからのトレースコンテキストの抽出","href":null}],"color":"default"}},{"object":"block","id":"dcd3769c-15f3-4e8a-9302-74facfc1f43b","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:02:00.000Z","last_edited_time":"2024-06-26T05:02:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"スパンの作成とトレースコンテキストの注入","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"スパンの作成とトレースコンテキストの注入","href":null}],"color":"default"}},{"object":"block","id":"5f09c1ac-9ae1-459e-b9d4-34cbb0550d26","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:02:00.000Z","last_edited_time":"2024-06-26T05:03:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"オリジンサーバーへのfetchリクエスト","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"オリジンサーバーへのfetchリクエスト","href":null}],"color":"default"}},{"object":"block","id":"02eebd29-1ce5-4567-bd6e-8e4850952dfe","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:03:00.000Z","last_edited_time":"2024-06-26T05:03:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"レスポンス情報のスパン属性書き込み","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"レスポンス情報のスパン属性書き込み","href":null}],"color":"default"}},{"object":"block","id":"8cb824ad-0393-4737-8fc7-268ea0137885","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:03:00.000Z","last_edited_time":"2024-06-26T05:03:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"スパンの完了","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"スパンの完了","href":null}],"color":"default"}},{"object":"block","id":"025e9488-7b82-4f88-ac8f-c5e74ece1b6b","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:03:00.000Z","last_edited_time":"2024-06-26T05:03:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"メインスレッドへのレスポンス返却","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"メインスレッドへのレスポンス返却","href":null}],"color":"default"}},{"object":"block","id":"34421bee-8427-4406-9caf-fbc2696c6478","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:03:00.000Z","last_edited_time":"2024-06-26T05:04:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"まずリクエストのフィルタリングについては、このfetchイベントにはあらゆるHTTPリクエストが渡されてくるので、計装対象とすべきものを仕分ける必要がある。今回はバックエンドAPIだけを対象としたが別に静的ファイルも含めてよいし、ここは自由である。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"まずリクエストのフィルタリングについては、このfetchイベントにはあらゆるHTTPリクエストが渡されてくるので、計装対象とすべきものを仕分ける必要がある。今回はバックエンドAPIだけを対象としたが別に静的ファイルも含めてよいし、ここは自由である。","href":null}],"color":"default"}},{"object":"block","id":"3fa22965-2346-4c6d-88a2-a50b145ba3b1","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:04:00.000Z","last_edited_time":"2024-06-26T05:08:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"メインスレッドからのトレースコンテキストの抽出は、Service Workerだけでなくフロントエンド実装にもOTelの計装があることを考慮して分散トレースが可能となるようにしている。メインスレッドがOTLPに準拠していれば、HTTPヘッダにトレースコンテキストが含まれている。それを取り出すのに","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"メインスレッドからのトレースコンテキストの抽出は、Service Workerだけでなくフロントエンド実装にもOTelの計装があることを考慮して分散トレースが可能となるようにしている。メインスレッドがOTLPに準拠していれば、HTTPヘッダにトレースコンテキストが含まれている。それを取り出すのに","href":null},{"type":"text","text":{"content":"@open-telemetry/api","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@open-telemetry/api","href":null},{"type":"text","text":{"content":"の","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"の","href":null},{"type":"text","text":{"content":"propagation","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"propagation","href":null},{"type":"text","text":{"content":" APIを使う。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" APIを使う。","href":null}],"color":"default"}},{"object":"block","id":"c438bd0d-c896-43cc-816d-954c990c3d98","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:08:00.000Z","last_edited_time":"2024-06-26T05:13:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"propagation.extract","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"propagation.extract","href":null},{"type":"text","text":{"content":"メソッドは、引数に渡したコンテキストにヘッダから取り出したトレースコンテキストをマージした新しいコンテキストを返してくれる。第2引数に渡したオブジェクトから第3引数に渡した関数を使って値を取り出してくれるのだが、この処理で具体的にどのヘッダをどう解釈するのかについては、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"メソッドは、引数に渡したコンテキストにヘッダから取り出したトレースコンテキストをマージした新しいコンテキストを返してくれる。第2引数に渡したオブジェクトから第3引数に渡した関数を使って値を取り出してくれるのだが、この処理で具体的にどのヘッダをどう解釈するのかについては、","href":null},{"type":"text","text":{"content":"TracerProvider","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"TracerProvider","href":null},{"type":"text","text":{"content":"の定義で","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"の定義で","href":null},{"type":"text","text":{"content":"Propagator","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Propagator","href":null},{"type":"text","text":{"content":"を設定しておく必要がある。今回は標準的な","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を設定しておく必要がある。今回は標準的な","href":null},{"type":"text","text":{"content":"traceparent","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"traceparent","href":null},{"type":"text","text":{"content":"ヘッダをW3Cの仕様通りに解釈したいので、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ヘッダをW3Cの仕様通りに解釈したいので、","href":null},{"type":"text","text":{"content":"@opentelemetry/core","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@opentelemetry/core","href":null},{"type":"text","text":{"content":"から提供される","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"から提供される","href":null},{"type":"text","text":{"content":"W3CTraceContextPropagator","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"W3CTraceContextPropagator","href":null},{"type":"text","text":{"content":"を利用している。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を利用している。","href":null}],"color":"default"}},{"object":"block","id":"90e05506-89c2-4264-b0f9-c205a0eb8366","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:06:00.000Z","last_edited_time":"2024-06-26T05:11:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[{"type":"text","text":{"content":"HTTPリクエストヘッダからトレースコンテキストを抽出する","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"HTTPリクエストヘッダからトレースコンテキストを抽出する","href":null}],"rich_text":[{"type":"text","text":{"content":"  const traceContext = propagation.extract<Headers>(\n    context.active(),\n    request.headers,\n    {\n      keys: (carrier) => Object.keys(carrier),\n      get: (carrier, key) => carrier.get(key) ?? undefined,\n    }\n  );","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"  const traceContext = propagation.extract<Headers>(\n    context.active(),\n    request.headers,\n    {\n      keys: (carrier) => Object.keys(carrier),\n      get: (carrier, key) => carrier.get(key) ?? undefined,\n    }\n  );","href":null}],"language":"typescript"}},{"object":"block","id":"6f0a6238-0a4d-404e-bea4-93af40b07ad2","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:01:00.000Z","last_edited_time":"2024-06-26T05:11:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[{"type":"text","text":{"content":"TracerProviderにW3CTraceContextPropagatorを設定する","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"TracerProviderにW3CTraceContextPropagatorを設定する","href":null}],"rich_text":[{"type":"text","text":{"content":"provider.register({\n  propagator: new W3CTraceContextPropagator(),\n});","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"provider.register({\n  propagator: new W3CTraceContextPropagator(),\n});","href":null}],"language":"typescript"}},{"object":"block","id":"62585a90-40f0-4bc8-a040-039909690810","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:12:00.000Z","last_edited_time":"2024-06-26T05:17:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"ここまで準備ができたら、Service Worker内でスパンを開始する。先ほど抽出したコンテキストをもとに","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ここまで準備ができたら、Service Worker内でスパンを開始する。先ほど抽出したコンテキストをもとに","href":null},{"type":"text","text":{"content":"startActiveSpan","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"startActiveSpan","href":null},{"type":"text","text":{"content":"すれば、親が存在すれば子スパンとなるし、なければここがルートスパンとなる。また、バックエンドへ送るリクエストヘッダにはこのスパンを作成したあとのアクティブコンテキスト ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"すれば、親が存在すれば子スパンとなるし、なければここがルートスパンとなる。また、バックエンドへ送るリクエストヘッダにはこのスパンを作成したあとのアクティブコンテキスト ","href":null},{"type":"text","text":{"content":"context.active()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"context.active()","href":null},{"type":"text","text":{"content":" を注入することで、バックエンド側のスパンとの間に親子関係を指定できる。大事なのはかならずスパンを完了させることで、リクエストの成功・失敗にかかわらず","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" を注入することで、バックエンド側のスパンとの間に親子関係を指定できる。大事なのはかならずスパンを完了させることで、リクエストの成功・失敗にかかわらず","href":null},{"type":"text","text":{"content":"finally","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"finally","href":null},{"type":"text","text":{"content":"メソッドで","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"メソッドで","href":null},{"type":"text","text":{"content":"span.end()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"span.end()","href":null},{"type":"text","text":{"content":"を呼び出している。また、メインスレッドにレスポンスを返すのも忘れないようにしよう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を呼び出している。また、メインスレッドにレスポンスを返すのも忘れないようにしよう。","href":null}],"color":"default"}},{"object":"block","id":"938ab39c-0f8c-4fa7-b8d6-ad9fc808560f","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:14:00.000Z","last_edited_time":"2024-06-26T05:17:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[{"type":"text","text":{"content":"スパンの作成とリクエストの送信処理","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"スパンの作成とリクエストの送信処理","href":null}],"rich_text":[{"type":"text","text":{"content":"const promise = tracer.startActiveSpan(\n  \"fetch\",\n  spanOptions,\n  traceContext,\n  async (span) => {\n    // propagate trace context to the server\n    const headers = new Headers(request.headers);\n    propagation.inject<Headers>(context.active(), headers, {\n      set: (carrier, key, value) => carrier.set(key, value),\n    });\n\n    return fetch(new Request(request, { headers }))\n      .then((resp) => {\n        span.setAttribute(\n          SemanticAttributes.SEMATTRS_HTTP_STATUS_CODE,\n          resp.status\n        );\n        return resp;\n      })\n      .finally(() => {\n        span.end();\n      });\n  }\n);\nevent.respondWith(promise);","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"const promise = tracer.startActiveSpan(\n  \"fetch\",\n  spanOptions,\n  traceContext,\n  async (span) => {\n    // propagate trace context to the server\n    const headers = new Headers(request.headers);\n    propagation.inject<Headers>(context.active(), headers, {\n      set: (carrier, key, value) => carrier.set(key, value),\n    });\n\n    return fetch(new Request(request, { headers }))\n      .then((resp) => {\n        span.setAttribute(\n          SemanticAttributes.SEMATTRS_HTTP_STATUS_CODE,\n          resp.status\n        );\n        return resp;\n      })\n      .finally(() => {\n        span.end();\n      });\n  }\n);\nevent.respondWith(promise);","href":null}],"language":"typescript"}},{"object":"block","id":"09bd8534-b00f-47e7-993b-5f0c8e596bb2","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:17:00.000Z","last_edited_time":"2024-06-26T05:19:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"やることは多いが、それぞれはOpenTelemetryの基本的な計装のステップなので、それほど難しくない。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"やることは多いが、それぞれはOpenTelemetryの基本的な計装のステップなので、それほど難しくない。","href":null},{"type":"text","text":{"content":"propagation","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"propagation","href":null},{"type":"text","text":{"content":"や","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"や","href":null},{"type":"text","text":{"content":"context","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"context","href":null},{"type":"text","text":{"content":"などの概念を理解していれば自然と読み解けるだろう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"などの概念を理解していれば自然と読み解けるだろう。","href":null}],"color":"default"}},{"object":"block","id":"ce24d46e-718f-4fe8-a36c-9c4f87eb0851","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:19:00.000Z","last_edited_time":"2024-06-26T05:19:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"おまけ: Cloudflare Workerでの計装","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"おまけ: Cloudflare Workerでの計装","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"9b16bbed-9232-404a-a783-81b354d65557","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:19:00.000Z","last_edited_time":"2024-06-26T05:21:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"今回のPoCの本質ではないが、分散トレースのサンプルとしてバックエンドAPIをCloudflare Workerで用意した。この環境もブラウザでもNode.jsでもない特殊な環境で、結果的にはService Workerのために作った","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"今回のPoCの本質ではないが、分散トレースのサンプルとしてバックエンドAPIをCloudflare Workerで用意した。この環境もブラウザでもNode.jsでもない特殊な環境で、結果的にはService Workerのために作った","href":null},{"type":"text","text":{"content":"FetchTraceExporter","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"FetchTraceExporter","href":null},{"type":"text","text":{"content":"が役立つ結果になった。PoCで使った","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"が役立つ結果になった。PoCで使った","href":null},{"type":"text","text":{"content":"echo","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"echo","href":null},{"type":"text","text":{"content":"エンドポイントのコード全文は以下のとおりである。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"エンドポイントのコード全文は以下のとおりである。","href":null}],"color":"default"}},{"object":"block","id":"3a9ce7ff-fd46-402a-99aa-43753da3a88d","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:21:00.000Z","last_edited_time":"2024-06-26T05:24:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[{"type":"text","text":{"content":"functions/api/echo.ts","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"functions/api/echo.ts","href":null}],"rich_text":[{"type":"text","text":{"content":"import {\n  SpanKind,\n  SpanOptions,\n  context,\n  propagation,\n  trace,\n} from \"@opentelemetry/api\";\nimport * as SemanticAttributes from \"@opentelemetry/semantic-conventions\";\nimport { registerTraceProvider } from \"../../opentelemetry/trace-provider\";\n\n/**\n * Setup Otel tracer for fetch events\n */\nfunction setupTracer() {\n  registerTraceProvider(\"worker-api\");\n}\n\nfunction getTracer() {\n  return trace.getTracer(\"worker-api\");\n}\n\nfunction getRequestSpanOptions(request: Request): SpanOptions {\n  return {\n    attributes: {\n      [SemanticAttributes.SEMATTRS_HTTP_URL]: request.url,\n      [SemanticAttributes.SEMATTRS_HTTP_METHOD]: request.method,\n    },\n    kind: SpanKind.SERVER,\n  };\n}\n\n/**\n * Echo handler: returns the request body\n */\nexport const onRequest: PagesFunction = async (event) => {\n  setupTracer();\n\n  const { request } = event;\n  console.log(\"headers\", request.headers);\n  // extract context from client\n  const traceContext = propagation.extract<Headers>(\n    context.active(),\n    request.headers,\n    {\n      keys: (carrier) => Array.from(carrier.keys()),\n      get: (carrier, key) => carrier.get(key) ?? undefined,\n    }\n  );\n\n  // start onRequest span\n  const tracer = trace.getTracer(\"worker-api\");\n  const spanOptions = getRequestSpanOptions(request);\n  return tracer.startActiveSpan(\n    \"onRequest\",\n    spanOptions,\n    traceContext,\n    async (span) => {\n      try {\n        const message = await generateMessage();\n        const respBody = { message };\n        span.setAttribute(SemanticAttributes.SEMATTRS_HTTP_STATUS_CODE, 200);\n        return new Response(JSON.stringify(respBody), {\n          headers: { \"content-type\": \"application/json\" },\n        });\n      } catch (error) {\n        span.setAttribute(SemanticAttributes.SEMATTRS_HTTP_STATUS_CODE, 500);\n        return new Response(\"Internal Server Error\", { status: 500 });\n      } finally {\n        span.end();\n      }\n    }\n  );\n};\n\nasync function generateMessage(): Promise<string> {\n  return getTracer().startActiveSpan(\"generateMessage\", (span) => {\n    // simulate async operation\n    return new Promise<string>((resolve) => {\n      setTimeout(() => {\n        resolve(\"Hello, world!\");\n        span.end();\n      }, 100);\n    });\n  });\n}\n","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"import {\n  SpanKind,\n  SpanOptions,\n  context,\n  propagation,\n  trace,\n} from \"@opentelemetry/api\";\nimport * as SemanticAttributes from \"@opentelemetry/semantic-conventions\";\nimport { registerTraceProvider } from \"../../opentelemetry/trace-provider\";\n\n/**\n * Setup Otel tracer for fetch events\n */\nfunction setupTracer() {\n  registerTraceProvider(\"worker-api\");\n}\n\nfunction getTracer() {\n  return trace.getTracer(\"worker-api\");\n}\n\nfunction getRequestSpanOptions(request: Request): SpanOptions {\n  return {\n    attributes: {\n      [SemanticAttributes.SEMATTRS_HTTP_URL]: request.url,\n      [SemanticAttributes.SEMATTRS_HTTP_METHOD]: request.method,\n    },\n    kind: SpanKind.SERVER,\n  };\n}\n\n/**\n * Echo handler: returns the request body\n */\nexport const onRequest: PagesFunction = async (event) => {\n  setupTracer();\n\n  const { request } = event;\n  console.log(\"headers\", request.headers);\n  // extract context from client\n  const traceContext = propagation.extract<Headers>(\n    context.active(),\n    request.headers,\n    {\n      keys: (carrier) => Array.from(carrier.keys()),\n      get: (carrier, key) => carrier.get(key) ?? undefined,\n    }\n  );\n\n  // start onRequest span\n  const tracer = trace.getTracer(\"worker-api\");\n  const spanOptions = getRequestSpanOptions(request);\n  return tracer.startActiveSpan(\n    \"onRequest\",\n    spanOptions,\n    traceContext,\n    async (span) => {\n      try {\n        const message = await generateMessage();\n        const respBody = { message };\n        span.setAttribute(SemanticAttributes.SEMATTRS_HTTP_STATUS_CODE, 200);\n        return new Response(JSON.stringify(respBody), {\n          headers: { \"content-type\": \"application/json\" },\n        });\n      } catch (error) {\n        span.setAttribute(SemanticAttributes.SEMATTRS_HTTP_STATUS_CODE, 500);\n        return new Response(\"Internal Server Error\", { status: 500 });\n      } finally {\n        span.end();\n      }\n    }\n  );\n};\n\nasync function generateMessage(): Promise<string> {\n  return getTracer().startActiveSpan(\"generateMessage\", (span) => {\n    // simulate async operation\n    return new Promise<string>((resolve) => {\n      setTimeout(() => {\n        resolve(\"Hello, world!\");\n        span.end();\n      }, 100);\n    });\n  });\n}\n","href":null}],"language":"typescript"}},{"object":"block","id":"d3e90b2c-3fbc-4442-9943-1456feafa077","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:19:00.000Z","last_edited_time":"2024-06-26T05:27:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"やっていることはService Workerの","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"やっていることはService Workerの","href":null},{"type":"text","text":{"content":"fetch","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"fetch","href":null},{"type":"text","text":{"content":"ハンドラとほとんど同じで、リクエストからトレースコンテキストを抽出し、そのコンテキストを使って新たなスパンを作成し、処理が終わったらスパンを完了しているだけである。やってることは難しくないがやはり冗長ではあるので、このあたり汎用的なインターフェースで抽象化したレイヤーが欲しくなる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ハンドラとほとんど同じで、リクエストからトレースコンテキストを抽出し、そのコンテキストを使って新たなスパンを作成し、処理が終わったらスパンを完了しているだけである。やってることは難しくないがやはり冗長ではあるので、このあたり汎用的なインターフェースで抽象化したレイヤーが欲しくなる。","href":null}],"color":"default"}},{"object":"block","id":"d5906ffb-23a5-489a-848a-b726b73f1ee2","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:27:00.000Z","last_edited_time":"2024-06-26T05:30:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"課題: BatchSpanProcessor対応","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"課題: BatchSpanProcessor対応","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"b3d6fb43-4bc8-4985-a443-3c016d60bd96","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:27:00.000Z","last_edited_time":"2024-06-26T05:50:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"また、実はPoCのために手抜きをした部分があり、それはこの実装は","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"また、実はPoCのために手抜きをした部分があり、それはこの実装は","href":null},{"type":"text","text":{"content":"BatchSpanProcessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"BatchSpanProcessor","href":null},{"type":"text","text":{"content":"ではうまくいかないということだ。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ではうまくいかないということだ。","href":null}],"color":"default"}},{"object":"block","id":"7c337c14-b33a-42cc-8bd5-2bfabbaf7b0c","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:50:00.000Z","last_edited_time":"2024-06-26T05:50:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"BatchSpanProcessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"BatchSpanProcessor","href":null},{"type":"text","text":{"content":"は一定時間おきにストックしたスパンを非同期的にまとめて処理するわけだが、タイムサイクルが短いランタイムだと一定時間が経過する前にシャットダウンしてしまうことがある。そうするとスパンが送られずに虚空に消えてしまうので、いわゆるgraceful shutdownを行い、強制的にすべて送信してからシャットダウンされるようにしなければならない。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"は一定時間おきにストックしたスパンを非同期的にまとめて処理するわけだが、タイムサイクルが短いランタイムだと一定時間が経過する前にシャットダウンしてしまうことがある。そうするとスパンが送られずに虚空に消えてしまうので、いわゆるgraceful shutdownを行い、強制的にすべて送信してからシャットダウンされるようにしなければならない。","href":null}],"color":"default"}},{"object":"block","id":"15fb7911-cc9f-4ba2-ac2d-c036bc861b6b","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:33:00.000Z","last_edited_time":"2024-06-26T05:50:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"この強制的な送信は","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"この強制的な送信は","href":null},{"type":"text","text":{"content":"SpanProcessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SpanProcessor","href":null},{"type":"text","text":{"content":"の","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"の","href":null},{"type":"text","text":{"content":"forceFlush","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"forceFlush","href":null},{"type":"text","text":{"content":"メソッドを呼び出すことでトリガーできるのだが、問題はこのメソッドをどうやって呼び出すかである。Service Workerには","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"メソッドを呼び出すことでトリガーできるのだが、問題はこのメソッドをどうやって呼び出すかである。Service Workerには","href":null},{"type":"text","text":{"content":"install","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"install","href":null},{"type":"text","text":{"content":"や","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"や","href":null},{"type":"text","text":{"content":"activate","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"activate","href":null},{"type":"text","text":{"content":"といった開始イベントはあるが、逆に登録が解除されるときに発火される","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"といった開始イベントはあるが、逆に登録が解除されるときに発火される","href":null},{"type":"text","text":{"content":"deactivate","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"deactivate","href":null},{"type":"text","text":{"content":"イベントは存在しない。そうなるとflushできるタイミングは","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"イベントは存在しない。そうなるとflushできるタイミングは","href":null},{"type":"text","text":{"content":"fetch","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"fetch","href":null},{"type":"text","text":{"content":"イベントの処理の終わりくらいである。それでは結局逐次送信しているのと変わらない。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"イベントの処理の終わりくらいである。それでは結局逐次送信しているのと変わらない。","href":null}],"color":"default"}},{"object":"block","id":"d8c53cd7-df2d-45b7-a3dd-c8828a0d16e2","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:50:00.000Z","last_edited_time":"2024-06-26T05:50:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"どうすればService Worker上で","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"どうすればService Worker上で","href":null},{"type":"text","text":{"content":"BatchSpanProcessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"BatchSpanProcessor","href":null},{"type":"text","text":{"content":" を使えるだろうか。この問題については誰かしらが解決してくれるとうれしい。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" を使えるだろうか。この問題については誰かしらが解決してくれるとうれしい。","href":null}],"color":"default"}},{"object":"block","id":"dbba3e72-27c8-4193-8222-a4201c83b35d","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:50:00.000Z","last_edited_time":"2024-06-26T05:50:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[],"color":"default"}},{"object":"block","id":"0bebe750-8893-4e14-b945-1a71186c9395","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:50:00.000Z","last_edited_time":"2024-06-26T05:50:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"divider","divider":{}},{"object":"block","id":"d9b8250d-f113-45ea-bb11-d1720dbdd7ca","parent":{"type":"page_id","page_id":"1add2e31-b222-4912-bd32-2faab675cc5d"},"created_time":"2024-06-26T05:50:00.000Z","last_edited_time":"2024-06-26T05:54:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"20分の発表では説明しきれなかった詳細を解説したが、もし追加で質問などがあればTwitterやMisskeyのほうでリプライをいただければ加筆するので遠慮なく声をかけてほしい。また、このPoCのアイデアはそれほど独創的でもないし、自分のアイデアだと主張するつもりももちろんないので、開発の参考にするのは自由にしてほしい。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"20分の発表では説明しきれなかった詳細を解説したが、もし追加で質問などがあればTwitterやMisskeyのほうでリプライをいただければ加筆するので遠慮なく声をかけてほしい。また、このPoCのアイデアはそれほど独創的でもないし、自分のアイデアだと主張するつもりももちろんないので、開発の参考にするのは自由にしてほしい。","href":null}],"color":"default"}}]