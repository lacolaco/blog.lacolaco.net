[{"object":"block","id":"c4cc7397-5191-42f2-9ba6-18d0fc941566","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:19:00.000Z","last_edited_time":"2024-02-24T03:22:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Angular v17.2にて、新しいSignal関連APIの","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular v17.2にて、新しいSignal関連APIの","href":null},{"type":"text","text":{"content":"Model Inputs","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Model Inputs","href":null},{"type":"text","text":{"content":"が実装された。これはv17.0で実装されたSignal Inputsをベースにして拡張されたものだ。Model Inputsにより、これまで以上に幅広いユースケースでSignalベースのコンポーネントが作りやすくなった。この記事ではModel Inputsが開発者体験に与える具体的な影響をかいつまんで紹介する。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"が実装された。これはv17.0で実装されたSignal Inputsをベースにして拡張されたものだ。Model Inputsにより、これまで以上に幅広いユースケースでSignalベースのコンポーネントが作りやすくなった。この記事ではModel Inputsが開発者体験に与える具体的な影響をかいつまんで紹介する。","href":null}],"color":"default"}},{"object":"block","id":"30a82961-d137-4eee-87cc-f1c2840b64f1","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:22:00.000Z","last_edited_time":"2024-02-24T03:22:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Signal Inputsについての解説は以前に書いたため、先に読んでいることを前提とする。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Signal Inputsについての解説は以前に書いたため、先に読んでいることを前提とする。","href":null}],"color":"default"}},{"object":"block","id":"5ef56f03-e86a-443a-9926-723825518c63","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:23:00.000Z","last_edited_time":"2024-02-24T03:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://zenn.dev/lacolaco/articles/angular-signal-inputs"}},{"object":"block","id":"03c80a59-02f7-4e59-990e-03b2c2e67505","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:23:00.000Z","last_edited_time":"2024-02-24T03:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[],"color":"default"}},{"object":"block","id":"5e3127b7-f596-4702-8e2c-6e7b5eca3d31","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:23:00.000Z","last_edited_time":"2024-02-24T03:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"Model Inputsとは","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Model Inputsとは","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"2faf807b-2769-4c2e-833a-1d23a826364b","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:23:00.000Z","last_edited_time":"2024-02-24T03:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Model InputsはSignals RFCのSignal-based Componentsのセクションで提案されている。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Model InputsはSignals RFCのSignal-based Componentsのセクションで提案されている。","href":null}],"color":"default"}},{"object":"block","id":"f5a5e145-9b01-4f84-a361-c53271f122e4","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:24:00.000Z","last_edited_time":"2024-02-24T03:24:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://github.com/angular/angular/discussions/49682"}},{"object":"block","id":"43dcc266-f783-4e8a-ba0f-597198579b3e","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:23:00.000Z","last_edited_time":"2024-02-24T03:24:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"quote","quote":{"rich_text":[{"type":"text","text":{"content":"Signal-based components additionally have access to a new type of input, ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Signal-based components additionally have access to a new type of input, ","href":null},{"type":"text","text":{"content":"model inputs","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"model inputs","href":null},{"type":"text","text":{"content":".","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":".","href":null}],"color":"default"}},{"object":"block","id":"46a088a6-c449-41d8-ab9f-04a02fe83287","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:24:00.000Z","last_edited_time":"2024-02-24T03:25:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"quote","quote":{"rich_text":[{"type":"text","text":{"content":"The ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"The ","href":null},{"type":"text","text":{"content":"model","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"model","href":null},{"type":"text","text":{"content":" function defines a special kind of input that establishes a contract between parent component and child component. A model input gives you a ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" function defines a special kind of input that establishes a contract between parent component and child component. A model input gives you a ","href":null},{"type":"text","text":{"content":"WritableSignal","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"WritableSignal","href":null},{"type":"text","text":{"content":", which propagates its value back to the source. This lets you create two-way bindings without any additional requirements.","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":", which propagates its value back to the source. This lets you create two-way bindings without any additional requirements.","href":null}],"color":"default"}},{"object":"block","id":"797bf569-b768-4f0b-9357-10003eebed5d","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:23:00.000Z","last_edited_time":"2024-02-24T03:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Model Inputsの機能は","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Model Inputsの機能は","href":null},{"type":"text","text":{"content":"model","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"model","href":null},{"type":"text","text":{"content":"関数で提供される。これはSignal Inputの特殊なバージョンで、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"関数で提供される。これはSignal Inputの特殊なバージョンで、","href":null},{"type":"text","text":{"content":"input()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"input()","href":null},{"type":"text","text":{"content":"で作られたSignal Inputが読み取り専用なのに対して、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"で作られたSignal Inputが読み取り専用なのに対して、","href":null},{"type":"text","text":{"content":"model()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"model()","href":null},{"type":"text","text":{"content":"で作れるModel Inputは書き込み可能な","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"で作れるModel Inputは書き込み可能な","href":null},{"type":"text","text":{"content":"WritableSignal","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"WritableSignal","href":null},{"type":"text","text":{"content":"になる。このSignalの値が変更されたとき、自動的にその変更をコンポーネントのアウトプットとして出力できる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"になる。このSignalの値が変更されたとき、自動的にその変更をコンポーネントのアウトプットとして出力できる。","href":null}],"color":"default"}},{"object":"block","id":"50901317-0edd-41f1-90ba-9560895ba7d4","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:23:00.000Z","last_edited_time":"2024-02-24T05:10:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"次の","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"次の","href":null},{"type":"text","text":{"content":"NameInputComponent","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"NameInputComponent","href":null},{"type":"text","text":{"content":"を例にしよう。このコンポーネントは親コンポーネントから入力値を受け取る","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を例にしよう。このコンポーネントは親コンポーネントから入力値を受け取る","href":null},{"type":"text","text":{"content":"value","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"value","href":null},{"type":"text","text":{"content":"インプットを持っている。これは","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"インプットを持っている。これは","href":null},{"type":"text","text":{"content":"model()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"model()","href":null},{"type":"text","text":{"content":"で作られたModel Inputなので親から値を受け取るだけでなく、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"で作られたModel Inputなので親から値を受け取るだけでなく、","href":null},{"type":"text","text":{"content":"NameInputComponent","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"NameInputComponent","href":null},{"type":"text","text":{"content":"自身が値を更新できる。この例ではテキストフィールドの入力値を","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"自身が値を更新できる。この例ではテキストフィールドの入力値を","href":null},{"type":"text","text":{"content":"value","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"value","href":null},{"type":"text","text":{"content":"フィールドに反映している。実は、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"フィールドに反映している。実は、","href":null},{"type":"text","text":{"content":"v17.2からは双方向バインディングに","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"v17.2からは双方向バインディングに","href":null},{"type":"text","text":{"content":"WritableSignal","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"WritableSignal","href":null},{"type":"text","text":{"content":"をそのまま渡すこともできるようになった","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"をそのまま渡すこともできるようになった","href":null},{"type":"text","text":{"content":"。そのため、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"。そのため、","href":null},{"type":"text","text":{"content":"[(ngModel)]","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"[(ngModel)]","href":null},{"type":"text","text":{"content":"にModel Inputのフィールドを渡すだけで、値の書き込みとユーザー入力からの反映を実現できる。双方向どちらに向けても変更の伝播のためのコードは一切必要ない。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"にModel Inputのフィールドを渡すだけで、値の書き込みとユーザー入力からの反映を実現できる。双方向どちらに向けても変更の伝播のためのコードは一切必要ない。","href":null}],"color":"default"}},{"object":"block","id":"b9a257d9-91a3-4585-b067-c86f1ab46953","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:45:00.000Z","last_edited_time":"2024-02-24T05:10:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"import { Component, model } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'name-input',\n  standalone: true,\n  imports: [FormsModule],\n  template: `\n    <label>Full Name: </label>\n    <input type=\"text\" name=\"fullname\" [(ngModel)]=\"value\" >\n  `,\n})\nexport class NameInputComponent {\n  value = model(''); // Define a model input\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"import { Component, model } from '@angular/core';\nimport { bootstrapApplication } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'name-input',\n  standalone: true,\n  imports: [FormsModule],\n  template: `\n    <label>Full Name: </label>\n    <input type=\"text\" name=\"fullname\" [(ngModel)]=\"value\" >\n  `,\n})\nexport class NameInputComponent {\n  value = model(''); // Define a model input\n}","href":null}],"language":"typescript"}},{"object":"block","id":"3e301ead-f8cb-4171-b1db-3444f7fca87b","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T05:07:00.000Z","last_edited_time":"2024-02-24T05:12:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"親コンポーネントから見ると、Model Inputsはそのプロパティに対応する","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"親コンポーネントから見ると、Model Inputsはそのプロパティに対応する","href":null},{"type":"text","text":{"content":"**Change","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"**Change","href":null},{"type":"text","text":{"content":"アウトプットを内部的に生成している。この例の場合、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"アウトプットを内部的に生成している。この例の場合、","href":null},{"type":"text","text":{"content":"value","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"value","href":null},{"type":"text","text":{"content":"インプットに対応した","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"インプットに対応した","href":null},{"type":"text","text":{"content":"valueChange","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"valueChange","href":null},{"type":"text","text":{"content":"アウトプットが存在しているとみなされ、Model Inputの値が更新されると","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"アウトプットが存在しているとみなされ、Model Inputの値が更新されると","href":null},{"type":"text","text":{"content":"valueChange","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"valueChange","href":null},{"type":"text","text":{"content":"で購読可能なイベントが発行される。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"で購読可能なイベントが発行される。","href":null}],"color":"default"}},{"object":"block","id":"3e149054-0f3d-4c21-97a9-0dd6d39806be","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T05:12:00.000Z","last_edited_time":"2024-02-24T05:13:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"したがって、親コンポーネントは次のように双方向バインディングの構文","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"したがって、親コンポーネントは次のように双方向バインディングの構文","href":null},{"type":"text","text":{"content":"[(value)]","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"[(value)]","href":null},{"type":"text","text":{"content":"を使える。また、親コンポーネントが","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を使える。また、親コンポーネントが","href":null},{"type":"text","text":{"content":"WritableSignal","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"WritableSignal","href":null},{"type":"text","text":{"content":"で値を持っていれば、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"で値を持っていれば、","href":null},{"type":"text","text":{"content":"Signal-to-Signalの双方向バインディング","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Signal-to-Signalの双方向バインディング","href":null},{"type":"text","text":{"content":"によって、親子コンポーネント間で値が同期される。もちろん","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"によって、親子コンポーネント間で値が同期される。もちろん","href":null},{"type":"text","text":{"content":"[value]","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"[value]","href":null},{"type":"text","text":{"content":"と","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"と","href":null},{"type":"text","text":{"content":"(valueChange)","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"(valueChange)","href":null},{"type":"text","text":{"content":"を別々に使うこともできる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を別々に使うこともできる。","href":null}],"color":"default"}},{"object":"block","id":"876e1135-7390-40da-8403-8801563ae15a","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:49:00.000Z","last_edited_time":"2024-02-24T05:01:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [NameInputComponent],\n  template: `\n\t\t<!-- one-way binding -->\n    <name-input [value]=\"name\" /> \n\n\t\t<!-- one-way listening -->\n    <name-input (valueChange)=\"onChange($event)\" /> \n\n\t\t<!-- 2-way binding -->\n    <name-input [(value)]=\"name\" /> \n\n\t\t<!-- signal-to-signal 2-way binding -->\n    <name-input [(value)]=\"nameSignal\" />\n  `,\n})\nexport class App {\n  name = 'Angular';\n  nameSignal = signal('Angular');\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [NameInputComponent],\n  template: `\n\t\t<!-- one-way binding -->\n    <name-input [value]=\"name\" /> \n\n\t\t<!-- one-way listening -->\n    <name-input (valueChange)=\"onChange($event)\" /> \n\n\t\t<!-- 2-way binding -->\n    <name-input [(value)]=\"name\" /> \n\n\t\t<!-- signal-to-signal 2-way binding -->\n    <name-input [(value)]=\"nameSignal\" />\n  `,\n})\nexport class App {\n  name = 'Angular';\n  nameSignal = signal('Angular');\n}","href":null}],"language":"typescript"}},{"object":"block","id":"0e99dd4c-bda7-4b43-932b-fc85ac3153a9","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:53:00.000Z","last_edited_time":"2024-02-24T03:53:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"embed","embed":{"caption":[],"url":"https://stackblitz.com/edit/angular-rmu4sg?ctl=1&embed=1&file=src/main.ts"}},{"object":"block","id":"7562b976-46a7-42ab-b4a3-c8d700840818","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:53:00.000Z","last_edited_time":"2024-02-24T03:53:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[],"color":"default"}},{"object":"block","id":"b83d3bff-b29c-4b2d-99e7-1a08187d2e4b","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:53:00.000Z","last_edited_time":"2024-02-24T03:53:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"Model Inputsで何が変わるのか","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Model Inputsで何が変わるのか","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"7d59c294-2d10-4a78-835b-ab6a0f8f3ef4","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:53:00.000Z","last_edited_time":"2024-02-24T03:54:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Model InputsはSignal Inputsの拡張版であるため、Signal Inputsが持つ利点はすべてModel Inputsにも共通する。それに加えて、Model Inputsによって次のような点で開発者体験に影響を与えるだろう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Model InputsはSignal Inputsの拡張版であるため、Signal Inputsが持つ利点はすべてModel Inputsにも共通する。それに加えて、Model Inputsによって次のような点で開発者体験に影響を与えるだろう。","href":null}],"color":"default"}},{"object":"block","id":"00a2de16-301b-49e9-84d0-59c59532b698","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:54:00.000Z","last_edited_time":"2024-02-24T03:56:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_3","heading_3":{"rich_text":[{"type":"text","text":{"content":"双方向バインディングサポートのためのアウトプット宣言が不要になる","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"双方向バインディングサポートのためのアウトプット宣言が不要になる","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"062380be-4eb0-40a3-b0f3-f242bb6cc7d4","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:55:00.000Z","last_edited_time":"2024-02-24T05:14:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"自作のコンポーネントのプロパティで双方向バインディングをサポートするためには","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"自作のコンポーネントのプロパティで双方向バインディングをサポートするためには","href":null},{"type":"text","text":{"content":"foo","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"foo","href":null},{"type":"text","text":{"content":"インプットと","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"インプットと","href":null},{"type":"text","text":{"content":"fooChange","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"fooChange","href":null},{"type":"text","text":{"content":"アウトプットの両方を宣言しておく必要があった。単純にクラスフィールドが2つ必要で面倒だということもあるが、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"アウトプットの両方を宣言しておく必要があった。単純にクラスフィールドが2つ必要で面倒だということもあるが、","href":null},{"type":"text","text":{"content":"フィールド名の暗黙的なルール","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"フィールド名の暗黙的なルール","href":null},{"type":"text","text":{"content":"によって実現する機能なので、もしインプットかアウトプットのどちらかだけをリネームしてしまったら親コンポーネント側のテンプレートがコンパイルエラーになる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"によって実現する機能なので、もしインプットかアウトプットのどちらかだけをリネームしてしまったら親コンポーネント側のテンプレートがコンパイルエラーになる。","href":null}],"color":"default"}},{"object":"block","id":"ad369230-a2f5-42be-b682-20fb3104bcb1","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T03:58:00.000Z","last_edited_time":"2024-02-24T04:17:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Model Inputsであれば開発者が宣言するのは","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Model Inputsであれば開発者が宣言するのは","href":null},{"type":"text","text":{"content":"model()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"model()","href":null},{"type":"text","text":{"content":"関数で生成されるフィールドひとつだけなので、コードの量が減るだけでなく、アプリケーションをより安定したものにできる。たまたま名前が一致して双方向バインディングが可能になっていたわけではなく、そのために宣言されているプロパティであるという意図を明確にできる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"関数で生成されるフィールドひとつだけなので、コードの量が減るだけでなく、アプリケーションをより安定したものにできる。たまたま名前が一致して双方向バインディングが可能になっていたわけではなく、そのために宣言されているプロパティであるという意図を明確にできる。","href":null}],"color":"default"}},{"object":"block","id":"3e771bcd-3b75-4f5b-a6b7-4841f4f3583a","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T04:07:00.000Z","last_edited_time":"2024-02-24T04:42:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_3","heading_3":{"rich_text":[{"type":"text","text":{"content":"変更通知のタイミングを考えなくてよい","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"変更通知のタイミングを考えなくてよい","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"31ff83a3-66a0-458b-99b6-5571cf2c4e4e","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T04:08:00.000Z","last_edited_time":"2024-02-24T05:15:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"親からインプットで与えられた値と、自身が更新する値の両方によって状態が更新されるようなケースでは、状態の変更を通知するタイミングや条件を誤ると状態が不整合になる。たとえば値が更新されたときに親コンポーネントやサービスなどに変更を通知するケースを考えよう。同期的なフィールドで状態を管理していると「","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"親からインプットで与えられた値と、自身が更新する値の両方によって状態が更新されるようなケースでは、状態の変更を通知するタイミングや条件を誤ると状態が不整合になる。たとえば値が更新されたときに親コンポーネントやサービスなどに変更を通知するケースを考えよう。同期的なフィールドで状態を管理していると「","href":null},{"type":"text","text":{"content":"値が変更されたとき","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"値が変更されたとき","href":null},{"type":"text","text":{"content":"」というイベントが無いため、リアクティブな宣言的記述はできない。状態を変更しうるすべての場所に変更通知用の処理を追記することになり、当然書き漏れる可能性が高い。RxJSのBehaviorSubjectなどを使って宣言的な記述をできるようにしているケースも多いが、Signalと比較すれば実現したいことに対して複雑すぎるアプローチだろう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"」というイベントが無いため、リアクティブな宣言的記述はできない。状態を変更しうるすべての場所に変更通知用の処理を追記することになり、当然書き漏れる可能性が高い。RxJSのBehaviorSubjectなどを使って宣言的な記述をできるようにしているケースも多いが、Signalと比較すれば実現したいことに対して複雑すぎるアプローチだろう。","href":null}],"color":"default"}},{"object":"block","id":"1685cabb-d4b0-42fe-862d-6beb71094dc0","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T04:42:00.000Z","last_edited_time":"2024-02-24T05:15:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Model Inputsであれば値を更新するだけでそのSignalを購読している別の派生SignalやEffectだけでなく親コンポーネントへのアウトプットにも自動的に通知されるため、通知が漏れる心配はない。特に、親コンポーネントでもSignalで状態を管理しており、Signal-to-Signalの双方向バインディングを使う場合は、複数のコンポーネント間で簡単に状態が同期される。状態の伝播に失敗してアプリケーションの一部分が不整合に陥ることは減るだろう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Model Inputsであれば値を更新するだけでそのSignalを購読している別の派生SignalやEffectだけでなく親コンポーネントへのアウトプットにも自動的に通知されるため、通知が漏れる心配はない。特に、親コンポーネントでもSignalで状態を管理しており、Signal-to-Signalの双方向バインディングを使う場合は、複数のコンポーネント間で簡単に状態が同期される。状態の伝播に失敗してアプリケーションの一部分が不整合に陥ることは減るだろう。","href":null}],"color":"default"}},{"object":"block","id":"bd9b3722-06e7-4df6-868b-cd7a62d1505c","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T04:42:00.000Z","last_edited_time":"2024-02-24T05:03:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"また、テキストフィールドのようなフォーム要素を内包するコンポーネントは、変更検知戦略をOnPushにしている場合にコンポーネント内部での状態の更新によって変更検知がトリガーされないことで、明示的な","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"また、テキストフィールドのようなフォーム要素を内包するコンポーネントは、変更検知戦略をOnPushにしている場合にコンポーネント内部での状態の更新によって変更検知がトリガーされないことで、明示的な","href":null},{"type":"text","text":{"content":"markForCheck","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"markForCheck","href":null},{"type":"text","text":{"content":"を行っているケースもあるだろう。そういったテクニックも、Signalであれば不要になる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を行っているケースもあるだろう。そういったテクニックも、Signalであれば不要になる。","href":null}],"color":"default"}},{"object":"block","id":"70508c68-ef3c-4fd2-9e54-2489ef6e1c0d","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T05:03:00.000Z","last_edited_time":"2024-02-24T05:03:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"まとめ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"まとめ","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"3e9222b0-5d7e-4b39-9beb-49cd3a4a9d28","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T04:42:00.000Z","last_edited_time":"2024-02-24T05:16:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Model Inputsの導入により、より多くのユースケースにおいてコンポーネント内の状態をSignalに置き換えられるようになった。同時に実装された双方向バインディングのSignalサポートは特に画期的で、これまでとは違うレベルでのコンポーネント間の状態の同期を可能にするだろう。Input Signalsとあわせてぜひ取り入れていきたい。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Model Inputsの導入により、より多くのユースケースにおいてコンポーネント内の状態をSignalに置き換えられるようになった。同時に実装された双方向バインディングのSignalサポートは特に画期的で、これまでとは違うレベルでのコンポーネント間の状態の同期を可能にするだろう。Input Signalsとあわせてぜひ取り入れていきたい。","href":null}],"color":"default"}},{"object":"block","id":"8701e80f-17a1-471a-9a1d-c63f073a7ed7","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T04:42:00.000Z","last_edited_time":"2024-02-24T04:59:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"参考リンク","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"参考リンク","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"c109f944-311b-426a-84a4-162b7f03948f","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T04:59:00.000Z","last_edited_time":"2024-02-24T04:59:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://netbasal.com/angulars-model-function-explored-a-comprehensive-overview-4481d023c822"}},{"object":"block","id":"9c72c63d-3a6b-4898-a746-65f96c7f34d9","parent":{"type":"page_id","page_id":"fc06702a-e32a-483e-a546-4ed5b9c3b702"},"created_time":"2024-02-24T04:59:00.000Z","last_edited_time":"2024-02-24T04:59:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://angular.io/api/core/model"}}]