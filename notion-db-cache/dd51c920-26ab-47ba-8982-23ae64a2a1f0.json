[{"object":"block","id":"b42da4b5-e0e9-456f-8b78-e18b9a856cb2","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"「Angular って静的な Web サイトを吐き出せる技術とかないんですか」という質問を受けることがたびたびあります。 例えば Gatsby や Gridsome、Next.js、Nuxt.js などのようなものですね。 サーバーサイドレンダリングの仕組みは自体はすでに Angular Universal がありますし技術的に難しいことではないので、コミュニティのなかで Angular ベースで静的サイトを作るための新しいフレームワークが生まれてくることはあるかもしれません。 しかし僕の個人的な見解では、少なくとも Angular チームが公式に提供することはないと思っています。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"「Angular って静的な Web サイトを吐き出せる技術とかないんですか」という質問を受けることがたびたびあります。 例えば Gatsby や Gridsome、Next.js、Nuxt.js などのようなものですね。 サーバーサイドレンダリングの仕組みは自体はすでに Angular Universal がありますし技術的に難しいことではないので、コミュニティのなかで Angular ベースで静的サイトを作るための新しいフレームワークが生まれてくることはあるかもしれません。 しかし僕の個人的な見解では、少なくとも Angular チームが公式に提供することはないと思っています。","href":null}],"color":"default"}},{"object":"block","id":"7f588602-98b1-41e6-aae8-24d80d632696","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"ではなぜ Angular チームはそこにフォーカスしないのかということについて、今 Angular が向かっている方向と一緒に理解してみましょう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ではなぜ Angular チームはそこにフォーカスしないのかということについて、今 Angular が向かっている方向と一緒に理解してみましょう。","href":null}],"color":"default"}},{"object":"block","id":"c1300ce2-3fa0-4773-920a-b9d7e1256a3b","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"いまある Web に溶け込んでいく","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"いまある Web に溶け込んでいく","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"e5b9e6b8-4a24-48a9-aab7-2b111d535f42","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"2017 年の後半あたりから、Angular チームの主眼は静的な Web との融合になってきました。 これまで Angular は Single Page Application の開発を堅牢でスケーラブルにおこなうための一貫したフレームワークを提供してきました。 その文脈では一定の完成度に達し、開発者からも支持されるようになりましたが、Web の世界は広大で、その大半はいわゆるドキュメントとしての Web サイト、Web ページです。 WordPress をはじめとする CMS によるコンテンツが Web の大部分を構成しています。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"2017 年の後半あたりから、Angular チームの主眼は静的な Web との融合になってきました。 これまで Angular は Single Page Application の開発を堅牢でスケーラブルにおこなうための一貫したフレームワークを提供してきました。 その文脈では一定の完成度に達し、開発者からも支持されるようになりましたが、Web の世界は広大で、その大半はいわゆるドキュメントとしての Web サイト、Web ページです。 WordPress をはじめとする CMS によるコンテンツが Web の大部分を構成しています。","href":null}],"color":"default"}},{"object":"block","id":"53e2d590-f021-436f-a490-cea923329740","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"そうした Web のなかで Angular にできることを考えた結果が、Angular Elements です。 Angular はアプリケーションではなくコンポーネントを開発するための基盤としての側面を持つようになりました。 Angular Elements によって Angular コンポーネントから Custom Elements を生成し、そのタグを静的コンテンツのなかに組み込んでいくことができます。 いまある Web をそのままに、Angular と Custom Elements がその体験を拡張していきます。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"そうした Web のなかで Angular にできることを考えた結果が、Angular Elements です。 Angular はアプリケーションではなくコンポーネントを開発するための基盤としての側面を持つようになりました。 Angular Elements によって Angular コンポーネントから Custom Elements を生成し、そのタグを静的コンテンツのなかに組み込んでいくことができます。 いまある Web をそのままに、Angular と Custom Elements がその体験を拡張していきます。","href":null}],"color":"default"}},{"object":"block","id":"fb7dd164-a6d8-45ca-ae8d-13cb18a8f01f","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"実例として、Angular の公式ドキュメンテーションサイト angular.io では、Markdown で管理されているドキュメンテーションのなかに書かれた独自タグが、Custom Elements として起動してリッチなコンテンツを提供しています。 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"実例として、Angular の公式ドキュメンテーションサイト angular.io では、Markdown で管理されているドキュメンテーションのなかに書かれた独自タグが、Custom Elements として起動してリッチなコンテンツを提供しています。 ","href":null},{"type":"text","text":{"content":"<code-example>","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"<code-example>","href":null},{"type":"text","text":{"content":" タグは Angular Elements で作られた Custom Elements として存在しています。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" タグは Angular Elements で作られた Custom Elements として存在しています。","href":null}],"color":"default"}},{"object":"block","id":"67cd355d-84ba-42e8-b2c5-c68ad12b8ab1","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"heroes コンポーネントを作成する","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"heroes コンポーネントを作成する","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"136b9f0a-92fd-4069-96eb-fc40797b5a52","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Angular CLI を使用して､","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular CLI を使用して､","href":null},{"type":"text","text":{"content":"heroes","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"heroes","href":null},{"type":"text","text":{"content":"という名前の新しいコンポーネントを生成します。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"という名前の新しいコンポーネントを生成します。","href":null}],"color":"default"}},{"object":"block","id":"a894aae5-9fc2-4b11-a696-c5da5e43010e","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"<code-example language=\"sh\" class=\"code-shell\">  ng generate component heroes</code-example>","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"<code-example language=\"sh\" class=\"code-shell\">  ng generate component heroes</code-example>","href":null}],"language":"html"}},{"object":"block","id":"1171e89f-7ae7-4c32-861d-f1eb3d70f78c","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:34:00.000Z","last_edited_time":"2023-05-21T00:35:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"image","image":{"caption":[{"type":"text","text":{"content":"code-example 要素はAngular Elementsで作られたCustom Element","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"code-example 要素はAngular Elementsで作られたCustom Element","href":null}],"type":"external","external":{"url":"https://cdn-ak.f.st-hatena.com/images/fotolife/l/lacolaco/20190113/20190113000151.png"}}},{"object":"block","id":"a004aa9e-c61e-4a49-b756-7d8cfcc4bb52","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"技術的な課題","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"技術的な課題","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"64999cb4-b9f6-4642-8e74-f67f9c6adf6a","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Angular Elements のアプローチの概念実証として angular.io が作られましたが、バンドルサイズの課題がありました。 現状の実装では、Angular Elements が依存する Angular コアランタイムが大きく、複数の Angular Elements を Web サイトから読み込むのにパフォーマンスへの悪影響がありました。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular Elements のアプローチの概念実証として angular.io が作られましたが、バンドルサイズの課題がありました。 現状の実装では、Angular Elements が依存する Angular コアランタイムが大きく、複数の Angular Elements を Web サイトから読み込むのにパフォーマンスへの悪影響がありました。","href":null}],"color":"default"}},{"object":"block","id":"f9ec6b38-857f-44c0-96a4-d86e6698c86c","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"これを解決するのが Ivy で、Ivy が導入されれば Angular Elements が依存する Angular コアランタイムを最小限にとどめ、バンドルサイズを数 KB に抑えることができるようになります。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"これを解決するのが Ivy で、Ivy が導入されれば Angular Elements が依存する Angular コアランタイムを最小限にとどめ、バンドルサイズを数 KB に抑えることができるようになります。","href":null}],"color":"default"}},{"object":"block","id":"1af884d0-c9fa-41a9-bbd0-fa6b68b67b7b","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"まとめ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"まとめ","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"54f66d48-16b4-4640-a892-e034056650e9","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"今後も Angular で静的サイトを作るためのフレームワークが生まれることは、少なくとも公式にはないでしょう。 Angular チームは、いまある Web を Angular Elements で拡張していくことを目指しています。 Custom Elements はフレームワークに依存しないので、Angular Elements で作成したタグを Gatsby や Nuxt.js などで作られたサイトで利用することもできます。 タグを使う側からすれば、そのタグが Angular で作られていることは知る必要のないことです。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"今後も Angular で静的サイトを作るためのフレームワークが生まれることは、少なくとも公式にはないでしょう。 Angular チームは、いまある Web を Angular Elements で拡張していくことを目指しています。 Custom Elements はフレームワークに依存しないので、Angular Elements で作成したタグを Gatsby や Nuxt.js などで作られたサイトで利用することもできます。 タグを使う側からすれば、そのタグが Angular で作られていることは知る必要のないことです。","href":null}],"color":"default"}},{"object":"block","id":"1952d340-72ce-49f5-8275-c9a8ac1b92ee","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Angular Elements + Ivy によって、Angular Elements の開発体験とユーザ体験を高めることが 2019 年の主要なテーマのひとつです。 Angular は単なる SPA 開発フレームワークではなく、あらゆる Web のユースケースに対応できる開発プラットフォームとしてこれから進化していくことでしょう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular Elements + Ivy によって、Angular Elements の開発体験とユーザ体験を高めることが 2019 年の主要なテーマのひとつです。 Angular は単なる SPA 開発フレームワークではなく、あらゆる Web のユースケースに対応できる開発プラットフォームとしてこれから進化していくことでしょう。","href":null}],"color":"default"}},{"object":"block","id":"fadcecbb-6678-4fc3-b9db-51ec0716396f","parent":{"type":"page_id","page_id":"dd51c920-26ab-47ba-8982-23ae64a2a1f0"},"created_time":"2023-05-21T00:23:00.000Z","last_edited_time":"2023-05-21T00:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"[追記] Nuxt.js は静的サイトジェネレータ以外の用途もあるという指摘で、冒頭の部分で誤解を生みそうな点を教えてもらったので、修正しました。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"[追記] Nuxt.js は静的サイトジェネレータ以外の用途もあるという指摘で、冒頭の部分で誤解を生みそうな点を教えてもらったので、修正しました。","href":null}],"color":"default"}}]