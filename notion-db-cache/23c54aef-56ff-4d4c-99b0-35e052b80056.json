[{"object":"block","id":"1f2b0979-5109-4ff1-9485-140b0ac621f2","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T00:49:00.000Z","last_edited_time":"2023-03-23T00:50:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Angular v14から導入された ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular v14から導入された ","href":null},{"type":"text","text":{"content":"inject()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"inject()","href":null},{"type":"text","text":{"content":" 関数によって、これまでコンストラクタ引数でしかできなかった依存性の注入を、単なる関数の呼び出しに置き換えることができるようになった。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" 関数によって、これまでコンストラクタ引数でしかできなかった依存性の注入を、単なる関数の呼び出しに置き換えることができるようになった。","href":null}],"color":"default"}},{"object":"block","id":"3afd1320-514f-4081-a975-082679575ea7","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T00:50:00.000Z","last_edited_time":"2023-03-23T00:51:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[],"color":"default"}},{"object":"block","id":"75e4bca0-be72-4e77-8707-cb63ffa97e6e","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T00:51:00.000Z","last_edited_time":"2023-03-23T00:51:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://blog.lacolaco.net/2022/09/presentation-angular-standalone-based-app/"}},{"object":"block","id":"a4b38856-a37d-4066-9431-115c52842900","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T00:51:00.000Z","last_edited_time":"2023-03-23T00:51:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://netbasal.com/unleash-the-power-of-di-functions-in-angular-2eb9f2697d66"}},{"object":"block","id":"c5a12fa1-9df7-4766-827b-5bd629d97c82","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T00:50:00.000Z","last_edited_time":"2023-03-23T00:51:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[],"color":"default"}},{"object":"block","id":"ae16eeda-3216-4e08-b89f-524179e44241","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T00:50:00.000Z","last_edited_time":"2023-03-23T00:54:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"これまでは型推論におけるちょっとした優位性を除いては基本的に互換性のある、どちらを使ってもよいAPIとして認識されていたが、TypeScript 5.0 で導入されたECMAScript Decoratorsの標準実装によって話が変わってきた。今後は、依存性の注入にコンストラクタ引数ではなくinject関数を使うべきであると言える理由をこの記事で解説する。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"これまでは型推論におけるちょっとした優位性を除いては基本的に互換性のある、どちらを使ってもよいAPIとして認識されていたが、TypeScript 5.0 で導入されたECMAScript Decoratorsの標準実装によって話が変わってきた。今後は、依存性の注入にコンストラクタ引数ではなくinject関数を使うべきであると言える理由をこの記事で解説する。","href":null}],"color":"default"}},{"object":"block","id":"4a2b2c51-4304-41b5-9001-4e1a0eb78bd4","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T00:50:00.000Z","last_edited_time":"2023-03-23T00:53:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"コンストラクタ引数の問題点","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"コンストラクタ引数の問題点","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"bd80f9ba-c6ea-4196-b7ce-5591c1f5ee1c","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T00:49:00.000Z","last_edited_time":"2023-03-23T01:05:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"コンストラクタ引数を使用した依存性の注入は、TypeScriptのExperimental Decoratorsで実装されているParameter Decoratorsの機能が不可欠である。Parameter Decoratorsとは、関数の引数を修飾するデコレーターである。コンストラクタ引数による依存性の注入に使われる ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"コンストラクタ引数を使用した依存性の注入は、TypeScriptのExperimental Decoratorsで実装されているParameter Decoratorsの機能が不可欠である。Parameter Decoratorsとは、関数の引数を修飾するデコレーターである。コンストラクタ引数による依存性の注入に使われる ","href":null},{"type":"text","text":{"content":"@Inject()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@Inject()","href":null},{"type":"text","text":{"content":" や ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" や ","href":null},{"type":"text","text":{"content":"@Self()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@Self()","href":null},{"type":"text","text":{"content":" 、 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" 、 ","href":null},{"type":"text","text":{"content":"@Optional()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@Optional()","href":null},{"type":"text","text":{"content":" などはすべてParameter Decoratorsである。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" などはすべてParameter Decoratorsである。","href":null}],"color":"default"}},{"object":"block","id":"e8c31570-2884-475d-83f3-d2b919fb10e9","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T01:03:00.000Z","last_edited_time":"2023-03-23T01:06:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"class Foo {\n\tconstructor(@Inject(Bar) bar: Bar) {}\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"class Foo {\n\tconstructor(@Inject(Bar) bar: Bar) {}\n}","href":null}],"language":"typescript"}},{"object":"block","id":"22213783-8aa1-4740-a4b0-b7b354c77ec0","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T01:03:00.000Z","last_edited_time":"2023-03-23T01:07:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"@Inject()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@Inject()","href":null},{"type":"text","text":{"content":" を使っていないコンストラクタ引数でもインジェクションできていると思っている人もいるかもしれないが、それはAngularのデコレーターコンパイラが型パラメータを自動的にインジェクショントークンに変換して次のように書き換えているからである。これは ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" を使っていないコンストラクタ引数でもインジェクションできていると思っている人もいるかもしれないが、それはAngularのデコレーターコンパイラが型パラメータを自動的にインジェクショントークンに変換して次のように書き換えているからである。これは ","href":null},{"type":"text","text":{"content":"@Inject()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@Inject()","href":null},{"type":"text","text":{"content":" の省略記法にすぎない。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" の省略記法にすぎない。","href":null}],"color":"default"}},{"object":"block","id":"eaad292c-9b26-45b9-95b4-da093f6db279","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T01:07:00.000Z","last_edited_time":"2023-03-23T01:08:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"class Foo {\n\t// 型パラメータから判断して自動的に @Inject(Bar) が生成される\n\tconstructor(bar: Bar) {}\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"class Foo {\n\t// 型パラメータから判断して自動的に @Inject(Bar) が生成される\n\tconstructor(bar: Bar) {}\n}","href":null}],"language":"typescript"}},{"object":"block","id":"2e1ef358-0026-4482-b70f-81b2a4fa53db","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T01:08:00.000Z","last_edited_time":"2023-03-23T01:25:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"しかし、TypeScript 5.0で実装されたECMAScript 標準準拠のデコレーターは、いまのところParameter Decoratorsを持たない。いずれECMAScriptでサポートされるかもしれないが、ともかく現状はTypeScriptの実験的実装でしかサポートされていない構文ということになる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"しかし、TypeScript 5.0で実装されたECMAScript 標準準拠のデコレーターは、いまのところParameter Decoratorsを持たない。いずれECMAScriptでサポートされるかもしれないが、ともかく現状はTypeScriptの実験的実装でしかサポートされていない構文ということになる。","href":null}],"color":"default"}},{"object":"block","id":"609fa0ae-c718-4644-993f-d5ab98f5c5d0","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T01:03:00.000Z","last_edited_time":"2023-03-23T01:08:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://devblogs.microsoft.com/typescript/announcing-typescript-5-0/#decorators"}},{"object":"block","id":"db297db3-2c3c-4eaa-97e6-dfbbf6554ac8","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T01:08:00.000Z","last_edited_time":"2023-03-23T01:09:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"quote","quote":{"rich_text":[{"type":"text","text":{"content":"This new decorators proposal is not compatible with --emitDecoratorMetadata, and it does not allow decorating parameters. Future ECMAScript proposals may be able to help bridge that gap.","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"This new decorators proposal is not compatible with --emitDecoratorMetadata, and it does not allow decorating parameters. Future ECMAScript proposals may be able to help bridge that gap.","href":null}],"color":"default"}},{"object":"block","id":"4fb92976-92b9-40c5-82c1-09aab45395b7","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T01:09:00.000Z","last_edited_time":"2023-03-23T01:27:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Angular は TypeScript 5.0の標準デコレーター実装にも互換性を持たせるように内部で対応を進めているため、ただちにこれまでのAngularプロジェクトが壊れることはない。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular は TypeScript 5.0の標準デコレーター実装にも互換性を持たせるように内部で対応を進めているため、ただちにこれまでのAngularプロジェクトが壊れることはない。","href":null}],"color":"default"}},{"object":"block","id":"b023cf63-33a7-48ee-88e3-ecccec2326c4","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T01:25:00.000Z","last_edited_time":"2023-04-06T02:33:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"480a5159-f46b-4a81-895c-9d56a207d9cc"},"has_children":false,"archived":false,"type":"link_preview","link_preview":{"url":"https://github.com/angular/angular/pull/49492"}},{"object":"block","id":"d2b0a16d-f6e5-4b54-9258-9b3120e20b8c","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T01:09:00.000Z","last_edited_time":"2023-03-23T01:28:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"だが、なるべく安定した標準に依存したソースコードを書こうとするなら、Parameter Decoratorsからの脱却を進めなければならない。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"だが、なるべく安定した標準に依存したソースコードを書こうとするなら、Parameter Decoratorsからの脱却を進めなければならない。","href":null}],"color":"default"}},{"object":"block","id":"8780e62a-a988-441c-9b62-4e0cfbb8e661","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T00:49:00.000Z","last_edited_time":"2023-03-23T01:11:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"inject関数の優位性","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"inject関数の優位性","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"c73c65bc-11b3-4a9f-ad06-d98cc6d4becd","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T01:12:00.000Z","last_edited_time":"2023-03-23T01:28:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"幸い、Angularの文脈でParameter Decoratorsを使っているのはコンストラクタ引数での依存性の注入だけであり、この機能は v14 から導入されている ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"幸い、Angularの文脈でParameter Decoratorsを使っているのはコンストラクタ引数での依存性の注入だけであり、この機能は v14 から導入されている ","href":null},{"type":"text","text":{"content":"inject()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"inject()","href":null},{"type":"text","text":{"content":" 関数で完全に置き換え可能である。つまり、Parameter Decoratorsからの完全脱却はすでに可能である。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" 関数で完全に置き換え可能である。つまり、Parameter Decoratorsからの完全脱却はすでに可能である。","href":null}],"color":"default"}},{"object":"block","id":"dd5267e9-b89e-4ee3-8cb5-797eb6c362a3","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T01:28:00.000Z","last_edited_time":"2023-03-23T01:29:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"むしろ、 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"むしろ、 ","href":null},{"type":"text","text":{"content":"inject()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"inject()","href":null},{"type":"text","text":{"content":" 関数を使わなければ実現できないユースケースも増えつつあり、デコレーターの問題がなくても置き換えは時間の問題だっただろう。RouterのGuard/Resolverはすでにクラスベースの実装を非推奨にしているし、HttpClientのinterceptorも関数ベースのAPIをサポートした。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" 関数を使わなければ実現できないユースケースも増えつつあり、デコレーターの問題がなくても置き換えは時間の問題だっただろう。RouterのGuard/Resolverはすでにクラスベースの実装を非推奨にしているし、HttpClientのinterceptorも関数ベースのAPIをサポートした。","href":null}],"color":"default"}},{"object":"block","id":"6fcda07b-1c67-4705-ae63-c790ffc66a08","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T01:29:00.000Z","last_edited_time":"2023-03-23T01:29:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"依存性の注入を含むビジネスロジックの関数切り出しというリファクタリング面での恩恵があるというレベルではすでになく、 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"依存性の注入を含むビジネスロジックの関数切り出しというリファクタリング面での恩恵があるというレベルではすでになく、 ","href":null},{"type":"text","text":{"content":"inject()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"inject()","href":null},{"type":"text","text":{"content":" 関数を使わければ新しい機能を利用できないようになってきている。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" 関数を使わければ新しい機能を利用できないようになってきている。","href":null}],"color":"default"}},{"object":"block","id":"82ee4bbf-dc5a-433c-8960-14939b742453","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T00:49:00.000Z","last_edited_time":"2023-03-23T00:49:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"結論","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"結論","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"3e5d72c4-c632-4ffe-b16d-573c45816927","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T01:19:00.000Z","last_edited_time":"2023-03-23T01:27:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"コンストラクタ引数による依存性の注入をやめなければ、TypeScript の実験的実装に依存し続けることになる。今後しばらくはTypeScriptがサポートを切ることはないらしいが、今後さまざまなライブラリやツールが標準デコレーターを前提とした形で登場してくるだろう。そのとき、非標準のデコレーターでしかサポートされていないParameter Decoratorsの存在が足を引っ張る可能性は高い。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"コンストラクタ引数による依存性の注入をやめなければ、TypeScript の実験的実装に依存し続けることになる。今後しばらくはTypeScriptがサポートを切ることはないらしいが、今後さまざまなライブラリやツールが標準デコレーターを前提とした形で登場してくるだろう。そのとき、非標準のデコレーターでしかサポートされていないParameter Decoratorsの存在が足を引っ張る可能性は高い。","href":null}],"color":"default"}},{"object":"block","id":"7523835f-21e3-4134-ad5e-82533eb4c2a3","parent":{"type":"page_id","page_id":"23c54aef-56ff-4d4c-99b0-35e052b80056"},"created_time":"2023-03-23T01:21:00.000Z","last_edited_time":"2023-03-23T01:23:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"もはやどちらを使うか選べる段階は終わったと考えるべきだ。 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"もはやどちらを使うか選べる段階は終わったと考えるべきだ。 ","href":null},{"type":"text","text":{"content":"inject()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"inject()","href":null},{"type":"text","text":{"content":" 関数が依存性の注入を利用するただひとつの安定APIである。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" 関数が依存性の注入を利用するただひとつの安定APIである。","href":null}],"color":"default"}}]