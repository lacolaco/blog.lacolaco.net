[{"object":"block","id":"fb8fcacd-b97a-44cf-abd2-ff6b039f8615","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"この記事では AngularDart/Flutter の文脈で新しいコンポーネント設計パターンとして広まりつつある","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"この記事では AngularDart/Flutter の文脈で新しいコンポーネント設計パターンとして広まりつつある","href":null},{"type":"text","text":{"content":"BLoC","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"BLoC","href":null},{"type":"text","text":{"content":"パターンを、Angular の語彙で理解し、実装する方法を紹介する。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"パターンを、Angular の語彙で理解し、実装する方法を紹介する。","href":null}],"color":"default"}},{"object":"block","id":"7b7ad31f-6bca-4280-87c1-59fc575ce633","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"BLoC パターンとは","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"BLoC パターンとは","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"eab25d56-e814-4c1a-b549-15a984f4a6ad","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"BLoC とは、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"BLoC とは、","href":null},{"type":"text","text":{"content":"B","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"B","href":null},{"type":"text","text":{"content":"usiness ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"usiness ","href":null},{"type":"text","text":{"content":"Lo","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Lo","href":null},{"type":"text","text":{"content":"gic ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"gic ","href":null},{"type":"text","text":{"content":"C","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"C","href":null},{"type":"text","text":{"content":"omponent の略である。 BLoC を使ったアプリケーションの実装パターンを BLoC パターンと呼ぶ。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"omponent の略である。 BLoC を使ったアプリケーションの実装パターンを BLoC パターンと呼ぶ。","href":null}],"color":"default"}},{"object":"block","id":"69c71304-5670-4a43-a886-cfdbd884a8ec","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"まず誤解を招きそうなポイントとして、この“Component”は React や Angular などでいうところのビューを構築する“コンポーネント”ではない。 一般的な単語としての、アプリケーションを構成するひとかたまりの要素という意味の“Component”なので誤解しないこと。 対比するレベルとしては、“UI Component” vs “Business Logic Component”のようになる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"まず誤解を招きそうなポイントとして、この“Component”は React や Angular などでいうところのビューを構築する“コンポーネント”ではない。 一般的な単語としての、アプリケーションを構成するひとかたまりの要素という意味の“Component”なので誤解しないこと。 対比するレベルとしては、“UI Component” vs “Business Logic Component”のようになる。","href":null}],"color":"default"}},{"object":"block","id":"aeff80d9-e278-48a7-8520-2db6cddea52e","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"BLoC は複数の環境向けにアプリケーションを開発するときのコードシェアカバレッジを高めるための、リファクタリング指針のようなものだ。 具体的には、以下の指針を与える。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"BLoC は複数の環境向けにアプリケーションを開発するときのコードシェアカバレッジを高めるための、リファクタリング指針のようなものだ。 具体的には、以下の指針を与える。","href":null}],"color":"default"}},{"object":"block","id":"707856c1-2c54-4e99-86e9-dfe652a0f0d3","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","text":{"content":"BLoC の入力・出力インターフェースは","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"BLoC の入力・出力インターフェースは","href":null},{"type":"text","text":{"content":"すべて Stream/Sink","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"すべて Stream/Sink","href":null},{"type":"text","text":{"content":"である","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"である","href":null}],"color":"default"}},{"object":"block","id":"a857623a-7206-49a1-8a76-32738ed3ba6e","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","text":{"content":"BLoC の依存は必ず","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"BLoC の依存は必ず","href":null},{"type":"text","text":{"content":"注入可能","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"注入可能","href":null},{"type":"text","text":{"content":"で、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"で、","href":null},{"type":"text","text":{"content":"環境に依存しない","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"環境に依存しない","href":null}],"color":"default"}},{"object":"block","id":"bd61a68b-1d44-4e19-89d2-d7dc3ed61544","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","text":{"content":"BLoC 内に環境ごとの条件分岐は持たない","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"BLoC 内に環境ごとの条件分岐は持たない","href":null}],"color":"default"}},{"object":"block","id":"4c4d7b3f-61ac-41a9-acfe-4122304dc306","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","text":{"content":"以上のルールに従う限り実装は自由である","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"以上のルールに従う限り実装は自由である","href":null}],"color":"default"}},{"object":"block","id":"e74a3c01-09c7-4ce1-9378-8b1b29695637","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"詳しくは BLoC パターンの初出であるこのセッションを見るとよい。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"詳しくは BLoC パターンの初出であるこのセッションを見るとよい。","href":null}],"color":"default"}},{"object":"block","id":"089840d2-74fe-4c71-b2b5-4f40f171a6f4","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T04:59:00.000Z","last_edited_time":"2023-05-21T04:59:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"video","video":{"caption":[],"type":"external","external":{"url":"https://www.youtube.com/watch?v=PLHln7wHgPE"}}},{"object":"block","id":"f130d077-2516-42a4-a592-cf3a6ec98b96","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"Angular における BLoC パターン","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular における BLoC パターン","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"ad97f50e-c308-4873-b385-8d164be8728c","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T04:59:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Angular において BLoC パターンの恩恵がどれほどあるのかは議論の余地があるが、 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular において BLoC パターンの恩恵がどれほどあるのかは議論の余地があるが、 ","href":null},{"type":"text","text":{"content":"https://lacolaco.hatenablog.com/entry/2018/05/15/121514","link":{"url":"https://lacolaco.hatenablog.com/entry/2018/05/15/121514"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"https://lacolaco.hatenablog.com/entry/2018/05/15/121514","href":"https://lacolaco.hatenablog.com/entry/2018/05/15/121514"},{"type":"text","text":{"content":" でも述べたようにフレームワークに依存しない部分を明確に分ける、というのは設計指針として重要である。 サーバーサイドでの実行や NativeScript、Ionic、あるいは React/Vue などへの換装など考えても、BLoC パターンはアプリケーションの Angular 依存度を適切に保つために良いルールに思える。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" でも述べたようにフレームワークに依存しない部分を明確に分ける、というのは設計指針として重要である。 サーバーサイドでの実行や NativeScript、Ionic、あるいは React/Vue などへの換装など考えても、BLoC パターンはアプリケーションの Angular 依存度を適切に保つために良いルールに思える。","href":null}],"color":"default"}},{"object":"block","id":"6efc599e-f63a-4e19-82c6-3f15e0fab320","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"さて、さっそく Angular で BLoC を実装してみよう。 Dart には言語標準の Stream と Sink があるが、JavaScript には","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"さて、さっそく Angular で BLoC を実装してみよう。 Dart には言語標準の Stream と Sink があるが、JavaScript には","href":null},{"type":"text","text":{"content":"まだ","link":{"url":"https://github.com/tc39/proposal-observable"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"まだ","href":"https://github.com/tc39/proposal-observable"},{"type":"text","text":{"content":"存在しないため、非標準の実装が必要である。 幸運にも Angular は RxJS と相互運用可能なので、RxJS の Observable を Stream に見立てて BLoC を実装することができる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"存在しないため、非標準の実装が必要である。 幸運にも Angular は RxJS と相互運用可能なので、RxJS の Observable を Stream に見立てて BLoC を実装することができる。","href":null}],"color":"default"}},{"object":"block","id":"b03dbda0-9c03-47e7-8c9c-e12e5240e331","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"まずは UI コンポーネントがビジネスロジックを持ってしまった状態の例を以下に挙げる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"まずは UI コンポーネントがビジネスロジックを持ってしまった状態の例を以下に挙げる。","href":null}],"color":"default"}},{"object":"block","id":"47e4284a-8012-4acd-811d-be316ab860f3","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T04:59:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"https://stackblitz.com/edit/angular-bloc-example-1?file=src%2Fapp%2Fapp.component.ts","link":{"url":"https://stackblitz.com/edit/angular-bloc-example-1?file=src%2Fapp%2Fapp.component.ts"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"https://stackblitz.com/edit/angular-bloc-example-1?file=src%2Fapp%2Fapp.component.ts","href":"https://stackblitz.com/edit/angular-bloc-example-1?file=src%2Fapp%2Fapp.component.ts"},{"type":"text","text":{"content":" ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" ","href":null}],"color":"default"}},{"object":"block","id":"425b26aa-4cd6-4ac5-9c94-ef9883e1105c","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"@Component({\n  selector: \"my-app\",\n  template: `\n    <div cdkTrapFocus [cdkTrapFocusAutoCapture]=\"false\">\n      <mat-form-field appearance=\"outline\" style=\"width: 80%;\">\n        <input\n          matInput\n          placeholder=\"Search for...\"\n          ngModel\n          (ngModelChange)=\"onInputChange($event)\"\n        />\n      </mat-form-field>\n    </div>\n\n    <span> {{ preamble }} </span>\n\n    <ul>\n      <li *ngFor=\"let result of results\">\n        {{ result }}\n      </li>\n    </ul>\n  `\n})\nexport class AppComponent {\n  private query = \"\";\n  results: string[] = [];\n\n  get preamble() {\n    return this.query == null || this.query.length == 0\n      ? \"\"\n      : `Results for ${this.query}`;\n  }\n\n  constructor(private repository: SearchRepository) {}\n\n  onInputChange(query: string) {\n    this.query = query;\n    this.executeSearch(query);\n  }\n\n  private async executeSearch(query: string) {\n    const results = await this.repository.search(query);\n    this.results = results;\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"@Component({\n  selector: \"my-app\",\n  template: `\n    <div cdkTrapFocus [cdkTrapFocusAutoCapture]=\"false\">\n      <mat-form-field appearance=\"outline\" style=\"width: 80%;\">\n        <input\n          matInput\n          placeholder=\"Search for...\"\n          ngModel\n          (ngModelChange)=\"onInputChange($event)\"\n        />\n      </mat-form-field>\n    </div>\n\n    <span> {{ preamble }} </span>\n\n    <ul>\n      <li *ngFor=\"let result of results\">\n        {{ result }}\n      </li>\n    </ul>\n  `\n})\nexport class AppComponent {\n  private query = \"\";\n  results: string[] = [];\n\n  get preamble() {\n    return this.query == null || this.query.length == 0\n      ? \"\"\n      : `Results for ${this.query}`;\n  }\n\n  constructor(private repository: SearchRepository) {}\n\n  onInputChange(query: string) {\n    this.query = query;\n    this.executeSearch(query);\n  }\n\n  private async executeSearch(query: string) {\n    const results = await this.repository.search(query);\n    this.results = results;\n  }\n}","href":null}],"language":"typescript"}},{"object":"block","id":"7745d5a5-976e-420b-b420-fce02de9ad60","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"UI コンポーネントが API の呼び出しや状態の保持などさまざまなビジネスロジックを持っているので、もしこのアプリケーションを別プラットフォームにも展開したくなってもコードが共有できない。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"UI コンポーネントが API の呼び出しや状態の保持などさまざまなビジネスロジックを持っているので、もしこのアプリケーションを別プラットフォームにも展開したくなってもコードが共有できない。","href":null}],"color":"default"}},{"object":"block","id":"8a24a0e5-7208-42e0-9534-491b3fbbf5ce","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_3","heading_3":{"rich_text":[{"type":"text","text":{"content":"BLoC の作成","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"BLoC の作成","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"f5c18a11-bcaa-4950-9336-8f3c79480c45","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"BLoC はポータビリティを考えると、ほとんどの場合は単なるクラスとして宣言される。 ここでは","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"BLoC はポータビリティを考えると、ほとんどの場合は単なるクラスとして宣言される。 ここでは","href":null},{"type":"text","text":{"content":"SearchBloc","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SearchBloc","href":null},{"type":"text","text":{"content":"クラスを作成する。 もともと","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"クラスを作成する。 もともと","href":null},{"type":"text","text":{"content":"AppComponent","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"AppComponent","href":null},{"type":"text","text":{"content":"が持っていたビジネスロジックをすべて","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"が持っていたビジネスロジックをすべて","href":null},{"type":"text","text":{"content":"SearchBloc","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SearchBloc","href":null},{"type":"text","text":{"content":"に移動すると次のようになる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"に移動すると次のようになる。","href":null}],"color":"default"}},{"object":"block","id":"8b648868-56dc-4ed9-95bc-86c788639d8e","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"class SearchBloc {\n  private query = \"\";\n  results: string[] = [];\n\n  get preamble() {\n    return this.query == null || this.query.length == 0\n      ? \"\"\n      : `Results for ${this.query}`;\n  }\n\n  constructor(private repository: SearchRepository) {}\n\n  async executeSearch(query: string) {\n    this.query = query;\n    const results = await this.repository.search(query);\n    this.results = results;\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"class SearchBloc {\n  private query = \"\";\n  results: string[] = [];\n\n  get preamble() {\n    return this.query == null || this.query.length == 0\n      ? \"\"\n      : `Results for ${this.query}`;\n  }\n\n  constructor(private repository: SearchRepository) {}\n\n  async executeSearch(query: string) {\n    this.query = query;\n    const results = await this.repository.search(query);\n    this.results = results;\n  }\n}","href":null}],"language":"typescript"}},{"object":"block","id":"d4183f87-b34a-41c6-b4dc-21b1ebbcf281","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"そして","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"そして","href":null},{"type":"text","text":{"content":"AppComponent","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"AppComponent","href":null},{"type":"text","text":{"content":"は","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"は","href":null},{"type":"text","text":{"content":"SearchBloc","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SearchBloc","href":null},{"type":"text","text":{"content":"に依存して次のようになる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"に依存して次のようになる。","href":null}],"color":"default"}},{"object":"block","id":"a9f9a489-870e-4b71-81db-4efc84196f28","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"@Component({\n  selector: \"my-app\",\n  template: `\n    <div cdkTrapFocus [cdkTrapFocusAutoCapture]=\"false\">\n      <mat-form-field appearance=\"outline\" style=\"width: 80%;\">\n        <input\n          matInput\n          placeholder=\"Search for...\"\n          ngModel\n          (ngModelChange)=\"bloc.executeSearch($event)\"\n        />\n      </mat-form-field>\n    </div>\n\n    <span> {{ bloc.preamble }} </span>\n\n    <ul>\n      <li *ngFor=\"let result of bloc.results\">\n        {{ result }}\n      </li>\n    </ul>\n  `\n})\nexport class AppComponent {\n  bloc: SearchBloc;\n\n  constructor(private repository: SearchRepository) {\n    this.bloc = new SearchBloc(this.repository);\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"@Component({\n  selector: \"my-app\",\n  template: `\n    <div cdkTrapFocus [cdkTrapFocusAutoCapture]=\"false\">\n      <mat-form-field appearance=\"outline\" style=\"width: 80%;\">\n        <input\n          matInput\n          placeholder=\"Search for...\"\n          ngModel\n          (ngModelChange)=\"bloc.executeSearch($event)\"\n        />\n      </mat-form-field>\n    </div>\n\n    <span> {{ bloc.preamble }} </span>\n\n    <ul>\n      <li *ngFor=\"let result of bloc.results\">\n        {{ result }}\n      </li>\n    </ul>\n  `\n})\nexport class AppComponent {\n  bloc: SearchBloc;\n\n  constructor(private repository: SearchRepository) {\n    this.bloc = new SearchBloc(this.repository);\n  }\n}","href":null}],"language":"typescript"}},{"object":"block","id":"70ee2552-5148-4d9e-8b61-df7ca0d1c0f2","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T04:59:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"https://stackblitz.com/edit/angular-bloc-example-2?file=src/app/app.component.ts","link":{"url":"https://stackblitz.com/edit/angular-bloc-example-2?file=src%2Fapp%2Fapp.component.ts"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"https://stackblitz.com/edit/angular-bloc-example-2?file=src/app/app.component.ts","href":"https://stackblitz.com/edit/angular-bloc-example-2?file=src%2Fapp%2Fapp.component.ts"},{"type":"text","text":{"content":" ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" ","href":null}],"color":"default"}},{"object":"block","id":"81eca080-26df-4200-b055-04663cfc0e85","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_3","heading_3":{"rich_text":[{"type":"text","text":{"content":"Observable へのリファクタリング","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Observable へのリファクタリング","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"3ba6638f-f11f-45c0-8a75-4ea585db2876","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"先述のとおり、BLoC パターンでは BLoC のすべてのインターフェースは Stream でなければならない。 これは Flutter の StatefulWidget や AngularDart の Change Detection の間で、データの変更に対する UI のリアクションのアプローチが違うからだ。 同期的な状態の管理ではプラットフォームごとに特別な処理が必要になる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"先述のとおり、BLoC パターンでは BLoC のすべてのインターフェースは Stream でなければならない。 これは Flutter の StatefulWidget や AngularDart の Change Detection の間で、データの変更に対する UI のリアクションのアプローチが違うからだ。 同期的な状態の管理ではプラットフォームごとに特別な処理が必要になる。","href":null}],"color":"default"}},{"object":"block","id":"32d97ff9-e983-451f-9b26-4a19b1f7902d","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"一方 Stream であれば Flutter は","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"一方 Stream であれば Flutter は","href":null},{"type":"text","text":{"content":"StreamBuilder","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"StreamBuilder","href":null},{"type":"text","text":{"content":"で Stream からデータが流れてくるたびに再描画する仕組みをもっており、AngularDart も","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"で Stream からデータが流れてくるたびに再描画する仕組みをもっており、AngularDart も","href":null},{"type":"text","text":{"content":"async","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"async","href":null},{"type":"text","text":{"content":"パイプにより同様の反応機構をもっている。 プラットフォームに依存せず非同期的な値を描画するために、Dart の BLoC パターンでは Stream を活用する。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"パイプにより同様の反応機構をもっている。 プラットフォームに依存せず非同期的な値を描画するために、Dart の BLoC パターンでは Stream を活用する。","href":null}],"color":"default"}},{"object":"block","id":"b19077af-2cb9-46c2-b4c6-e6426454a38e","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Angular の場合は RxJS が BLoC の実装を助けてくれる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular の場合は RxJS が BLoC の実装を助けてくれる。","href":null}],"color":"default"}},{"object":"block","id":"a617d9e5-b2e3-4f24-a4c0-e63825521971","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Dart の Stream を","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Dart の Stream を","href":null},{"type":"text","text":{"content":"Observable","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"Observable","href":null},{"type":"text","text":{"content":"、Sink を","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"、Sink を","href":null},{"type":"text","text":{"content":"Observer","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"Observer","href":null},{"type":"text","text":{"content":"に置き換えると、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"に置き換えると、","href":null},{"type":"text","text":{"content":"SearchBloc","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SearchBloc","href":null},{"type":"text","text":{"content":"は次のようになる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"は次のようになる。","href":null}],"color":"default"}},{"object":"block","id":"64d89aab-8177-4e16-81cd-2a63c97579fd","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"class SearchBloc {\n  private _results$: Observable<string[]>;\n  get results$(): Observable<string[]> {\n    return this._results$;\n  }\n\n  private _preamble$: Observable<string>;\n  get preamble$(): Observable<string> {\n    return this._preamble$;\n  }\n\n  private _query$ = new BehaviorSubject<string>(\"\");\n  get query(): Observer<string> {\n    return this._query$;\n  }\n\n  constructor(private repository: SearchRepository) {\n    this._results$ = this._query$.pipe(\n      switchMap(query => observableFrom(this.repository.search(query)))\n    );\n    this._preamble$ = this.results$.pipe(\n      withLatestFrom(this._query$, (_, q) => (q ? `Results for ${q}` : \"\"))\n    );\n  }\n\n  dispose() {\n    this._query$.complete();\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"class SearchBloc {\n  private _results$: Observable<string[]>;\n  get results$(): Observable<string[]> {\n    return this._results$;\n  }\n\n  private _preamble$: Observable<string>;\n  get preamble$(): Observable<string> {\n    return this._preamble$;\n  }\n\n  private _query$ = new BehaviorSubject<string>(\"\");\n  get query(): Observer<string> {\n    return this._query$;\n  }\n\n  constructor(private repository: SearchRepository) {\n    this._results$ = this._query$.pipe(\n      switchMap(query => observableFrom(this.repository.search(query)))\n    );\n    this._preamble$ = this.results$.pipe(\n      withLatestFrom(this._query$, (_, q) => (q ? `Results for ${q}` : \"\"))\n    );\n  }\n\n  dispose() {\n    this._query$.complete();\n  }\n}","href":null}],"language":"typescript"}},{"object":"block","id":"e97be32f-e75c-4fbe-a358-449b675bfd10","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"results: string[]","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"results: string[]","href":null},{"type":"text","text":{"content":"が","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"が","href":null},{"type":"text","text":{"content":"results$: Observable<string[]>","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"results$: Observable<string[]>","href":null},{"type":"text","text":{"content":"になり、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"になり、","href":null},{"type":"text","text":{"content":"preamble: string","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"preamble: string","href":null},{"type":"text","text":{"content":"も","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"も","href":null},{"type":"text","text":{"content":"preamble$: Observable<string>","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"preamble$: Observable<string>","href":null},{"type":"text","text":{"content":"となった。 これらは","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"となった。 これらは","href":null},{"type":"text","text":{"content":"query","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"query","href":null},{"type":"text","text":{"content":"の変更に反応して変化する非同期的な値として表現される。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"の変更に反応して変化する非同期的な値として表現される。","href":null}],"color":"default"}},{"object":"block","id":"567d9eda-18fc-404c-87c0-caf7f5f6b5ca","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"query","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"query","href":null},{"type":"text","text":{"content":"は","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"は","href":null},{"type":"text","text":{"content":"Observer<string>","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"Observer<string>","href":null},{"type":"text","text":{"content":"インターフェースを外部に公開し、新しい値の追加を UI に許可する。 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"インターフェースを外部に公開し、新しい値の追加を UI に許可する。 ","href":null},{"type":"text","text":{"content":"SearchBloc","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"SearchBloc","href":null},{"type":"text","text":{"content":"の内部では","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"の内部では","href":null},{"type":"text","text":{"content":"_query$: BehaviorSubject<string>","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"_query$: BehaviorSubject<string>","href":null},{"type":"text","text":{"content":"を実体として持ち、コンストラクタでは","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を実体として持ち、コンストラクタでは","href":null},{"type":"text","text":{"content":"_query$","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"_query$","href":null},{"type":"text","text":{"content":"に反応する","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"に反応する","href":null},{"type":"text","text":{"content":"_results$","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"_results$","href":null},{"type":"text","text":{"content":"と","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"と","href":null},{"type":"text","text":{"content":"_preamble$","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"_preamble$","href":null},{"type":"text","text":{"content":"が宣言されている。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"が宣言されている。","href":null}],"color":"default"}},{"object":"block","id":"721e0617-2e90-4298-bc2f-c6fabcf9307d","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"これを","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"これを","href":null},{"type":"text","text":{"content":"AppComponent","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"AppComponent","href":null},{"type":"text","text":{"content":"から使うと次のようになる。テンプレート中で","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"から使うと次のようになる。テンプレート中で","href":null},{"type":"text","text":{"content":"async","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"async","href":null},{"type":"text","text":{"content":"パイプを使い、Observable の変更に反応してビューの再描画が実行されるようになる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"パイプを使い、Observable の変更に反応してビューの再描画が実行されるようになる。","href":null}],"color":"default"}},{"object":"block","id":"a5547fa1-1888-4752-b36d-44cba90a1bda","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"@Component({\n  selector: \"my-app\",\n  template: `\n    <div cdkTrapFocus [cdkTrapFocusAutoCapture]=\"false\">\n      <mat-form-field appearance=\"outline\" style=\"width: 80%;\">\n        <input\n          matInput\n          placeholder=\"Search for...\"\n          ngModel\n          (ngModelChange)=\"bloc.query.next($event)\"\n        />\n      </mat-form-field>\n    </div>\n\n    <span> {{ bloc.preamble$ | async }} </span>\n\n    <ul>\n      <li *ngFor=\"let result of bloc.results$ | async\">\n        {{ result }}\n      </li>\n    </ul>\n  `\n})\nexport class AppComponent {\n  bloc: SearchBloc;\n\n  constructor(private repository: SearchRepository) {\n    this.bloc = new SearchBloc(this.repository);\n  }\n\n  ngOnDestroy() {\n    this.bloc.dispose();\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"@Component({\n  selector: \"my-app\",\n  template: `\n    <div cdkTrapFocus [cdkTrapFocusAutoCapture]=\"false\">\n      <mat-form-field appearance=\"outline\" style=\"width: 80%;\">\n        <input\n          matInput\n          placeholder=\"Search for...\"\n          ngModel\n          (ngModelChange)=\"bloc.query.next($event)\"\n        />\n      </mat-form-field>\n    </div>\n\n    <span> {{ bloc.preamble$ | async }} </span>\n\n    <ul>\n      <li *ngFor=\"let result of bloc.results$ | async\">\n        {{ result }}\n      </li>\n    </ul>\n  `\n})\nexport class AppComponent {\n  bloc: SearchBloc;\n\n  constructor(private repository: SearchRepository) {\n    this.bloc = new SearchBloc(this.repository);\n  }\n\n  ngOnDestroy() {\n    this.bloc.dispose();\n  }\n}","href":null}],"language":"typescript"}},{"object":"block","id":"210799e2-0a5a-4af8-95a7-a0c4dacc358c","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T04:59:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"https://stackblitz.com/edit/angular-bloc-example-3?file=src/app/app.component.ts","link":{"url":"https://stackblitz.com/edit/angular-bloc-example-3?file=src%2Fapp%2Fapp.component.ts"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"https://stackblitz.com/edit/angular-bloc-example-3?file=src/app/app.component.ts","href":"https://stackblitz.com/edit/angular-bloc-example-3?file=src%2Fapp%2Fapp.component.ts"},{"type":"text","text":{"content":" ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" ","href":null}],"color":"default"}},{"object":"block","id":"d36965ad-ce26-4754-a2e2-ac41fcd6e4b9","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"これで BLoC の実装が完了した。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"これで BLoC の実装が完了した。","href":null}],"color":"default"}},{"object":"block","id":"3e2db16b-55c9-47c3-bbcc-b1787a1879f0","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"考察","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"考察","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"d48fcd5a-3fe9-4ca5-9de0-3b4fd487ae9b","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"Angular アプリケーションを RxJS ベースで設計・実装をしていれば自然と似たような形になっているはず。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular アプリケーションを RxJS ベースで設計・実装をしていれば自然と似たような形になっているはず。","href":null}],"color":"default"}},{"object":"block","id":"cd74d936-ff49-448a-ab18-c01e1f8dc298","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"BLoC はそのパターンに名前をつけ、ビジネスロジックのクラスにインターフェースの制約を設けたもの。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"BLoC はそのパターンに名前をつけ、ビジネスロジックのクラスにインターフェースの制約を設けたもの。","href":null}],"color":"default"}},{"object":"block","id":"78a2ec32-96e0-4f0c-a816-b526a411006d","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":true,"archived":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"Angular のコンポーネントは Angular 環境での依存性を、DI を使って供給する役割も果たすことになる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular のコンポーネントは Angular 環境での依存性を、DI を使って供給する役割も果たすことになる。","href":null}],"color":"default"},"children":[{"object":"block","id":"f2ad737e-5d00-4e04-bd58-dbf61506db2f","parent":{"type":"block_id","block_id":"78a2ec32-96e0-4f0c-a816-b526a411006d"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"BLoC を持つコンポーネントは Container, BLoC を持たないコンポーネントは Presentational、と呼べそうでもある。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"BLoC を持つコンポーネントは Container, BLoC を持たないコンポーネントは Presentational、と呼べそうでもある。","href":null}],"color":"default"}}]},{"object":"block","id":"969b37fa-c7fa-47cd-a295-557da1a97780","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"UI コンポーネントはテストしにくいので、ビジネスロジックを BLoC に逃がすことでテスタビリティが高くなるのは目に見える恩恵のひとつ。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"UI コンポーネントはテストしにくいので、ビジネスロジックを BLoC に逃がすことでテスタビリティが高くなるのは目に見える恩恵のひとつ。","href":null}],"color":"default"}},{"object":"block","id":"9fe7701f-d2e4-4525-b718-a4c92730d420","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"まとめ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"まとめ","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"3f28f2d9-9d75-4559-914d-5470aa4b6c60","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"BLoC はクロスプラットフォーム開発でのコードシェアリングを促進するための実装パターン","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"BLoC はクロスプラットフォーム開発でのコードシェアリングを促進するための実装パターン","href":null}],"color":"default"}},{"object":"block","id":"71c79da4-2a73-487e-9634-732d6ea362c4","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"Flutter/AngularDart でのコードシェアリングのために生まれたが、Dart だけのものではない","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Flutter/AngularDart でのコードシェアリングのために生まれたが、Dart だけのものではない","href":null}],"color":"default"}},{"object":"block","id":"554cd0ed-9c99-48a8-b92d-1edf8a1b685c","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"Angular では RxJS の Observable を使って実装できる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular では RxJS の Observable を使って実装できる。","href":null}],"color":"default"}},{"object":"block","id":"c44b9723-c3d3-413c-a328-3383c1d6d820","parent":{"type":"page_id","page_id":"6bbc2bc0-5d0f-4e2e-adfb-010e6d45fa4b"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"bulleted_list_item","bulleted_list_item":{"rich_text":[{"type":"text","text":{"content":"Angular だけの単一プラットフォームであっても、ビジネスロジックのテスタビリティを高めることができる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular だけの単一プラットフォームであっても、ビジネスロジックのテスタビリティを高めることができる。","href":null}],"color":"default"}}]