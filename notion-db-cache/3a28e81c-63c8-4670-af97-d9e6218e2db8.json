[{"object":"block","id":"07678dfa-f197-44cb-9a23-befeeec5a8d0","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Angular v17.2で実装されたModel Inputsを使ってカスタムフォームコントロールを実装してみよう。SignalベースのAPIが揃ってきたことで、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular v17.2で実装されたModel Inputsを使ってカスタムフォームコントロールを実装してみよう。SignalベースのAPIが揃ってきたことで、","href":null},{"type":"text","text":{"content":"ControlValueAccessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"ControlValueAccessor","href":null},{"type":"text","text":{"content":"の実装もかなり簡潔になった。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"の実装もかなり簡潔になった。","href":null}],"color":"default"}},{"object":"block","id":"50454616-9271-4d00-9a53-bbd9ffe3ea1a","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"TimeInputComponent","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"TimeInputComponent","href":null},{"type":"text","text":{"content":" ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" ","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"54294bde-8127-4e3c-b376-60a8b43f2c1a","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"次のような","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"次のような","href":null},{"type":"text","text":{"content":"Time","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"Time","href":null},{"type":"text","text":{"content":"型を読み書きする","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"型を読み書きする","href":null},{"type":"text","text":{"content":"ControlValueAccessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"ControlValueAccessor","href":null},{"type":"text","text":{"content":"を題材にする。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を題材にする。","href":null}],"color":"default"}},{"object":"block","id":"bc4fbc83-bbe7-496c-a127-b839087e1ee8","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"export type Time = {\n  hour: number;\n  minute: number;\n};","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"export type Time = {\n  hour: number;\n  minute: number;\n};","href":null}],"language":"typescript"}},{"object":"block","id":"7133254f-8151-4bd8-bfa1-9f902ae60637","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"今回は素朴にselect要素で時間と分を選択するようなコンポーネントを考える。UIだけ実装すると次のようになる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"今回は素朴にselect要素で時間と分を選択するようなコンポーネントを考える。UIだけ実装すると次のようになる。","href":null}],"color":"default"}},{"object":"block","id":"7ab574f6-09c9-4684-bbb2-f243f1d52edc","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:55:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"@Component({\n  selector: 'app-time-input',\n  standalone: true,\n  imports: [DecimalPipe],\n  template: `\n    <div>\n      <select>\n        @for(i of hourOptions; track i) {\n          <option [value]=\"i\">{{ i | number : '2.0' }}</option>\n        }\n      </select>\n      <span>:</span>\n      <select>\n        @for(i of minuteOptions; track i) {\n          <option [value]=\"i\">{{ i | number : '2.0' }}</option>\n        }\n      </select>\n    </div>\n  `,\n  styles: `:host { display: inline-block; }`,\n})\nexport class TimeInputComponent {\n  readonly hourOptions = getRange(0, 23);\n 　　readonly minuteOptions = getRange(0, 59);\n}\n","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"@Component({\n  selector: 'app-time-input',\n  standalone: true,\n  imports: [DecimalPipe],\n  template: `\n    <div>\n      <select>\n        @for(i of hourOptions; track i) {\n          <option [value]=\"i\">{{ i | number : '2.0' }}</option>\n        }\n      </select>\n      <span>:</span>\n      <select>\n        @for(i of minuteOptions; track i) {\n          <option [value]=\"i\">{{ i | number : '2.0' }}</option>\n        }\n      </select>\n    </div>\n  `,\n  styles: `:host { display: inline-block; }`,\n})\nexport class TimeInputComponent {\n  readonly hourOptions = getRange(0, 23);\n 　　readonly minuteOptions = getRange(0, 59);\n}\n","href":null}],"language":"typescript"}},{"object":"block","id":"506ef0d5-5446-4b6a-ba77-cf3e19828025","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"image","image":{"caption":[{"type":"text","text":{"content":"時と分をセレクトボックスで選択できる素朴な時刻入力コンポーネント","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"時と分をセレクトボックスで選択できる素朴な時刻入力コンポーネント","href":null}],"type":"file","file":{"url":"https://prod-files-secure.s3.us-west-2.amazonaws.com/3c6255ea-b6c7-4055-8126-638d2819f0c3/f016cf07-271e-4deb-8177-87946c26eb5a/Untitled.png?X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Content-Sha256=UNSIGNED-PAYLOAD&X-Amz-Credential=AKIAT73L2G45HZZMZUHI%2F20240613%2Fus-west-2%2Fs3%2Faws4_request&X-Amz-Date=20240613T150940Z&X-Amz-Expires=3600&X-Amz-Signature=12b058a434beaed3e4a123172eecd38caa90932cf684ec321ba461616edbe451&X-Amz-SignedHeaders=host&x-id=GetObject","expiry_time":"2024-06-13T16:09:40.441Z"}}},{"object":"block","id":"36b6e4a4-77c2-4a7b-ba60-c68d3278ca80","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"これをAngular Formsと連携できるカスタムフォームコントロールとして実装しよう。まずは ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"これをAngular Formsと連携できるカスタムフォームコントロールとして実装しよう。まずは ","href":null},{"type":"text","text":{"content":"value","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"value","href":null},{"type":"text","text":{"content":" という","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" という","href":null},{"type":"text","text":{"content":"Time","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"Time","href":null},{"type":"text","text":{"content":"型のModel Inputを作成する。これを次のように","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"型のModel Inputを作成する。これを次のように","href":null},{"type":"text","text":{"content":"NgModel","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"NgModel","href":null},{"type":"text","text":{"content":"を使ってselectと紐付ける。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を使ってselectと紐付ける。","href":null}],"color":"default"}},{"object":"block","id":"27d5d7c6-31bf-4aa1-b52f-5f3ede6ccb67","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:56:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"@Component({\n  selector: 'app-time-input',\n  standalone: true,\n  imports: [FormsModule, DecimalPipe],\n  template: `\n    <div>\n      <select [ngModel]=\"value().hour\" (ngModelChange)=\"updateHour($event)\">\n      @for(i of hourOptions; track i) {\n        <option [value]=\"i\">{{ i | number : '2.0' }}</option>\n      }\n      </select>\n      <span>:</span>\n      <select [ngModel]=\"value().minute\" (ngModelChange)=\"updateMinute($event)\">\n      @for(i of minuteOptions; track i) {\n        <option [value]=\"i\">{{ i | number : '2.0' }}</option>\n      }\n      </select>\n    </div>\n  `\n})\nexport class TimeInputComponent {\n  readonly value = model<Time>({ hour: 0, minute: 0 });\n\n  readonly hourOptions = getRange(0, 23);\n  readonly minuteOptions = getRange(0, 59);\n\n  updateHour(value: number) {\n    this.value.update((curr) => ({ ...curr, hour: value }));\n  }\n\n  updateMinute(value: number) {\n    this.value.update((v) => ({ ...v, minute: value }));\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"@Component({\n  selector: 'app-time-input',\n  standalone: true,\n  imports: [FormsModule, DecimalPipe],\n  template: `\n    <div>\n      <select [ngModel]=\"value().hour\" (ngModelChange)=\"updateHour($event)\">\n      @for(i of hourOptions; track i) {\n        <option [value]=\"i\">{{ i | number : '2.0' }}</option>\n      }\n      </select>\n      <span>:</span>\n      <select [ngModel]=\"value().minute\" (ngModelChange)=\"updateMinute($event)\">\n      @for(i of minuteOptions; track i) {\n        <option [value]=\"i\">{{ i | number : '2.0' }}</option>\n      }\n      </select>\n    </div>\n  `\n})\nexport class TimeInputComponent {\n  readonly value = model<Time>({ hour: 0, minute: 0 });\n\n  readonly hourOptions = getRange(0, 23);\n  readonly minuteOptions = getRange(0, 59);\n\n  updateHour(value: number) {\n    this.value.update((curr) => ({ ...curr, hour: value }));\n  }\n\n  updateMinute(value: number) {\n    this.value.update((v) => ({ ...v, minute: value }));\n  }\n}","href":null}],"language":"typescript"}},{"object":"block","id":"3bb1b3d3-fd83-4144-80d0-514df17e584a","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"これだけでも、親からは ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"これだけでも、親からは ","href":null},{"type":"text","text":{"content":"<app-time-input [(value)]=\"...\">","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"<app-time-input [(value)]=\"...\">","href":null},{"type":"text","text":{"content":" という形で双方向バインディング可能になった。ここからはさらに","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" という形で双方向バインディング可能になった。ここからはさらに","href":null},{"type":"text","text":{"content":"<app-time-input [(ngModel)]=\"...\">","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"<app-time-input [(ngModel)]=\"...\">","href":null},{"type":"text","text":{"content":" や","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" や","href":null},{"type":"text","text":{"content":"<app-time-input [formControl]=\"...\">","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"<app-time-input [formControl]=\"...\">","href":null},{"type":"text","text":{"content":" のようにAngular Formsとの連携が可能となるように、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" のようにAngular Formsとの連携が可能となるように、","href":null},{"type":"text","text":{"content":"ControlValueAccessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"ControlValueAccessor","href":null},{"type":"text","text":{"content":"としての実装を加える。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"としての実装を加える。","href":null}],"color":"default"}},{"object":"block","id":"ed72c0e2-e4d5-4564-9028-a9d43b542bd2","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[],"color":"default"}},{"object":"block","id":"d7f82470-7e94-4cf5-b470-50b5a695cba4","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"TImeInputComponent","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"TImeInputComponent","href":null},{"type":"text","text":{"content":" クラスで","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" クラスで","href":null},{"type":"text","text":{"content":"ControlValueAccessor","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"ControlValueAccessor","href":null},{"type":"text","text":{"content":" インターフェースを実装すると次のようになる。Angular Formsからカスタムフォームコントロールであることが識別できるように","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" インターフェースを実装すると次のようになる。Angular Formsからカスタムフォームコントロールであることが識別できるように","href":null},{"type":"text","text":{"content":"NG_VALUE_ACCESSOR","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"NG_VALUE_ACCESSOR","href":null},{"type":"text","text":{"content":" として自身を提供することを忘れないようにする。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" として自身を提供することを忘れないようにする。","href":null}],"color":"default"}},{"object":"block","id":"4def4fc5-e88b-4591-86d8-78d457b57491","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"@Component({\n  selector: 'app-time-input',\n  standalone: true,\n  imports: [FormsModule, DecimalPipe],\n  template: `...`,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: TimeInputComponent,\n      multi: true,\n    },\n  ],\n})\nexport class TimeInputComponent implements ControlValueAccessor {\n  readonly value = model<Time>({ hour: 0, minute: 0 });\n  #onChangeListener = (_: Time) => {};\n  \n  constructor() {\n    // Emit value change to form control\n    effect(() => {\n      this.#onChangeListener(this.#value());\n    });\n  }\n\n  // ControlValueAccessor implementation\n\n  writeValue(value: Time): void {\n    this.value.set(value);\n  }\n\n  registerOnChange(fn: (v: Time) => void): void {\n    this.#onChangeListener = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // noop\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"@Component({\n  selector: 'app-time-input',\n  standalone: true,\n  imports: [FormsModule, DecimalPipe],\n  template: `...`,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: TimeInputComponent,\n      multi: true,\n    },\n  ],\n})\nexport class TimeInputComponent implements ControlValueAccessor {\n  readonly value = model<Time>({ hour: 0, minute: 0 });\n  #onChangeListener = (_: Time) => {};\n  \n  constructor() {\n    // Emit value change to form control\n    effect(() => {\n      this.#onChangeListener(this.#value());\n    });\n  }\n\n  // ControlValueAccessor implementation\n\n  writeValue(value: Time): void {\n    this.value.set(value);\n  }\n\n  registerOnChange(fn: (v: Time) => void): void {\n    this.#onChangeListener = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // noop\n  }\n}","href":null}],"language":"typescript"}},{"object":"block","id":"9f6982e2-b21c-4f51-b9a6-188a34df3d1e","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Signalベースになったことでのポイントは、フォームモデルへ値の変更を伝えるためのコールバック関数 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Signalベースになったことでのポイントは、フォームモデルへ値の変更を伝えるためのコールバック関数 ","href":null},{"type":"text","text":{"content":"#onChangeListener","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"#onChangeListener","href":null},{"type":"text","text":{"content":" の呼び出しが、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" の呼び出しが、","href":null},{"type":"text","text":{"content":"value","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"value","href":null},{"type":"text","text":{"content":" SignalのEffectを書くだけで完結している点だ。どのような経緯であれ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" SignalのEffectを書くだけで完結している点だ。どのような経緯であれ","href":null},{"type":"text","text":{"content":"value","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"value","href":null},{"type":"text","text":{"content":" に変更があればフォームモデルに同期できるため、同期漏れの心配がない。また、コンポーネントが破棄されたあとのメモリリークの心配もない。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" に変更があればフォームモデルに同期できるため、同期漏れの心配がない。また、コンポーネントが破棄されたあとのメモリリークの心配もない。","href":null}],"color":"default"}},{"object":"block","id":"3b94a095-85f1-4f12-babe-87fbde02be07","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"  #onChangeListener = (_: Time) => {};\n\n  constructor() {\n    effect(() => {\n      this.#onChangeListener(this.value());\n    });\n  }\n\n  registerOnChange(fn: (v: Time) => void): void {\n    this.#onChangeListener = fn;\n  }","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"  #onChangeListener = (_: Time) => {};\n\n  constructor() {\n    effect(() => {\n      this.#onChangeListener(this.value());\n    });\n  }\n\n  registerOnChange(fn: (v: Time) => void): void {\n    this.#onChangeListener = fn;\n  }","href":null}],"language":"typescript"}},{"object":"block","id":"6f45510d-8ae6-4825-854f-5300865a1ec5","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"同期漏れの心配はないが、逆に同期しすぎることはありえる。特に今回の例では","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"同期漏れの心配はないが、逆に同期しすぎることはありえる。特に今回の例では","href":null},{"type":"text","text":{"content":"Time","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"Time","href":null},{"type":"text","text":{"content":" 型はオブジェクトなので、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" 型はオブジェクトなので、","href":null},{"type":"text","text":{"content":"value","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"value","href":null},{"type":"text","text":{"content":" が更新されるたびに参照が変わる。等値ではないことになるため、実際の値が変わっていなくても","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" が更新されるたびに参照が変わる。等値ではないことになるため、実際の値が変わっていなくても","href":null},{"type":"text","text":{"content":"value","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"value","href":null},{"type":"text","text":{"content":" がセットされるたびにフォームモデルへ通知されてしまう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" がセットされるたびにフォームモデルへ通知されてしまう。","href":null}],"color":"default"}},{"object":"block","id":"b717165f-cd66-4ab4-94af-574cb0f05209","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"callout","callout":{"rich_text":[{"type":"text","text":{"content":"model()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"model()","href":null},{"type":"text","text":{"content":" は ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" は ","href":null},{"type":"text","text":{"content":"signal()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"signal()","href":null},{"type":"text","text":{"content":" や ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" や ","href":null},{"type":"text","text":{"content":"computed()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"computed()","href":null},{"type":"text","text":{"content":" と違い、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" と違い、","href":null},{"type":"text","text":{"content":"equal","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"equal","href":null},{"type":"text","text":{"content":" オプションを持たないため、等値判定を変更できない。これは ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" オプションを持たないため、等値判定を変更できない。これは ","href":null},{"type":"text","text":{"content":"input()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"input()","href":null},{"type":"text","text":{"content":" も同様である。オプションの追加を求めるイシューがあるため、賛同する人がいればイシューに対してさらなるVoteをお願いしたい。\n\n","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" も同様である。オプションの追加を求めるイシューがあるため、賛同する人がいればイシューに対してさらなるVoteをお願いしたい。\n\n","href":null},{"type":"text","text":{"content":"https://github.com/angular/angular/issues/54111","link":{"url":"https://github.com/angular/angular/issues/54111"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"https://github.com/angular/angular/issues/54111","href":"https://github.com/angular/angular/issues/54111"}],"icon":{"type":"emoji","emoji":"💡"},"color":"gray_background"}},{"object":"block","id":"f842c17e-36e3-4405-86e9-383e7430877d","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"この問題を解決するために、新たに ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"この問題を解決するために、新たに ","href":null},{"type":"text","text":{"content":"#changedValue","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"#changedValue","href":null},{"type":"text","text":{"content":" Signalを作成する。これは","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" Signalを作成する。これは","href":null},{"type":"text","text":{"content":"value","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"value","href":null},{"type":"text","text":{"content":" Signalから派生し、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" Signalから派生し、","href":null},{"type":"text","text":{"content":"Time","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"Time","href":null},{"type":"text","text":{"content":"型のための等値判定関数を与えていることで、実際の値が変更したときだけ通知されるSignalになる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"型のための等値判定関数を与えていることで、実際の値が変更したときだけ通知されるSignalになる。","href":null}],"color":"default"}},{"object":"block","id":"75158f5a-82a9-460d-874a-c30146f08e72","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"// 等値判定関数\nexport function isEqualTime(a: Time, b: Time) {\n  return a.hour === b.hour && a.minute === b.minute;\n}\n\nexport class TimeInputComponent implements ControlValueAccessor {\n  readonly value = model<Time>({ hour: 0, minute: 0 });\n\n  readonly #changedValue = computed(() => this.value(), { equal: isEqualTime });\n\n  constructor() {\n    // Emit value change to form control\n    effect(() => {\n      this.#onChangeListener(this.#changedValue());\n    });\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"// 等値判定関数\nexport function isEqualTime(a: Time, b: Time) {\n  return a.hour === b.hour && a.minute === b.minute;\n}\n\nexport class TimeInputComponent implements ControlValueAccessor {\n  readonly value = model<Time>({ hour: 0, minute: 0 });\n\n  readonly #changedValue = computed(() => this.value(), { equal: isEqualTime });\n\n  constructor() {\n    // Emit value change to form control\n    effect(() => {\n      this.#onChangeListener(this.#changedValue());\n    });\n  }\n}","href":null}],"language":"typescript"}},{"object":"block","id":"2d35864b-0e79-45bd-83ac-ebec7ed4da31","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[],"color":"default"}},{"object":"block","id":"5275a2a8-721d-40a4-87e8-a4d68cbbf0a5","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"動作するサンプルは以下。現実のユースケースではもう少し複雑なコンポーネントになるが、基本的な構造はこの形から始めて拡張していけるはずだ。また、Angular本体のほうでもよりSignal APIとの親和性を高めるためのフォームAPIの拡張を計画しているため、それが来るともっとボイラープレートを減らせるかもしれない。それに備える意味でも今からカスタムコントロールをSignalベースに寄せていくのは無駄にならないだろう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"動作するサンプルは以下。現実のユースケースではもう少し複雑なコンポーネントになるが、基本的な構造はこの形から始めて拡張していけるはずだ。また、Angular本体のほうでもよりSignal APIとの親和性を高めるためのフォームAPIの拡張を計画しているため、それが来るともっとボイラープレートを減らせるかもしれない。それに備える意味でも今からカスタムコントロールをSignalベースに寄せていくのは無駄にならないだろう。","href":null}],"color":"default"}},{"object":"block","id":"7c36741e-11c3-40fa-a6a4-892b8125bd05","parent":{"type":"page_id","page_id":"3a28e81c-63c8-4670-af97-d9e6218e2db8"},"created_time":"2024-06-13T14:44:00.000Z","last_edited_time":"2024-06-13T14:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"embed","embed":{"caption":[],"url":"https://stackblitz.com/edit/angular-91xmwg?ctl=1&embed=1&file=src/main.ts"}}]