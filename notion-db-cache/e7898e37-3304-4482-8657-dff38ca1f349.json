[{"object":"block","id":"035b8bac-3789-48ee-8c17-66b4a603e397","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T06:49:00.000Z","last_edited_time":"2023-02-08T11:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Angular v14からのスタンドアロンコンポーネントを中心とした新しい流れの中で、RxAngularファミリーの ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular v14からのスタンドアロンコンポーネントを中心とした新しい流れの中で、RxAngularファミリーの ","href":null},{"type":"text","text":{"content":"@rx-angular/state","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@rx-angular/state","href":null},{"type":"text","text":{"content":" を使ったAngularコンポーネントの状態管理が個人的に気に入っているので紹介したい。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" を使ったAngularコンポーネントの状態管理が個人的に気に入っているので紹介したい。","href":null}],"color":"default"}},{"object":"block","id":"acb51636-015d-4413-93ef-1aa4809e3e73","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2023-02-08T11:07:00.000Z","last_edited_time":"2023-02-08T11:07:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[],"color":"default"}},{"object":"block","id":"bc662830-aa9a-41f0-a953-4a92aea94bda","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T06:49:00.000Z","last_edited_time":"2023-02-08T11:07:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://www.rx-angular.io/docs/state"}},{"object":"block","id":"3e3551a8-e8d7-4b14-9693-eb87765c3339","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2023-02-08T11:07:00.000Z","last_edited_time":"2023-02-08T11:07:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[],"color":"default"}},{"object":"block","id":"c87af7aa-a6b7-4bdc-aa9c-0acf740860d8","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T06:50:00.000Z","last_edited_time":"2022-10-26T07:03:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"ちなみに、単純に機能の面だけみれば NgRx Component Store や Elf など他にも同様のライブラリはある。RxAngularを今回取り上げたのは、個人的に筋がいいと思っているのと、それらと比べて知名度がまだ低そうなので持ち上げたいのが理由である。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ちなみに、単純に機能の面だけみれば NgRx Component Store や Elf など他にも同様のライブラリはある。RxAngularを今回取り上げたのは、個人的に筋がいいと思っているのと、それらと比べて知名度がまだ低そうなので持ち上げたいのが理由である。","href":null}],"color":"default"}},{"object":"block","id":"15525412-8225-4fea-bb6d-e3b2375d8456","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:49:00.000Z","last_edited_time":"2022-10-26T09:17:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"https://ngrx.io/guide/component-store/","link":{"url":"https://ngrx.io/guide/component-store/"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"https://ngrx.io/guide/component-store/","href":"https://ngrx.io/guide/component-store/"}],"color":"default"}},{"object":"block","id":"e990bcdf-8d91-48e1-be7c-63d1f03d84c2","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T07:02:00.000Z","last_edited_time":"2022-10-26T07:02:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://ngneat.github.io/elf/"}},{"object":"block","id":"bed3b45a-18bd-43ec-acb0-e9e42a622318","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T07:03:00.000Z","last_edited_time":"2022-10-26T07:04:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"ライブラリの導入やチュートリアルについては公式ドキュメントを見てもらうべきであるので、ここではRxAngularを使った実装の例を見てもらうことにする。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ライブラリの導入やチュートリアルについては公式ドキュメントを見てもらうべきであるので、ここではRxAngularを使った実装の例を見てもらうことにする。","href":null}],"color":"default"}},{"object":"block","id":"b3764637-d78e-4ca0-ab63-427bdcc9ca99","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T07:03:00.000Z","last_edited_time":"2022-10-26T07:03:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"RxAngularを使ったSingle State Streamパターン","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"RxAngularを使ったSingle State Streamパターン","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"a90c631d-41ef-4c88-a995-edb1ad2dc648","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T07:03:00.000Z","last_edited_time":"2022-10-26T07:07:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Single State Streamパターン","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Single State Streamパターン","href":null},{"type":"text","text":{"content":"とは、私がそのように名付けて呼んでいるAngularコンポーネントの状態管理パターンのひとつである。端的に言うと、あるコンポーネントの状態を1つのStream (Observable)として扱い、テンプレートの大部分を同期的なバインディングで記述するものである。詳しくはSingle State Streamパターンについて書いた記事を読んでほしい。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"とは、私がそのように名付けて呼んでいるAngularコンポーネントの状態管理パターンのひとつである。端的に言うと、あるコンポーネントの状態を1つのStream (Observable)として扱い、テンプレートの大部分を同期的なバインディングで記述するものである。詳しくはSingle State Streamパターンについて書いた記事を読んでほしい。","href":null}],"color":"default"}},{"object":"block","id":"74fb56cc-5f8e-466a-a482-16f977efdc67","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T07:04:00.000Z","last_edited_time":"2022-10-26T07:04:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"bookmark","bookmark":{"caption":[],"url":"https://blog.lacolaco.net/2019/07/angular-single-state-stream-pattern/"}},{"object":"block","id":"fca8f7c5-3734-4e6e-a976-8ed7d8f5d504","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T07:05:00.000Z","last_edited_time":"2022-10-26T08:17:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"シンプルな例として、ユーザー情報を非同期的に取得して表示するようなケースだと、このようになる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"シンプルな例として、ユーザー情報を非同期的に取得して表示するようなケースだと、このようになる。","href":null}],"color":"default"}},{"object":"block","id":"f7347219-62b4-43da-adc8-02de9abfc4f9","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:17:00.000Z","last_edited_time":"2022-10-26T08:18:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { RxState } from '@rx-angular/state';\n\ntype State = {\n  user: User | null;\n  userFetching: boolean;\n};\n\nconst initialState: State = {\n  user: null,\n  userFetching: false,\n};\n\n@Component({\n  selector: 'my-app',\n  standalone: true,\n  imports: [CommonModule],\n  providers: [RxState],\n  template: ` \n  <ng-container *ngIf=\"state$ | async as state\">\n    <div><button (click)=\"load()\">Load</button></div>\n\n    <ng-container *ngIf=\"state.userFetching; else showUser\">\n      <span>Loading...</span>\n    </ng-container>\n\n    <ng-template #showUser>\n      <span>User Name: {{ state.user.name }} </span>\n    </ng-template>\n  </ng-container>\n`,\n})\nexport class AppComponent {\n  private readonly store = inject<RxState<State>>(RxState);\n\n  readonly state$ = this.store.select();\n\n  constructor() {\n    this.store.set(initialState);\n  }\n\n  load() {\n    this.store.set({ userFetching: true });\n    // fetch user asynchronously\n    setTimeout(() => {\n      this.store.set({\n        user: { name: 'John' },\n        userFetching: false,\n      });\n    }, 1000);\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"import { CommonModule } from '@angular/common';\nimport { Component, inject } from '@angular/core';\nimport { RxState } from '@rx-angular/state';\n\ntype State = {\n  user: User | null;\n  userFetching: boolean;\n};\n\nconst initialState: State = {\n  user: null,\n  userFetching: false,\n};\n\n@Component({\n  selector: 'my-app',\n  standalone: true,\n  imports: [CommonModule],\n  providers: [RxState],\n  template: ` \n  <ng-container *ngIf=\"state$ | async as state\">\n    <div><button (click)=\"load()\">Load</button></div>\n\n    <ng-container *ngIf=\"state.userFetching; else showUser\">\n      <span>Loading...</span>\n    </ng-container>\n\n    <ng-template #showUser>\n      <span>User Name: {{ state.user.name }} </span>\n    </ng-template>\n  </ng-container>\n`,\n})\nexport class AppComponent {\n  private readonly store = inject<RxState<State>>(RxState);\n\n  readonly state$ = this.store.select();\n\n  constructor() {\n    this.store.set(initialState);\n  }\n\n  load() {\n    this.store.set({ userFetching: true });\n    // fetch user asynchronously\n    setTimeout(() => {\n      this.store.set({\n        user: { name: 'John' },\n        userFetching: false,\n      });\n    }, 1000);\n  }\n}","href":null}],"language":"typescript"}},{"object":"block","id":"5ac00888-80d6-4940-9b67-3d4dd29df9c3","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:18:00.000Z","last_edited_time":"2022-10-26T08:19:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Stackblitzで動作するサンプルはこちら。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Stackblitzで動作するサンプルはこちら。","href":null}],"color":"default"}},{"object":"block","id":"ca1674b2-213c-4a5e-9240-06ae68351fd5","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:44:00.000Z","last_edited_time":"2022-10-26T08:44:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"embed","embed":{"caption":[],"url":"https://stackblitz.com/edit/angular-ivy-r34mhv?ctl=1&embed=1&file=src/app/app.component.ts"}},{"object":"block","id":"2e5ae37a-2c90-4337-b96e-1c717696ec8c","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:19:00.000Z","last_edited_time":"2022-10-26T08:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"RxStore","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"RxStore","href":null},{"type":"text","text":{"content":" の注入を ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" の注入を ","href":null},{"type":"text","text":{"content":"inject()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"inject()","href":null},{"type":"text","text":{"content":" 関数で行っているが、これはもちろんコンストラクタ引数でも構わない。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" 関数で行っているが、これはもちろんコンストラクタ引数でも構わない。","href":null}],"color":"default"}},{"object":"block","id":"c3fd1609-640a-4079-b224-18ff0d54ead7","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:20:00.000Z","last_edited_time":"2022-10-26T08:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"export class AppComponent {\n  readonly state$ = this.store.select();\n\n  constructor(private readonly store: RxState<State>) {\n    this.store.set(initialState);\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"export class AppComponent {\n  readonly state$ = this.store.select();\n\n  constructor(private readonly store: RxState<State>) {\n    this.store.set(initialState);\n  }\n}","href":null}],"language":"typescript"}},{"object":"block","id":"f34e6dff-0f97-4e81-9ec8-9ef3848cfd8f","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:20:00.000Z","last_edited_time":"2022-10-26T08:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[],"color":"default"}},{"object":"block","id":"6ea47cd8-d228-4ced-8453-3b84a6241122","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:20:00.000Z","last_edited_time":"2022-10-26T08:27:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"rx-angular/state の特徴的な点は、状態の初期化が遅延されていることだ。多くの状態管理ライブラリや ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"rx-angular/state の特徴的な点は、状態の初期化が遅延されていることだ。多くの状態管理ライブラリや ","href":null},{"type":"text","text":{"content":"BehaviorSubject","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"BehaviorSubject","href":null},{"type":"text","text":{"content":" による素朴な状態管理では、 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" による素朴な状態管理では、 ","href":null},{"type":"text","text":{"content":"initialState","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"initialState","href":null},{"type":"text","text":{"content":" を与える初期化が一般的である。そのStateの型に合った初期値をインスタンス生成時に与える必要があるが、 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" を与える初期化が一般的である。そのStateの型に合った初期値をインスタンス生成時に与える必要があるが、 ","href":null},{"type":"text","text":{"content":"RxState","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"RxState","href":null},{"type":"text","text":{"content":" には ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" には ","href":null},{"type":"text","text":{"content":"initialState","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"initialState","href":null},{"type":"text","text":{"content":" という概念はない。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" という概念はない。","href":null}],"color":"default"}},{"object":"block","id":"2aa3bd55-0c47-49a0-a522-2e5f1d3c37af","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:25:00.000Z","last_edited_time":"2022-10-26T08:30:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":" ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" ","href":null},{"type":"text","text":{"content":"select()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"select()","href":null},{"type":"text","text":{"content":" メソッドが返すObservableは最初の ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" メソッドが返すObservableは最初の ","href":null},{"type":"text","text":{"content":"set()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"set()","href":null},{"type":"text","text":{"content":" が呼び出されるまで何も値を流さない。初期値を与えたければ、利用者がコンストラクタなどの初期化にふさわしいタイミングで ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" が呼び出されるまで何も値を流さない。初期値を与えたければ、利用者がコンストラクタなどの初期化にふさわしいタイミングで ","href":null},{"type":"text","text":{"content":"set()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"set()","href":null},{"type":"text","text":{"content":" メソッドを使って状態をセットすればいい。大抵のケースではそうすることになるだろう。だが、初期値を与えるかどうかをユーザー側で選択できるようにしていることが面白い。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" メソッドを使って状態をセットすればいい。大抵のケースではそうすることになるだろう。だが、初期値を与えるかどうかをユーザー側で選択できるようにしていることが面白い。","href":null}],"color":"default"}},{"object":"block","id":"f0e3b926-4773-43b3-9314-8b3f55beb243","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:22:00.000Z","last_edited_time":"2022-10-26T08:31:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"継承を使ったパターンを避けたい理由","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"継承を使ったパターンを避けたい理由","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"8330ed4d-28f7-4722-869b-e19333eaec33","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:31:00.000Z","last_edited_time":"2022-10-26T08:33:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"rx-angular/state の ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"rx-angular/state の ","href":null},{"type":"text","text":{"content":"RxState","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"RxState","href":null},{"type":"text","text":{"content":" クラスは上記のようにサービスとしてDI経由で利用できるが、クラスの継承を使った使い方も提示されている。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" クラスは上記のようにサービスとしてDI経由で利用できるが、クラスの継承を使った使い方も提示されている。","href":null}],"color":"default"}},{"object":"block","id":"a7296986-1824-4845-823f-2427269d3347","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:32:00.000Z","last_edited_time":"2022-10-26T08:32:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Setup | RxAngular ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Setup | RxAngular ","href":null},{"type":"text","text":{"content":"https://www.rx-angular.io/docs/state/setup#inherit","link":{"url":"https://www.rx-angular.io/docs/state/setup#inherit"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"https://www.rx-angular.io/docs/state/setup#inherit","href":"https://www.rx-angular.io/docs/state/setup#inherit"},{"type":"text","text":{"content":" ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" ","href":null}],"color":"default"}},{"object":"block","id":"3ec75c9b-d59c-47fe-a164-ff87f70d5226","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:32:00.000Z","last_edited_time":"2022-10-26T08:50:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"@Component({})\nexport class StatefulComponent extends RxState<{ foo: number }> {\n  readonly state$ = this.select();\n\n  constructor() {\n    super();\n  }\n}","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"@Component({})\nexport class StatefulComponent extends RxState<{ foo: number }> {\n  readonly state$ = this.select();\n\n  constructor() {\n    super();\n  }\n}","href":null}],"language":"typescript"}},{"object":"block","id":"dc0873c2-2623-42ec-80b3-3c3d9ac16372","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:33:00.000Z","last_edited_time":"2022-10-26T08:34:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"コンポーネントクラスが ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"コンポーネントクラスが ","href":null},{"type":"text","text":{"content":"RxState","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"RxState","href":null},{"type":"text","text":{"content":" クラスを継承することで、コンポーネント自身の ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" クラスを継承することで、コンポーネント自身の ","href":null},{"type":"text","text":{"content":"this","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"this","href":null},{"type":"text","text":{"content":" が ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" が ","href":null},{"type":"text","text":{"content":"select()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"select()","href":null},{"type":"text","text":{"content":" や ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" や ","href":null},{"type":"text","text":{"content":"set()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"set()","href":null},{"type":"text","text":{"content":" などのAPIを持つようになる。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" などのAPIを持つようになる。","href":null}],"color":"default"}},{"object":"block","id":"30ba51fa-6907-4582-ba1d-94650333d649","parent":{"type":"page_id","page_id":"e7898e37-3304-4482-8657-dff38ca1f349"},"created_time":"2022-10-26T08:34:00.000Z","last_edited_time":"2022-10-26T08:40:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"この書き方は手軽さではあるが、あまり本格的に使いたいものではない。その理由はテンプレートに対する可視性や意図しない外部へのAPIの露出によって、このライブラリへの結合が複雑になってしまうことがある。 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"この書き方は手軽さではあるが、あまり本格的に使いたいものではない。その理由はテンプレートに対する可視性や意図しない外部へのAPIの露出によって、このライブラリへの結合が複雑になってしまうことがある。 ","href":null},{"type":"text","text":{"content":"this","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"this","href":null},{"type":"text","text":{"content":" に ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" に ","href":null},{"type":"text","text":{"content":"RxState","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"RxState","href":null},{"type":"text","text":{"content":" のAPIが継承されるということは、テンプレート内で直接 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" のAPIが継承されるということは、テンプレート内で直接 ","href":null},{"type":"text","text":{"content":"set()","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"set()","href":null},{"type":"text","text":{"content":" できてしまうということだ。うっかり参照してしまうことを避けるために、継承ではなくDIによるクラスフィールドとして ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" できてしまうということだ。うっかり参照してしまうことを避けるために、継承ではなくDIによるクラスフィールドとして ","href":null},{"type":"text","text":{"content":"private","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"private","href":null},{"type":"text","text":{"content":" の可視性で扱い、テンプレートから参照できるのはテンプレートで使われることを意図したフィールドだけにしたい。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" の可視性で扱い、テンプレートから参照できるのはテンプレートで使われることを意図したフィールドだけにしたい。","href":null}],"color":"default"}}]