[{"object":"block","id":"1a251602-b8f6-4961-ba28-422a6e02355d","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Angular CLI v11.2 から","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular CLI v11.2 から","href":null},{"type":"text","text":{"content":"Tailwind CSS","link":{"url":"https://tailwindcss.com/"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Tailwind CSS","href":"https://tailwindcss.com/"},{"type":"text","text":{"content":"の公式サポートが追加された。 コミュニティでは以前から","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"の公式サポートが追加された。 コミュニティでは以前から","href":null},{"type":"text","text":{"content":"@ngneat/tailwind","link":{"url":"https://github.com/ngneat/tailwind/"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@ngneat/tailwind","href":"https://github.com/ngneat/tailwind/"},{"type":"text","text":{"content":"のようなサードパーティライブラリによってサポートされており、そういう意味では Angular + Tailwind CSS の組み合わせ自体は今に始まったものではない。 とはいえ公式サポートされたことによりこれまでよりも多くの Angular ユーザーが Tailwind CSS を検討するようになるだろう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"のようなサードパーティライブラリによってサポートされており、そういう意味では Angular + Tailwind CSS の組み合わせ自体は今に始まったものではない。 とはいえ公式サポートされたことによりこれまでよりも多くの Angular ユーザーが Tailwind CSS を検討するようになるだろう。","href":null}],"color":"default"}},{"object":"block","id":"59773689-b865-48a1-aa57-1c71f350c22d","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"この記事では Angular と組み合わせる上での Tailwind CSS の使われ方について個人的な所感をまとめる。 あくまでも所感であり、開発者コミュニティがどのようなプラクティスを支持していくかはまだこれから模索されていく段階であることを念頭に置いてもらえればと思う。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"この記事では Angular と組み合わせる上での Tailwind CSS の使われ方について個人的な所感をまとめる。 あくまでも所感であり、開発者コミュニティがどのようなプラクティスを支持していくかはまだこれから模索されていく段階であることを念頭に置いてもらえればと思う。","href":null}],"color":"default"}},{"object":"block","id":"6db05f5f-cb5e-4736-a9ef-0d794a4c8f93","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"前提として、それなりに持続的な開発を見込む（メンテナビリティが関心にある）プロジェクトにおいての話であって、作り捨てのプロトタイピングはこの記事の対象外だ。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"前提として、それなりに持続的な開発を見込む（メンテナビリティが関心にある）プロジェクトにおいての話であって、作り捨てのプロトタイピングはこの記事の対象外だ。","href":null}],"color":"default"}},{"object":"block","id":"dfe227b0-5b97-4443-a0ad-baa3a469e38f","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"コンポーネントスタイル内での ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"コンポーネントスタイル内での ","href":null},{"type":"text","text":{"content":"@apply","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@apply","href":null},{"type":"text","text":{"content":" は避ける","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" は避ける","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"8338c0f3-4eee-4a6f-9d41-0e478a4daced","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Tailwind CSS では","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Tailwind CSS では","href":null},{"type":"text","text":{"content":"@apply","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@apply","href":null},{"type":"text","text":{"content":" によってユーティリティクラスをまとめて新たなクラスを定義できるが、この機能は Angular のコンポーネントスタイル中で使うのは極力避けたほうがよい。 その理由は、複数のコンポーネントが同じクラスを ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" によってユーティリティクラスをまとめて新たなクラスを定義できるが、この機能は Angular のコンポーネントスタイル中で使うのは極力避けたほうがよい。 その理由は、複数のコンポーネントが同じクラスを ","href":null},{"type":"text","text":{"content":"@apply","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@apply","href":null},{"type":"text","text":{"content":" したときの重複を最適化することができないからだ。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" したときの重複を最適化することができないからだ。","href":null}],"color":"default"}},{"object":"block","id":"0e60efea-3add-4cdc-84d3-700ae15cf558","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Tailwind CSS とともに使われる","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Tailwind CSS とともに使われる","href":null},{"type":"text","text":{"content":"@apply","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@apply","href":null},{"type":"text","text":{"content":" は、与えられたクラスのルールセットをビルド時にマージして","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" は、与えられたクラスのルールセットをビルド時にマージして","href":null},{"type":"text","text":{"content":"インライン化","link":null},"annotations":{"bold":true,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"インライン化","href":null},{"type":"text","text":{"content":"する。 つまり、同じクラスを含む ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"する。 つまり、同じクラスを含む ","href":null},{"type":"text","text":{"content":"@apply","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@apply","href":null},{"type":"text","text":{"content":" を書くたびにその重複分だけビルド後の CSS のサイズは大きくなっていく。 グローバル CSS でも同じことは起きるが、コンポーネントスタイルは他のコンポーネントのことを気にしないため、各コンポーネントが好き勝手に ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" を書くたびにその重複分だけビルド後の CSS のサイズは大きくなっていく。 グローバル CSS でも同じことは起きるが、コンポーネントスタイルは他のコンポーネントのことを気にしないため、各コンポーネントが好き勝手に ","href":null},{"type":"text","text":{"content":"@apply","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@apply","href":null},{"type":"text","text":{"content":" を多用するとアプリケーション全体の CSS サイズが膨張しやすい。 CSS のサイズが大きくなればそれだけページの読み込みパフォーマンスに影響が出る。注意が必要だ。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" を多用するとアプリケーション全体の CSS サイズが膨張しやすい。 CSS のサイズが大きくなればそれだけページの読み込みパフォーマンスに影響が出る。注意が必要だ。","href":null}],"color":"default"}},{"object":"block","id":"0727f402-ff33-4727-b90e-fdbca299ba0a","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"従来までの","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"従来までの","href":null},{"type":"text","text":{"content":"@ngneat/tailwind","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@ngneat/tailwind","href":null},{"type":"text","text":{"content":" のセットアップであれば、コンポーネントスタイル中での ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" のセットアップであれば、コンポーネントスタイル中での ","href":null},{"type":"text","text":{"content":"@apply","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@apply","href":null},{"type":"text","text":{"content":" はオプトインになっていたが、 Angular CLI でのサポートはデフォルトでコンポーネントスタイル中でも使えてしまうため、今のところは良心による制限しかできない。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" はオプトインになっていたが、 Angular CLI でのサポートはデフォルトでコンポーネントスタイル中でも使えてしまうため、今のところは良心による制限しかできない。","href":null}],"color":"default"}},{"object":"block","id":"e8920857-c9dc-430b-8a23-ec4ed616c9ca","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"スタイルの再利用はコンポーネントの責務とする","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"スタイルの再利用はコンポーネントの責務とする","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"ce1a8f3e-3368-497c-801c-9c03c64ad0cb","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Tailwind CSS の","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Tailwind CSS の","href":null},{"type":"text","text":{"content":"Extracting Components","link":{"url":"https://tailwindcss.com/docs/extracting-components"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Extracting Components","href":"https://tailwindcss.com/docs/extracting-components"},{"type":"text","text":{"content":"にも書かれているが、 Tailwind CSS のユーティリティクラスの組み合わせを再利用可能にしたい場合に、まず検討すべきはそのテンプレート自体の切り出しだ。 その意図は、コンポーネント境界の真実の情報源をひとつにすることにある。 CSS の中で ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"にも書かれているが、 Tailwind CSS のユーティリティクラスの組み合わせを再利用可能にしたい場合に、まず検討すべきはそのテンプレート自体の切り出しだ。 その意図は、コンポーネント境界の真実の情報源をひとつにすることにある。 CSS の中で ","href":null},{"type":"text","text":{"content":".card","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":".card","href":null},{"type":"text","text":{"content":" クラスを宣言し、そのクラスを ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" クラスを宣言し、そのクラスを ","href":null},{"type":"text","text":{"content":"<my-card>","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"<my-card>","href":null},{"type":"text","text":{"content":" コンポーネントに適用するというのは、コンポーネントの境界に関する関心が分裂しているといえる。 Tailwind CSS の思想としては、CSS でコンポーネントを表現するのではなく、HTML や JSX などの構造化されたテンプレート側でコンポーネントは定義され、再利用されることを推奨する。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" コンポーネントに適用するというのは、コンポーネントの境界に関する関心が分裂しているといえる。 Tailwind CSS の思想としては、CSS でコンポーネントを表現するのではなく、HTML や JSX などの構造化されたテンプレート側でコンポーネントは定義され、再利用されることを推奨する。","href":null}],"color":"default"}},{"object":"block","id":"d0795de7-e829-4e2b-93f0-a73cdc9fce26","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Angular に当てはめれば、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular に当てはめれば、","href":null},{"type":"text","text":{"content":"@apply","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@apply","href":null},{"type":"text","text":{"content":"を使ってユーティリティクラスのセットを再利用したくなったら、それはその部分のテンプレートを切り出して新たなコンポーネントを作るタイミングということだろう。 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"を使ってユーティリティクラスのセットを再利用したくなったら、それはその部分のテンプレートを切り出して新たなコンポーネントを作るタイミングということだろう。 ","href":null},{"type":"text","text":{"content":".btn","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":".btn","href":null},{"type":"text","text":{"content":" クラスが欲しくなったということは ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" クラスが欲しくなったということは ","href":null},{"type":"text","text":{"content":"ButtonComponent","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"ButtonComponent","href":null},{"type":"text","text":{"content":" を作る時が来たと考える。 この考えに基づくと UI を責務とするコンポーネントの数が増えていくが、これはルーティングやアプリケーションロジックを責務とするコンポーネントとは別物として扱うべきだろう。 Angular CLI の Multiple Projects 機能を使うなら、","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" を作る時が来たと考える。 この考えに基づくと UI を責務とするコンポーネントの数が増えていくが、これはルーティングやアプリケーションロジックを責務とするコンポーネントとは別物として扱うべきだろう。 Angular CLI の Multiple Projects 機能を使うなら、","href":null},{"type":"text","text":{"content":"projects/ui","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"projects/ui","href":null},{"type":"text","text":{"content":"のようなライブラリプロジェクトとして分離してアプリケーションの関心から明確に切り離して管理できると望ましい。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"のようなライブラリプロジェクトとして分離してアプリケーションの関心から明確に切り離して管理できると望ましい。","href":null}],"color":"default"}},{"object":"block","id":"bb261b31-68d1-4d6a-aa94-50e44b7301df","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"コンポーネントスタイルを Tailwind CSS で書かない","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"コンポーネントスタイルを Tailwind CSS で書かない","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"c080634c-ca1f-478c-a067-9dd8a8b53e35","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"CSS がコンポーネント単位にスコープ化される利点のひとつは、その CSS の影響範囲を明確に予測できることにある。 そのコンポーネント以外のスタイルには影響を与えないという保証があるため、変更やリファクタリングが安全になる。 逆に言えば、特定のコンポーネントのためのスタイルがグローバル CSS に書かれてしまうことは避けなければならない。 将来的にそのコンポーネントが不要になったり分割されたりしても、一度グローバルに書かれた CSS はどこに影響するか予測が困難になってしまうからだ。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"CSS がコンポーネント単位にスコープ化される利点のひとつは、その CSS の影響範囲を明確に予測できることにある。 そのコンポーネント以外のスタイルには影響を与えないという保証があるため、変更やリファクタリングが安全になる。 逆に言えば、特定のコンポーネントのためのスタイルがグローバル CSS に書かれてしまうことは避けなければならない。 将来的にそのコンポーネントが不要になったり分割されたりしても、一度グローバルに書かれた CSS はどこに影響するか予測が困難になってしまうからだ。","href":null}],"color":"default"}},{"object":"block","id":"5ca90b72-e50e-42c9-bde1-c10e23335e0c","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"大前提として、Tailwind CSS はグローバル CSS 上にクラスを定義する。 ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"大前提として、Tailwind CSS はグローバル CSS 上にクラスを定義する。 ","href":null},{"type":"text","text":{"content":"@layer components","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@layer components","href":null},{"type":"text","text":{"content":" のように Tailwind CSS を拡張して新たなクラスを追加する機能があるが、 この機能は特定の Angular コンポーネントのために使ってはならない。 それはコンポーネントに依存するスタイルがグローバル CSS に書かれてしまうことに他ならない。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" のように Tailwind CSS を拡張して新たなクラスを追加する機能があるが、 この機能は特定の Angular コンポーネントのために使ってはならない。 それはコンポーネントに依存するスタイルがグローバル CSS に書かれてしまうことに他ならない。","href":null}],"color":"default"}},{"object":"block","id":"b3c2f5ad-3973-4302-8e3f-2fc55397664a","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_3","heading_3":{"rich_text":[{"type":"text","text":{"content":"アプリケーションの関心と Theming を分離する","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"アプリケーションの関心と Theming を分離する","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"72995fb2-3606-46fd-95db-cfdd8ba858d2","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"そもそも、コンポーネントスタイルに限らず、アプリケーションの関心によるスタイルと Tailwind CSS は切り離しておきたい。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"そもそも、コンポーネントスタイルに限らず、アプリケーションの関心によるスタイルと Tailwind CSS は切り離しておきたい。","href":null}],"color":"default"}},{"object":"block","id":"7a1f285d-74d6-424f-a030-312ff23638f1","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"Tailwind CSS は“ツール”と“デザインシステム”の 2 つの側面がある。 Tailwind CSS という“ツール”は、デザインシステムをライブラリとして実装するための汎用的な基盤と捉えられる。 設定ファイルによる制御、エディタ支援との統合、ビルドや最適化などすべてひっくるめた基盤だが、そこに具体的なデザインシステムへの依存はない。 このことはビルトインのデザインシステム（これこそが “Tailwind” の部分なのだろう）が設定無しでデフォルトで使えるために気づきにくくなっている。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Tailwind CSS は“ツール”と“デザインシステム”の 2 つの側面がある。 Tailwind CSS という“ツール”は、デザインシステムをライブラリとして実装するための汎用的な基盤と捉えられる。 設定ファイルによる制御、エディタ支援との統合、ビルドや最適化などすべてひっくるめた基盤だが、そこに具体的なデザインシステムへの依存はない。 このことはビルトインのデザインシステム（これこそが “Tailwind” の部分なのだろう）が設定無しでデフォルトで使えるために気づきにくくなっている。","href":null}],"color":"default"}},{"object":"block","id":"f3dcd6e1-1408-4cf0-899d-53e88c1f7049","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"実は Tailwind CSS の","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"実は Tailwind CSS の","href":null},{"type":"text","text":{"content":"トップページ","link":{"url":"https://tailwindcss.com/"}},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"トップページ","href":"https://tailwindcss.com/"},{"type":"text","text":{"content":"にも “An API for your design system.” と書かれている。 つまり、開発者が自前のデザインシステムを Tailwind CSS 基盤上で実装することもはじめから意図されているのだ。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"にも “An API for your design system.” と書かれている。 つまり、開発者が自前のデザインシステムを Tailwind CSS 基盤上で実装することもはじめから意図されているのだ。","href":null}],"color":"default"}},{"object":"block","id":"38e57b1c-ae84-4c2c-a8f5-ea44d521b23d","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T05:10:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"code","code":{"caption":[],"rich_text":[{"type":"text","text":{"content":"// 独自のデザインシステムをTailwind CSSのpresetとして実装し、利用する例\nmodule.exports = {\n  presets: [require('@acmecorp/tailwind-base')],\n  // ...\n};","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"// 独自のデザインシステムをTailwind CSSのpresetとして実装し、利用する例\nmodule.exports = {\n  presets: [require('@acmecorp/tailwind-base')],\n  // ...\n};","href":null}],"language":"plain text"}},{"object":"block","id":"be4dec11-2a4d-450b-8af4-3e986bba5b59","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"ふつうデザインシステムが特定のアプリケーションの関心を含むことはない。 複数のアプリケーションや Web サイト、それらに一貫したいものだからこそデザインシステムとして作られているのであって、たったひとつのアプリケーションのために作るものではない。 だとすれば、Tailwind CSS の上でアプリケーション固有のスタイルを記述すること自体がその本質からズレているだろう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"ふつうデザインシステムが特定のアプリケーションの関心を含むことはない。 複数のアプリケーションや Web サイト、それらに一貫したいものだからこそデザインシステムとして作られているのであって、たったひとつのアプリケーションのために作るものではない。 だとすれば、Tailwind CSS の上でアプリケーション固有のスタイルを記述すること自体がその本質からズレているだろう。","href":null}],"color":"default"}},{"object":"block","id":"de9c2521-6fd1-4b8b-aa51-fe8e48611501","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"アプリケーション固有のスタイルは Tailwind CSS に関与せず、基本的にはコンポーネントスタイルで記述したい。 一方でアプリケーションの外から制約として与えたい Theming の関心、たとえばカラーパレットや spacing などは Tailwind CSS の力を借りることができる部分だ。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"アプリケーション固有のスタイルは Tailwind CSS に関与せず、基本的にはコンポーネントスタイルで記述したい。 一方でアプリケーションの外から制約として与えたい Theming の関心、たとえばカラーパレットや spacing などは Tailwind CSS の力を借りることができる部分だ。","href":null}],"color":"default"}},{"object":"block","id":"224338a9-dcf0-4291-8cdf-41f4ec215817","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"heading_2","heading_2":{"rich_text":[{"type":"text","text":{"content":"まとめ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"まとめ","href":null}],"is_toggleable":false,"color":"default"}},{"object":"block","id":"9d7ca7a3-22cb-452c-8f41-be892abc6d5c","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"まとまりのない文章になってしまったが、次の点は Angular と Tailwind CSS の組み合わせにおける推奨事項としてある程度妥当ではないかと考えている。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"まとまりのない文章になってしまったが、次の点は Angular と Tailwind CSS の組み合わせにおける推奨事項としてある程度妥当ではないかと考えている。","href":null}],"color":"default"}},{"object":"block","id":"faf9f33c-fca4-422f-b4ff-33a9608260b6","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","text":{"content":"コンポーネントスタイル内での ","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"コンポーネントスタイル内での ","href":null},{"type":"text","text":{"content":"@apply","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":true,"color":"default"},"plain_text":"@apply","href":null},{"type":"text","text":{"content":" の利用は控える","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":" の利用は控える","href":null}],"color":"default"}},{"object":"block","id":"b89213e5-8adf-423b-8b71-3a6c19b1456c","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","text":{"content":"Angular コンポーネントをスタイルの再利用の単位とする","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Angular コンポーネントをスタイルの再利用の単位とする","href":null}],"color":"default"}},{"object":"block","id":"9df3146a-8c5f-43f3-9cfa-270563c89102","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","text":{"content":"Tailwind CSS は Theming の関心に閉じて使う","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"Tailwind CSS は Theming の関心に閉じて使う","href":null}],"color":"default"}},{"object":"block","id":"af3d66b3-feb7-4d8b-ba65-fba079019170","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"numbered_list_item","numbered_list_item":{"rich_text":[{"type":"text","text":{"content":"アプリケーション特有のスタイル、コンポーネント特有のスタイルに Tailwind CSS を関与させない","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"アプリケーション特有のスタイル、コンポーネント特有のスタイルに Tailwind CSS を関与させない","href":null}],"color":"default"}},{"object":"block","id":"c2c95e75-6d08-4e77-a539-c973cdc3b445","parent":{"type":"page_id","page_id":"69bb91a6-ecf3-453f-bfcd-5c2e6354033a"},"created_time":"2023-05-21T00:20:00.000Z","last_edited_time":"2023-05-21T00:20:00.000Z","created_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"last_edited_by":{"object":"user","id":"f4f222d4-d508-405d-ba6c-da82ee26ee54"},"has_children":false,"archived":false,"in_trash":false,"type":"paragraph","paragraph":{"rich_text":[{"type":"text","text":{"content":"会社や組織のなかでデザインシステムを構築しており、それを Angular アプリケーションに適用しやすいようにライブラリ化したいというようなユースケースであれば、 Tailwind CSS を基盤として使うことで満足度の高い開発者体験が得られるだろう。 ユーティリティセットとしてビルトインのデザインシステムを借用したいという場合も、 ユーティリティの利用だけに留めて Tailwind CSS 上での拡張は避け、これまでどおり Angular のコンポーネントスタイルを中心に表現していくのがいいだろう。","link":null},"annotations":{"bold":false,"italic":false,"strikethrough":false,"underline":false,"code":false,"color":"default"},"plain_text":"会社や組織のなかでデザインシステムを構築しており、それを Angular アプリケーションに適用しやすいようにライブラリ化したいというようなユースケースであれば、 Tailwind CSS を基盤として使うことで満足度の高い開発者体験が得られるだろう。 ユーティリティセットとしてビルトインのデザインシステムを借用したいという場合も、 ユーティリティの利用だけに留めて Tailwind CSS 上での拡張は避け、これまでどおり Angular のコンポーネントスタイルを中心に表現していくのがいいだろう。","href":null}],"color":"default"}}]