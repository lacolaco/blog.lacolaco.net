---
import { getRelativePostUrl } from '@lib/i18n';
import { PostData } from '@lib/post';
import { format as formatDate } from 'date-fns';
import { urlize } from 'src/libs/strings';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';
import TagList from '../components/TagList.astro';
import { SITE_TITLE } from '../consts';
import MainContainer from 'src/components/MainContainer.astro';

type Props = {
  posts: PostData[];
  tag?: string;
};

const { posts, tag } = Astro.props;
const postsByYear = Array.from(
  posts
    .reduce((acc, post) => {
      const year = formatDate(post.properties.date, 'yyyy');
      const posts = acc.get(year) ?? [];
      posts.push(post);
      acc.set(year, posts);
      return acc;
    }, new Map<string, PostData[]>())
    .entries(),
).sort(([a], [b]) => Number(b) - Number(a));
---

<!doctype html>
<html lang="ja">
  <head>
    <BaseHead title={SITE_TITLE} description={''} />
  </head>

  <body class="font-base bg-default">
    <Header showDescription />

    <MainContainer>
      <div class="py-4">
        {
          tag ? (
            <div class="flex flex-row items-center justify-between mb-4">
              <h1 class="leading-none text-xl font-semibold">{`Articles with #${tag}`}</h1>
              <a
                href={urlize(`${Astro.url.origin}/tags/${tag}.xml`)}
                target="_blank"
                class="flex flex-row items-center text-black text-sm border border-solid border-gray-300 rounded leading-relaxed px-2 hover:ring-2 hover:ring-gray-300"
              >
                <span class="icon-[ic--baseline-rss-feed]" />
                <span class="">RSS</span>
              </a>
            </div>
          ) : (
            <div class="google-search-box h-[64px]">
              <div class="gcse-search" />
            </div>
          )
        }
        <div>
          {
            postsByYear.map(([year, posts], index) => (
              <div>
                {index > 0 && (
                  <div class="my-2 text-center text-sm leading-none before:block before:h-[1px] before:bg-gray-300 before:translate-y-[0.5em]">
                    <span class="inline-block font-semibold text-muted bg-white px-2 relative z-10">{year}</span>
                  </div>
                )}
                <ul class="list-none">
                  {posts.map((post) => (
                    <li class="my-2 p-1 has-[:focus]:shadow-md has-[:hover]:shadow-md ring-gray-200 has-[:hover]:ring-1">
                      <div class="flex flex-col items-start leading-none">
                        <FormattedDate class="text-xs text-muted align-middle" date={post.properties.date} />
                        <a class="no-underline" href={getRelativePostUrl(post)}>
                          <span class="text-lg text-default font-semibold underline">{post.properties.title}</span>
                        </a>
                        <div class="mt-1">
                          <TagList tags={post.properties.tags ?? []} />
                        </div>
                      </div>
                    </li>
                  ))}
                </ul>
              </div>
            ))
          }
        </div>
      </div>
    </MainContainer>

    <Footer class="py-4" />

    <script async src="https://cse.google.com/cse.js?cx=016749829816792588257:vx30glhznqb"></script>
  </body>
</html>
