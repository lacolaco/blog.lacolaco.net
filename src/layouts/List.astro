---
import { getRelativePostUrl } from '@lib/i18n';
import { PostData } from '@lib/post';
import { format as formatDate } from 'date-fns';
import { urlize } from 'src/libs/strings';
import BaseHead from '../components/BaseHead.astro';
import Footer from '../components/Footer.astro';
import FormattedDate from '../components/FormattedDate.astro';
import Header from '../components/Header.astro';
import MainContainer from '../components/MainContainer.astro';
import Tag from '../components/Tag.astro';
import TagList from '../components/TagList.astro';
import { SITE_TITLE } from '../consts';

type Props = {
  posts: PostData[];
  feedUrl: string;
};

const { posts, feedUrl } = Astro.props;
const postsByYear = Array.from(
  posts
    .reduce((acc, post) => {
      const year = formatDate(post.properties.date, 'yyyy');
      const posts = acc.get(year) ?? [];
      posts.push(post);
      acc.set(year, posts);
      return acc;
    }, new Map<string, PostData[]>())
    .entries(),
).sort(([a], [b]) => Number(b) - Number(a));
---

<!doctype html>
<html lang="ja">
  <head>
    <BaseHead title={SITE_TITLE} description={''} />
  </head>

  <body class="font-base bg-default">
    <Header showDescription />

    <MainContainer>
      <div class="py-8">
        <div class="flex flex-row items-center justify-between mb-6">
          <div>
            <slot name="title" />
          </div>
          <a
            href={urlize(feedUrl)}
            title="RSS Feed"
            target="_blank"
            class="flex flex-row items-center text-default rounded leading-0 p-1 hover:ring-2 hover:ring-gray-300 hover:text-muted"
          >
            <span class="text-[24px] icon-[material-symbols--rss-feed-rounded]"></span>
          </a>
        </div>

        <div>
          {
            postsByYear.map(([year, posts], index) => (
              <div>
                {index > 0 && (
                  <div class="my-2 text-center text-sm leading-none before:block before:h-[1px] before:bg-gray-300 before:translate-y-[0.5em]">
                    <span class="inline-block font-semibold text-muted bg-white px-2 relative z-10">{year}</span>
                  </div>
                )}
                <ul class="list-none">
                  {posts.map((post) => (
                    <li class="my-4">
                      <div class="flex flex-col items-start leading-none">
                        <FormattedDate class="text-xs text-muted align-middle" date={post.properties.date} />
                        <a class="no-underline" href={getRelativePostUrl(post)}>
                          <span class="text-lg text-default font-semibold underline hover:text-gray-500">
                            {post.properties.title}
                          </span>
                        </a>
                        <div class="mt-1">
                          <TagList>
                            {post.properties.category && <Tag name={post.properties.category} isCategory />}
                            {post.properties.tags && post.properties.tags.map((tag) => <Tag name={tag} />)}
                          </TagList>
                        </div>
                      </div>
                    </li>
                  ))}
                </ul>
              </div>
            ))
          }
        </div>
      </div>
    </MainContainer>

    <Footer class="py-4" />
  </body>
</html>
