---
import { queryAvailablePosts, queryCategories } from '@lib/query';
import type { CollectionEntry } from 'astro:content';
import CategoryNav from 'src/components/CategoryNav.astro';
import List from '../../layouts/List.astro';
import { urlize } from '../../libs/strings';

export async function getStaticPaths() {
  const posts = await queryAvailablePosts();
  const categories = await queryCategories();

  function hasCategory(categoryName: string, post: CollectionEntry<'post'> | CollectionEntry<'postsV2'>): boolean {
    return post.collection === 'postsV2'
      ? post.data.category === categoryName
      : post.data.properties.category === categoryName;
  }

  return categories.map((category) => {
    const matchPosts = posts.filter((post) => hasCategory(category.name, post));
    const urlizedName = urlize(category.name);
    return {
      params: { category: urlizedName },
      props: { category: category.name, posts: matchPosts },
    };
  });
}

type Props = {
  category: string;
  posts: Array<CollectionEntry<'post'> | CollectionEntry<'postsV2'>>;
};

const { category, posts } = Astro.props;
---

<List posts={posts} feedUrl={`/categories/${category}.xml`}>
  <CategoryNav slot="title" activePath={`/categories/${urlize(category)}`} />
</List>
