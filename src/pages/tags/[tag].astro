---
import { queryAvailablePosts, queryTags } from '@lib/query';
import List from '../../layouts/List.astro';
import { urlize } from '../../libs/strings';
import type { CollectionEntry } from 'astro:content';

export async function getStaticPaths() {
  const posts = await queryAvailablePosts();
  const tags = await queryTags();

  return tags.map((tag) => {
    const matchPosts = posts.filter((post) => {
      if (post.collection !== 'postsV2') {
        return post.data.properties.tags.includes(tag.name);
      } else {
        return post.data.tags?.includes(tag.name);
      }
    });
    const urlizedName = urlize(tag.name);
    return {
      params: { tag: urlizedName },
      props: { tag: tag.name, posts: matchPosts },
    };
  });
}

type Props = {
  tag: string;
  posts: Array<CollectionEntry<'post'> | CollectionEntry<'postsV2'>>;
};

const { tag, posts } = Astro.props;
---

<List posts={posts} feedUrl={`/tags/${tag}.xml`}>
  <h1 slot="title" class="leading-none text-2xl font-semibold">#{tag}</h1>
</List>
