{
  "pageId": "1e23521b-014a-80ee-a293-c9a03f195b00",
  "lastEditedAt": "2025-04-27T13:33:00.000Z",
  "slug": "issueops-by-github-command-action",
  "locale": "ja",
  "properties": {
    "title": "GitHub Actions: github/command でIssueOpsを実装する",
    "date": "2025-04-27T13:33:00.000Z",
    "category": "Tech",
    "tags": ["GitHub Actions", "GitHub"]
  },
  "content": [
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "GitHubが公開している ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "github/command",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " アクションを使うと、自分のレポジトリのワークフローに”IssueOps”を簡単に導入できた。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://github.com/github/command"
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "“IssueOps” ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "github/command",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " のREADMEにかかれている説明を引用するとこう定義されている。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "quote",
      "text": [
        {
          "type": "text",
          "text": "Its like ChatOps but instead of using a chat bot, commands are invoked by commenting on a pull request (PRs are issues under the hood) ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Slackメッセージでワークフローを操作する “ChatOps” のように、GitHubのイシューコメントによってワークフローを操作するのがIssueOpsだ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "GitHubは ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "github/branch-deploy",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " という別のアクションも公開している。こちらはデプロイに関する操作に特化したもので、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "github/command",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "は汎用的なものだ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "link_preview",
      "url": "https://github.com/github/branch-deploy"
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "使い方",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "READMEを見れば全部書いてあるが、次のようなワークフローが基本になる。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "yaml",
      "filename": "",
      "text": "name: \"command demo\"\n\n# the workflow to execute on is comments that are newly created\non:\n  issue_comment:\n    types: [created]\n\n# permissions needed for reacting to IssueOps commands on issues and PRs\npermissions:\n  pull-requests: write\n  issues: write\n  checks: read\n  contents: read # useful if your workflows call actions/checkout@vX.X.X\n\njobs:\n  demo:\n    runs-on: ubuntu-latest\n    steps:\n      # execute IssueOps command logic, hooray!\n      # this will be used to \"gate\" all future steps below\n      - uses: github/command@vX.X.X\n        id: command\n        with:\n          command: \".ping\"\n          allowed_contexts: issue,pull_request # run on issues AND pull requests\n\n      # run your custom logic for your project here - example seen below\n\n      # conditionally run some logic here\n      - name: ping\n        if: ${{ steps.command.outputs.continue == 'true' }}\n        run: echo \"I am going to ping some cool website now!\""
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "トリガー",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "イシューコメントをトリガーとするため、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "issue_comment: created",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " イベントにフックする。プルリクエストに対するコメントもワークフロートリガーは ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "issue_comment",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " だ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "パーミッション",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "github/command",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " のデフォルトではコメントに対してリアクションによるフィードバックを行う。そのためにイシューとプルリクエストそれぞれへの",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "write",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 権限が必要になる。また、プルリクエストにおいてデフォルトでは他のCIチェックが完了していない状態でコマンドを実行できない。そのチェックのために",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "checks",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 権限も必要になっている。このふるまいは",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "skip_ci",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " オプションで無効にできる。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "ステップ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "github/command",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " アクションの結果を後続のステップの ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "if",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 条件で使うために ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "id",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " フィールドを設定する。 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "command",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " オプションは必須で、コマンドを起動する文字列を指定する。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "github/branch-deploy",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " のデフォルトコマンドがすべて ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": ".start",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " のようにピリオド始まりなのを踏襲しているのか、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "github/command",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "のドキュメンテーションも ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": ".ping",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " などピリオド始まりになっているが、実装を読んだところシンプルに",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "startsWith",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "しか見てないので、別にどんな文字列でもよい。ただIssueOpsのconventionとしてそういうプロトコルに従うのも悪くない。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "利用例",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "このブログはNotionをヘッドレスCMSとして使っている都合、Notionから記事データを取り込む必要がある。そのワークフローを手動でトリガーするための ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": ".sync",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " コマンドを定義している。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "https://github.com/lacolaco/blog.lacolaco.net/blob/main/.github/workflows/trigger-sync-from-pr-comment.yml",
          "href": "https://github.com/lacolaco/blog.lacolaco.net/blob/main/.github/workflows/trigger-sync-from-pr-comment.yml",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "code",
      "language": "yaml",
      "filename": "",
      "text": "jobs:\n  trigger-sync:\n    runs-on: ubuntu-latest\n    permissions:\n      pull-requests: write\n      issues: write\n      checks: read\n      actions: write\n    steps:\n      - uses: github/command@c6920ac0ecbac4544f6f6234d8a02299db570773 # v2.0.0\n        id: command\n        with:\n          command: '.sync'\n          allowed_contexts: pull_request\n          reaction: 'eyes'\n          skip_ci: true\n          github_token: ${{ secrets.GITHUB_TOKEN }}\n          allowlist: lacolaco\n      - name: Trigger Workflow\n        if: ${{ steps.command.outputs.continue == 'true' }}\n        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1\n        with:\n          script: |\n            github.rest.actions.createWorkflowDispatch({\n              owner: context.repo.owner,\n              repo: context.repo.repo,\n              workflow_id: 'sync-with-notion.yml',\n              ref: 'main',\n              inputs: {\n                forceUpdate: 'false'\n              }\n            })"
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "image",
      "external": false,
      "path": "issueops-by-github-command-action/3c6255ea-b6c7-4055-8126-638d2819f0c3/53f8a6bb-cd0e-4a54-96f0-f4c9b470d3f3.png",
      "caption": ""
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "もともとは別のサードパーティのアクションを使ってイシューコメントからのワークフロー実行をしていたが、GitHub謹製のものがあるなら信頼性も高いので載せ替えた。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "また、デフォルトではイシュー・プルリクエストにコメントできるユーザーなら誰でもコマンドを起動できてしまう。プライベートレポジトリなら気にならないが、パブリックレポジトリであれば",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "allowlist",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " オプションでユーザーを絞るのがいい。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "トリガーの後ろのコメント本文も後続ステップで取得できるため、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "actions/ai-inference",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "のようなアクションにつなげて自然言語でAIに指示を与えるワークフローを組むのも楽そうだ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://github.com/actions/ai-inference"
    },
    {
      "type": "paragraph",
      "text": []
    }
  ]
}
