{
  "pageId": "c70e219e-1959-4986-8de8-b7d2b68e8907",
  "lastEditedAt": "2024-07-10T10:37:00.000Z",
  "slug": "c5e0f640a7aa",
  "locale": "ja",
  "properties": {
    "title": ".tsファイルを直接実行するのにtsxで特に困っていない",
    "date": "2024-07-10T09:29:00.000Z",
    "category": "Tech",
    "tags": ["TypeScript", "雑記", "Node.js"]
  },
  "content": [
    {
      "type": "link_preview",
      "url": "https://hiroppy.me/blog/nodejs-strip-type"
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Node.js 本体で TypeScript ファイルを実行できるようにするプロポーザルが出されているという話が先週あたりから話題になっている。しかしそれほど嬉しいかといわれると、正直いらんなあと思っている。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "TypeScriptで簡単なスクリプトを書くときは、長らく",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "tsx",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "を使って実行している。tsxを使い始めるより前は ts-node を使っていたが、tsxを使ってからは何の不満もなく使い続けている。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://tsx.is/"
    },
    {
      "type": "link_preview",
      "url": "https://github.com/privatenumber/tsx"
    },
    {
      "type": "link_preview",
      "url": "https://www.npmjs.com/package/tsx"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "tsxは内部的にはesbuildでTypeScriptをトランスパイルしていて、型チェックは行わない。tsxのありがたい点は、すべての ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "node",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " コマンドのオプションを ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "tsx",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " コマンドでサポートしていることだ。単純にコマンドを置き換えるだけでいいので、何も新しく覚えることがない。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "構造的にはNode.jsの中でswcでJavaScriptに変換されるか、外でesbuildで変換されるかの違いしかない。strip-type方式と違って使えるTypeScriptの構文にも制約はないし、解決できる問題が変わらないのであれば、Node.jsにはそのままでいてもらうほうがやりやすいなあと思っている。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "追記: 依存関係とサプライチェーンについてのやりとり",
          "annotations": {}
        }
      ]
    },
    {
      "type": "tweet",
      "url": "https://x.com/laco2net/status/1810980074122035405"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "見えないところで依存しているものが知らぬ間に増えているよりは、自分でコントロールしている範囲で依存するほうがまだマシという立場。Node.jsが自前で実装するのでなければ、内部でサプライチェーンが伸びるより自分で管理できる外部のローダーのほうを僕は選びたい。",
          "annotations": {}
        }
      ]
    }
  ]
}
