{
  "pageId": "bdddec22-7b87-4801-80bd-0660353509c9",
  "lastEditedAt": "2023-12-30T10:07:00.000Z",
  "slug": "angular-property-binding-atttribute-binding",
  "properties": {
    "title": "Angular: なぜプロパティバインディングと属性バインディングは分かれているのか",
    "date": "2021-09-03T00:00:00.000Z",
    "tags": ["Angular"]
  },
  "content": [
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Angular を勉強中のとある学生から質問をもらった。いい質問だったので将来同じことを疑問に思う人のためにも書き残しておこうと思う。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "なぜプロパティバインディングと属性バインディングは分かれているのか",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "「属性は HTML タグに付与する情報で、プロパティは DOM 要素に紐づくものだということはわかっているけど、データバインディングにおいてこれを区別する必要がなぜあるのか？」という質問をもらった。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "これに対して、要約すると「対応するプロパティがない属性や、属性とプロパティで名前が異なる場合があり、そういうときに属性バインディングでしかバインディングできないから」というように答えた。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "公式ドキュメントでは ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "属性、クラス、スタイルのバインディング",
          "href": "https://angular.jp/guide/attribute-binding",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "に記載がある。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "https://angular.jp/guide/attribute-binding",
          "href": "https://angular.jp/guide/attribute-binding",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "プロパティバインディングと属性バインディング",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "プロパティバインディングは次のようにその HTML 要素のプロパティ名を指定してデータバインディングするものである。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "html",
      "filename": "",
      "text": "<a [href]=\"someUrl\"></a>"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "これはプロパティバインディングなので、データバインディングの対象は ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "HTMLAnchorElement.href",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " プロパティである。 このプロパティに値をセットすると、ブラウザ（DOM）が自動的に ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "href",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "属性のほうにも反映してくれるので、結果的にプロパティと属性の両方にバインディングできたように見える。 しかし実際にバインディングされているのはプロパティだけで、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "プロパティから属性への反映は Angular がやっていることではない",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "colspan",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " と ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "colSpan",
          "annotations": {
            "code": true
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "プロパティバインディングはプロパティを対象にするため、指定できる名前はプロパティとして定義されたものに限られる。 これのわかりやすい例が ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "<td>",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 要素の ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "colSpan",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " プロパティだ。 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "colSpan",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " プロパティは HTML としては ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "colspan",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 属性で定義されていて、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "S",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "の大文字/小文字が違う。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "この場合、プロパティバインディングを使う場合は ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "[colSpan]",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "、属性バインディングが使う場合は ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "[attr.colspan]",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " と書く必要がある。 ただし、どちらにバインディングしてももう一方への反映は DOM のほうで行われるので、この場合はどちらを選んでも問題はない。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "ARIA 属性",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "属性バインディングでなければ記述できないのは、対応するプロパティが存在しない場合である。代表例は ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "aria-label",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " などの ARIA 属性だ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "html",
      "filename": "",
      "text": "<!-- 間違い: プロパティバインディングはできない -->\n<button [aria-label]=\"buttonLabel\">X</button>\n\n<!-- 正解: 属性バインディングを使う -->\n<button [attr.aria-label]=\"buttonLabel\">X</button>"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "属性バインディングを使うユースケースは、基本的に属性バインディングでしか記述できないときだけだ。 プロパティバインディングと違い、属性名は任意の名前を設定できるため、間違った名前の属性にバインディングしてもテンプレートコンパイルは成功してしまう。 プロパティバインディングであれば未定義のプロパティへのバインディングはエラーとして検出してくれるため、使えるならできるだけプロパティバインディングを使おう。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "まとめ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "プロパティバインディングと属性バインディングが区別されている理由は、属性バインディングでしか記述できない場合があるからだ、ということを改めて解説した。 適切に使い分けるというよりは、属性バインディングはプロパティバインディングでカバーできないユースケースを補うための機能として捉えておくのがいいだろう。",
          "annotations": {}
        }
      ]
    }
  ]
}
