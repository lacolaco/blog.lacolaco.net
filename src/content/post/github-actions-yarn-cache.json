{
  "pageId": "387ce9b4-8670-4771-9be1-dbcc920250f6",
  "lastEditedAt": "2023-12-30T10:07:00.000Z",
  "slug": "github-actions-yarn-cache",
  "properties": {
    "title": "GitHub Actions: Yarn キャッシュをシンプルに使う",
    "date": "2021-06-01T00:00:00.000Z",
    "tags": ["GitHub Actions"],
    "updatedAt": "2021-07-03T00:00:00.000Z"
  },
  "content": [
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "追記（2021-07-03）",
          "annotations": {
            "bold": true
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "actions/setup-node",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " が公式にキャッシュ機能を実装したため、この記事で紹介した ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "actions/cache",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " を使った方法はまったく無用になった。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://github.blog/changelog/2021-07-02-github-actions-setup-node-now-supports-dependency-caching/"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "今後は ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "actions/setup-node",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " の ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "cache",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " オプションで事足りるだろう。以下は読まなくていい。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "divider"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "GitHub Actions で継続的インテグレーション・デプロイを構成すると、すぐに問題になるのはキャッシュの活用だろう。 特に Node.js プロジェクトでは NPM から依存パッケージをダウンロードする時間がワークフロー実行時間全体の大部分を占めることも珍しくない。 毎回すべての依存パッケージをインターネット越しに取得することはなるべく避けたい。そこでキャッシュの出番になる。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "GitHub Actions ではデフォルトで何もキャッシュされないため、基本的には公式の",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "actions/cache",
          "href": "https://github.com/actions/cache",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "を使うことになる。 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "actions/cache",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "はキャッシュするファイル・ディレクトリを指定し、それにキャッシュキーを紐付けるだけ、という単純なものだ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "- name: Cache Primes\n  id: cache-primes\n  uses: actions/cache@v2\n  with:\n    path: prime-numbers\n    key: ${{ runner.os }}-primes"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "公式ドキュメントには Yarn を使う Node.js プロジェクトのための設定例ももちろんあり、次のように設定するよう書かれている。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "https://github.com/actions/cache/blob/main/examples.md#node—yarn",
          "href": "https://github.com/actions/cache/blob/main/examples.md#node%E2%80%94yarn",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "- name: Get yarn cache directory path\n  id: yarn-cache-dir-path\n  run: echo \"::set-output name=dir::$(yarn cache dir)\"\n\n- uses: actions/cache@v2\n  id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)\n  with:\n    path: ${{ steps.yarn-cache-dir-path.outputs.dir }}\n    key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\n    restore-keys: |\n      ${{ runner.os }}-yarn-"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "しかしこのサンプル、いったい何をしていて、果たしてこの書き方は最適なのだろうか？今一度 Yarn 自体から振り返って考えてみたい。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ちなみに Yarn v2 ではもっとシンプルに設定できるが、この記事では Yarn v1 だけを対象とする。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "Yarn キャッシュ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ここで保存しようとしている Yarn キャッシュとは、マシン上でグローバルに管理されるネットワークキャッシュである。",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "yarn add",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " や ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "yarn install",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "などが実行され、NPM からパッケージをダウンロードするたびにキャッシュが保存されている。同じパッケージの同じバージョンをダウンロードするときにはインターネットアクセスせずにキャッシュからインストールされる。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Yarn v1 では次のように書かれている。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "quote",
      "text": [
        {
          "type": "text",
          "text": "Yarn stores every package in a global cache in your user directory on the file system.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "https://classic.yarnpkg.com/en/docs/cli/cache/",
          "href": "https://classic.yarnpkg.com/en/docs/cli/cache/",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "このキャッシュがマシン上のどこに実際に存在するかは環境依存となっているようだ。OS によって違うし、Yarn のバージョンによっても変わることもあるかもしれない。そのため、上記のサンプル設定ではまずコマンドを実行して現在の設定を取得することで、次のキャッシュステップで ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "path",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " に Yarn キャッシュを指定できるわけである。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "$ yarn cache dir\n/Users/laco/Library/Caches/Yarn/v6"
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "YARN_CACHE_FOLDER",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ところで、Yarn キャッシュの保存場所は任意に変更することができる。環境ごとに差異があるというのはデフォルトの話であって、明示的に設定することは可能だ。 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "yarn",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "コマンドの実行環境に ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "YARN_CACHE_FOLDER",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 環境変数がある場合、その環境では Yarn キャッシュはそのディレクトリが使われることになっている。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "quote",
      "text": [
        {
          "type": "text",
          "text": "You can also specify the cache directory by environment variable YARN_CACHE_FOLDER:",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "YARN_CACHE_FOLDER=<path> yarn <command>"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "これを利用すれば、Yarn キャッシュを使う GitHub Actions はかなりシンプルに記述できるだろう。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "キャッシュの破棄",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "actions/cache",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "のサンプルでは、キャッシュのキーが次のようになっていた。",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "key",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "が主キーとしてまず検索されるキーであり、主キーでキャッシュが見つからなかったときには",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "restore-keys",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "の条件で前方一致させて最初にヒットしたキャッシュが使われる。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}\nrestore-keys: |\n  ${{ runner.os }}-yarn-"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "この設定では、マシングローバルのキャッシュキーに OS とリポジトリ内の",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "yarn.lock",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "すべてのハッシュを含めているため、OS が変わるかリポジトリ内でひとつでも",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "yarn.lock",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "に変更があれば",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "restore-keys",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "へフォールバックすることになる。しかしこの設定は本当に必要だろうか？",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Yarn キャッシュはそもそもマシン上でグローバル管理されているものであり、マシン上にはいくつもの Node.js プロジェクトがあるのは特別なことではない。そのうち 1 つのロックファイルが更新されたときにグローバルのキャッシュを破棄する必要はないだろう。そもそも Yarn キャッシュはネットワークキャッシュであり、インストールしたことのあるパッケージのバージョンが保管されているだけである。プロジェクトのロックファイルが更新されて新しいバージョンのパッケージを利用するときには新しいキャッシュが増えるだけだ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "つまり、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "yarn.lock",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "のハッシュを Yarn キャッシュの主キーに含めるのはキャッシュヒット率を必要以上に下げるだけである。無限に保持し続けるとキャッシュサイズが肥大化し続けキャッシュ処理に時間がかかるおそれはあるが、主キーにハードコードされたバージョンでも書いておけば解決する話だ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "シンプルな Yarn キャッシュ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "前置きが長くなったが、私が愛用している Yarn プロジェクト用のキャッシュ設定は次のものである。",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "YARN_CACHE_FOLDER",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "環境変数をワークフローのグローバルで設定し、すべての",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "yarn",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "コマンドで自動的に利用されるようにする。キャッシュには主キーだけを与え、OS だけをキーに含める。キャッシュを破棄したくなったときには ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "v1",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "部分をインクリメントすればよい。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "env:\n  YARN_CACHE_FOLDER: .cache/yarn\n\njobs:\n  test:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/cache@v2\n        with:\n          path: ${YARN_CACHE_FOLDER}\n          key: ${{ runner.os }}-yarn-cache-v1\n      - run: yarn install"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ちなみに ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "yarn install",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 後の ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "node_modules",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " はキャッシュしないようにしている。こちらのキャッシュは ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "yarn.lock",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " に変化があったときに破棄しなければならないが、依存パッケージのアップデートに追従するたびに破棄されるため Yarn キャッシュと比べてキャッシュヒット率が極めて低い。そのうえ ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "node_modules",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "はかなりのサイズになるためキャッシュの保存、復元の時間もそれなりに掛かる。うまく管理できれば高速化するのは間違いないが、キャッシュ事故のリスクを含めコストパフォーマンスに見合っているかを検討した上でキャッシュしたほうがいいだろう。私は基本的にキャッシュしないようにしている。",
          "annotations": {}
        }
      ]
    }
  ]
}
