{
  "pageId": "a3993f7d-b21f-4b38-a87e-6c15cb98c825",
  "lastEditedAt": "2023-12-30T10:10:00.000Z",
  "slug": "introduce-angular-cdk-dnd",
  "properties": {
    "title": "Angular CDK drag-and-drop の紹介",
    "date": "2018-08-29T00:00:00.000Z",
    "tags": ["Angular", "Angular CDK"]
  },
  "content": [
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "こんにちは。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "この記事では Angular CDK の次期アップデートで提供される、 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "drag-and-drop",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": " 機能を紹介します。 執筆時点ではまだ npm パッケージとして公開されていないので、一般に利用できるまでにはもうしばらくかかりますが、 もし早く使いたい方は、次のコマンドで開発版ビルドをインストールしましょう。 なお、開発版ビルドですので自己責任でお願いします。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "$ yarn add angular/cdk-builds"
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "CDK drag-and-drop",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "drag-and-drop はその名のとおり、UI 上でのドラッグアンドドロップ操作をサポートするものです。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "@angular/cdk/drag-drop",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " パッケージから提供される ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "DragDropModule",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " をインポートすると、次の 2 つのディレクティブ、コンポーネントが利用できます。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "cdkDrag",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " ディレクティブ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "cdkDrag",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "ディレクティブは、ドラッグされる要素を指定するディレクティブです。このディレクティブを付けられた要素は画面上で自由に位置を変えられます。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "たとえば ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "ng new",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 直後のテンプレート HTML で、 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "li",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "要素に ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "cdkDrag",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "ディレクティブを付与すると、次のようになります。 （わかりやすさのために ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "li",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "要素に CSS でスタイルを付与しています）",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "html",
      "filename": "",
      "text": "<ul>\n  <li cdkDrag>\n    <h2>\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://angular.io/tutorial\"\n        >Tour of Heroes</a\n      >\n    </h2>\n  </li>\n  <li cdkDrag>\n    <h2>\n      <a\n        target=\"_blank\"\n        rel=\"noopener\"\n        href=\"https://github.com/angular/angular-cli/wiki\"\n        >CLI Documentation</a\n      >\n    </h2>\n  </li>\n  <li cdkDrag>\n    <h2>\n      <a target=\"_blank\" rel=\"noopener\" href=\"https://blog.angular.io/\"\n        >Angular blog</a\n      >\n    </h2>\n  </li>\n</ul>"
    },
    {
      "type": "image",
      "external": true,
      "url": "https://cdn-ak.f.st-hatena.com/images/fotolife/l/lacolaco/20180829/20180829200010.gif",
      "caption": ""
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "cdkDrag",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " ディレクティブだけを使うと、何の制約もなく自由に移動することができました。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "cdk-drop",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "コンポーネント",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "このままでは動いて面白い以上の意味がないので、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "cdk-drop",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "コンポーネントを使います。 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "cdk-drop",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "コンポーネントは、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "cdkDrag",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "ディレクティブをグルーピングし、動きに制限をつけて、限られた領域内でだけ移動できるようにします。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "たとえば、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "ul",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "要素の外側に ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "<cdk-drop>",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " コンポーネントを配置すると、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "ul",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "の内部でだけ移動できるようになり、移動中は並び替えが行われるようになります。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "html",
      "filename": "",
      "text": "<cdk-drop>\n  <ul>\n    <li cdkDrag>\n      <h2>\n        <a target=\"_blank\" rel=\"noopener\" href=\"https://angular.io/tutorial\"\n          >Tour of Heroes</a\n        >\n      </h2>\n    </li>\n    <li cdkDrag>\n      <h2>\n        <a\n          target=\"_blank\"\n          rel=\"noopener\"\n          href=\"https://github.com/angular/angular-cli/wiki\"\n          >CLI Documentation</a\n        >\n      </h2>\n    </li>\n    <li cdkDrag>\n      <h2>\n        <a target=\"_blank\" rel=\"noopener\" href=\"https://blog.angular.io/\"\n          >Angular blog</a\n        >\n      </h2>\n    </li>\n  </ul>\n</cdk-drop>"
    },
    {
      "type": "image",
      "external": true,
      "url": "https://cdn-ak.f.st-hatena.com/images/fotolife/l/lacolaco/20180829/20180829200735.gif",
      "caption": ""
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "見てのとおり、 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "<cdk-drop>",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "タグの内側でだけ並べ替えが行われるようになりましたが、ドロップしてしまうともとの状態に戻ります。 これは",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "cdk-drop",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "コンポーネントの仕様で、ドラッグアンドドロップが終了すると、その内部の",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "cdkDrag",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "の順序は復元されます。 ただし、ドラッグアンドドロップ終了時には",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "dropped",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "イベントが発行されていて、このイベントをもとにコンポーネント側からデータモデルを更新することで、 ドラッグアンドドロップによる並べ替えを実現できます。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "並べ替え",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "並べ替えをおこなうためには、リストをコンポーネント側で管理する必要があります。これまでは適当な",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "li",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "要素を使っていましたが、AppComponent に次のような",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "list",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "プロパティをもたせます。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "typescript",
      "filename": "",
      "text": "@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  list = [\"まぐろ\", \"サーモン\", \"えび\"];\n}"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "そしてテンプレートを次のように変更し、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "list",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "プロパティの要素を繰り返し表示します。先程までと同じように、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "<cdk-drop>",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "タグのなかで繰り返される並べ替えの対象に",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "cdkDrag",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "ディレクティブを付与します。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "html",
      "filename": "",
      "text": "<h2>好きなネタ</h2>\n<cdk-drop [data]=\"list\" (dropped)=\"drop($event)\">\n  <ul>\n    <li *ngFor=\"let item of list\" cdkDrag>\n      <h2>{{item}}</h2>\n    </li>\n  </ul>\n</cdk-drop>"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ポイントは ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "<cdk-drop [data]=\"list\" (dropped)=\"drop($event)\">",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " です。",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "[data]",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "プロパティには並べ替えの対象となるデータモデルを渡します。 次に、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "(dropped)=\"drop($event)\"",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "では、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "dropped",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "イベントハンドラで",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "drop",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "メソッドを呼び出しています。 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "drop",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "メソッドは次のように記述します。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "typescript",
      "filename": "",
      "text": "import { CdkDragDrop, moveItemInArray } from \"@angular/cdk/drag-drop\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  list = [\"まぐろ\", \"サーモン\", \"えび\"];\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(\n      event.container.data,\n      event.previousIndex,\n      event.currentIndex\n    );\n  }\n}"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "CdkDragDrop<string[]>",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "は、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "drop",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "イベントの引数の型です。ジェネリックの",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "string[]",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "は並べ替え対象の配列の型を表しています。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "moveItemInArray",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "関数は、基本的な配列の並べ替えを行ってくれる CDK の機能です。中身は単なる JavaScript の配列の並べ替えですが、Angular チームによる実装にまかせておくのが安心だと思います。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "typescript",
      "filename": "",
      "text": "export function moveItemInArray<T = any>(\n  array: T[],\n  fromIndex: number,\n  toIndex: number\n): void {\n  const from = clamp(fromIndex, array.length - 1);\n  const to = clamp(toIndex, array.length - 1);\n\n  if (from === to) {\n    return;\n  }\n\n  const target = array[from];\n  const delta = to < from ? -1 : 1;\n\n  for (let i = from; i !== to; i += delta) {\n    array[i] = array[i + delta];\n  }\n\n  array[to] = target;\n}"
    },
    {
      "type": "image",
      "external": true,
      "url": "https://cdn-ak.f.st-hatena.com/images/fotolife/l/lacolaco/20180829/20180829210528.gif",
      "caption": ""
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "これで、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "drop",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "イベントによって配列を並べ替えられるようになりました。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "複数の",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "cdk-drop",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "でグルーピングをおこなう",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "複数のグループを跨いだ並べ替えも可能です。先程の AppComponent を次のように変更します。",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "list",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "プロパティを",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "like",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "プロパティに改名し、新しく",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "unlike",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "プロパティを追加します。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "typescript",
      "filename": "",
      "text": "@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.css\"]\n})\nexport class AppComponent {\n  like = [\"まぐろ\", \"サーモン\", \"えび\"];\n  unlike = [\"数の子\", \"たくあん\"];\n\n  drop(event: CdkDragDrop<string[]>) {\n    moveItemInArray(\n      event.container.data,\n      event.previousIndex,\n      event.currentIndex\n    );\n  }\n}"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "テンプレートでは、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "like",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "プロパティと",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "unlike",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "プロパティの両方で同じように",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "cdk-drop",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "による並べ替えができるようにします。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "html",
      "filename": "",
      "text": "<h2>好きなネタ</h2>\n<cdk-drop [data]=\"like\" (dropped)=\"drop($event)\">\n  <ul>\n    <li *ngFor=\"let item of like\" cdkDrag>\n      <h2>{{item}}</h2>\n    </li>\n  </ul>\n</cdk-drop>\n\n<h2>好きじゃないネタ</h2>\n<cdk-drop [data]=\"unlike\" (dropped)=\"drop($event)\">\n  <ul>\n    <li *ngFor=\"let item of unlike\" cdkDrag>\n      <h2>{{item}}</h2>\n    </li>\n  </ul>\n</cdk-drop>"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ここまでは先程と変わりません。ここから、この 2 つのグループを結合します。 並べ替えグループを結合するには、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "cdk-drop",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "の",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "connectTo",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "プロパティを使います。このプロパティに結合の対象となるグループの参照を渡します。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "html",
      "filename": "",
      "text": "<h2>好きなネタ</h2>\n<cdk-drop\n  #dropLike\n  [data]=\"like\"\n  (dropped)=\"drop($event)\"\n  [connectedTo]=\"[dropUnlike]\"\n>\n  <ul>\n    <li *ngFor=\"let item of like\" cdkDrag>\n      <h2>{{item}}</h2>\n    </li>\n  </ul>\n</cdk-drop>\n\n<h2>好きじゃないネタ</h2>\n<cdk-drop\n  #dropUnlike\n  [data]=\"unlike\"\n  (dropped)=\"drop($event)\"\n  [connectedTo]=\"[dropLike]\"\n>\n  <ul>\n    <li *ngFor=\"let item of unlike\" cdkDrag>\n      <h2>{{item}}</h2>\n    </li>\n  </ul>\n</cdk-drop>"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "さらに、AppComponent の",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "drop",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "メソッドで、グループを跨いでいた場合の処理を追加します。 この場合も汎用的なグループ移動機能をサポートする",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "transferArrayItem",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "関数が提供されているので、それを使います。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "グループを跨いだ移動かどうかは ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "event.previousContainer",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " と ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "event.container",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " を比較して判定できます。 次のように書けば、一致する場合は配列内での移動を、一致しない場合はグループを越えた移動をおこないます。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "typescript",
      "filename": "",
      "text": "  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex\n      );\n    }\n  }"
    },
    {
      "type": "image",
      "external": true,
      "url": "https://cdn-ak.f.st-hatena.com/images/fotolife/l/lacolaco/20180829/20180829212028.gif",
      "caption": ""
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "これで複数のグループを跨いだドラッグアンドドロップによる並べ替えができるようになりました。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "CSS によるスタイリング",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "最後に、CDK の drag-drop が提供するスタイリングのための CSS クラスを紹介します。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": ".cdk-drag.placeholder",
          "annotations": {
            "code": true
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": ".cdk-drag.placeholder",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "クラスは、ドラッグされている要素のプレースホルダ部分につけられる CSS クラスです。たとえばここを次のように見えなくすることで自然な挿入を演出できます。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "css",
      "filename": "",
      "text": ".cdk-drag-placeholder {\n  opacity: 0;\n}"
    },
    {
      "type": "image",
      "external": true,
      "url": "https://cdn-ak.f.st-hatena.com/images/fotolife/l/lacolaco/20180829/20180829212513.gif",
      "caption": ""
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": ".cdk-drag-preview",
          "annotations": {
            "code": true
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": ".cdk-drag-preview",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "クラスは、ドラッグされている要素のプレビュー部分（動かしている部分）につけられる CSS クラスです。たとえば次のように半透明にすることで自然な挿入を演出できます。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "css",
      "filename": "",
      "text": ".cdk-drag-preview {\n  box-sizing: border-box;\n  opacity: 0.5;\n}"
    },
    {
      "type": "image",
      "external": true,
      "url": "https://cdn-ak.f.st-hatena.com/images/fotolife/l/lacolaco/20180829/20180829212904.gif",
      "caption": ""
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "この他にもいくつか CSS クラスがあります。詳しくはスタイリングに関する",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "ドキュメント",
          "href": "https://github.com/angular/material2/blob/master/src/cdk/drag-drop/drag-drop.md#styling",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "を参照してください。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "まとめ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "bulleted_list",
      "items": [
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "Component Dev Kit の次期アップデートでドラッグアンドドロップがサポートされる",
              "annotations": {}
            }
          ],
          "children": []
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "cdkDrag",
              "annotations": {
                "code": true
              }
            },
            {
              "type": "text",
              "text": "ディレクティブと",
              "annotations": {}
            },
            {
              "type": "text",
              "text": "cdk-drop",
              "annotations": {
                "code": true
              }
            },
            {
              "type": "text",
              "text": "コンポーネントで並べ替えやグルーピングが簡単に実装できる",
              "annotations": {}
            }
          ],
          "children": []
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "CDK のアップデートは Angular v7 のリリースと合わせておこなわれるだろうと見られています。 楽しみに待ちましょう。",
          "annotations": {}
        }
      ]
    }
  ]
}
