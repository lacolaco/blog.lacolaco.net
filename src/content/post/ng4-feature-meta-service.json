{
  "pageId": "fe6eb6f9-2534-4204-b31c-a32dbec371ba",
  "lastEditedAt": "2023-06-03T11:23:00.000Z",
  "slug": "ng4-feature-meta-service",
  "properties": {
    "title": "[Angular 4.0] Metaサービスの使い方",
    "date": "2017-03-07T00:00:00.000Z",
    "tags": ["tech", "Angular"]
  },
  "content": [
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Angular 4.0で追加された新しい組み込みサービス、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "Meta",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "について解説します。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "Meta",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "サービス",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Meta",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "サービスは、その名のとおり、HTMLの",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "<meta>",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "タグに対する操作を行うためのサービスです。 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "@angular/platform-browser",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "パッケージから提供されていて、2.0ですでに実装されている",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "Title",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "サービスと同じように使用できます。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "import { Meta } from '@angular/platform-browser';\n\n@Injectable()\nexport class MyService {\n    constructor(metaService: Meta) {}\n}"
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "getTag(attrSelector: string): HTMLMetaElement",
          "annotations": {
            "code": true
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "getTag",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "メソッドは、引数の",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "attrSelector",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "に該当するmetaタグ要素を取得するものです。 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "attrSelector",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "は通常のCSSセレクタではなく、属性をベースにした文字列です。 たとえば",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "property",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "が",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "fb:app_id",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "のmetaタグを取得したい場合は次のように呼び出します。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "const tag = metaService.getTag('property=fb:app_id');"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "同じ引数で、複数件の戻り値を返せる",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "getTags",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "もあります。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "const tags = metaService.getTags('name=author');"
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "addTag(tag: MetaDefinition, forceCreation: boolean = false): HTMLMetaElement",
          "annotations": {
            "code": true
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "addTag",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "メソッドは新しくmetaタグをheadに追加するためのものです。 引数は",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "MetaDefinition",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "型のオブジェクトと、すでに同じmetaタグが存在するときに上書きするかどうかのフラグです。 戻り値には新しく生成された、あるいはすでに存在していたmetaタグ要素が渡されます。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "MetaDefinition",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "インターフェースは次のような定義になっています。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "export type MetaDefinition = {\n  charset?: string; \n  content?: string; \n  httpEquiv?: string; \n  id?: string; \n  itemprop?: string;\n  name?: string;\n  property?: string;\n  scheme?: string;\n  url?: string;\n}"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "実際の使い方は次のようになります。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "metaService.addTag({name: 'author', content: 'page author'});"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "こちらも同時に複数件を処理する",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "addTags",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "メソッドが用意されています。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "metaService.addTags([\n    {name: 'twitter:title', content: 'Content Title'},\n    {property: 'og:title', content: 'Content Title'}\n]);"
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "updateTag(tag: MetaDefinition, selector?: string): HTMLMetaElement",
          "annotations": {
            "code": true
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "updateTag",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "メソッドはすでに存在するmetaタグを更新するためのものです。 第2引数にセレクタが渡されなければ、第1引数の",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "name",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "や",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "property",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "をもとに更新対象を自動で判別します。 また、対象が存在しなければmetaタグの追加を行います。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "removeTag(attrSelector: string): void",
          "annotations": {
            "code": true
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "removeTag",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "メソッドはセレクタにヒットしたmetaタグを除去します。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "removeTagElement(meta: HTMLMetaElement): void",
          "annotations": {
            "code": true
          }
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "こちらは、セレクタではなくmetaタグ要素を受け取り、その要素をDOM上から除去します。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "まとめ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "これまでSNSへのシェアなどのためにmetaタグを操作する必要があったときは、直接DOMを操作する必要がありました。 ただブラウザ上で動かすだけなら問題ないですが、Angularはクロスプラットフォームに動作できることが目標なので、これは避けるべきものでした。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "今回導入された",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "Meta",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "はAngular内部で統合されているので、 将来的にはUniversalによるサーバーサイドレンダリング時にも使えて、SEOのためのmetaタグ操作も可能になるよう設計されています。 ぜひ独自のサービスから組み込みの",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "Meta",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "に乗り換えておきたいところです。 ただし、このAPIはまだexperimentalなので、半年後の次期メジャーアップデート(5.0)の時には多少の破壊的変更が入るかもしれないことに留意しましょう。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Meta",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "についてもっと知りたい方は",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "ソースコード",
          "href": "https://github.com/angular/angular/blob/master/modules/%40angular/platform-browser/src/browser/meta.ts",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "や、 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "テストコード",
          "href": "https://github.com/angular/angular/blob/master/modules/%40angular/platform-browser/test/browser/meta_spec.ts",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "を 読むとよいでしょう。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "divider"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Angular 4.0 Features",
          "annotations": {
            "bold": true
          }
        }
      ]
    },
    {
      "type": "bulleted_list",
      "items": [
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "新しいngIfの使い方",
              "href": "/post/ng4-feature-ngif/",
              "annotations": {}
            }
          ],
          "children": []
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "Metaサービスの使い方",
              "href": "/post/ng4-feature-meta-service/",
              "annotations": {}
            }
          ],
          "children": []
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "formsモジュールの更新について",
              "href": "/post/ng4-feature-forms-update/",
              "annotations": {}
            }
          ],
          "children": []
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "core/commonモジュールの変更について",
              "href": "/post/ng4-feature-core-update/",
              "annotations": {}
            }
          ],
          "children": []
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "router/http/animationsモジュールの変更について",
              "href": "/post/ng4-feature-libs-update/",
              "annotations": {}
            }
          ],
          "children": []
        }
      ]
    }
  ]
}
