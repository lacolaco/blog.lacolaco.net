{
  "pageId": "5116a5ea-ca93-4e2c-8c5d-3e492a935c1c",
  "lastEditedAt": "2023-12-30T10:10:00.000Z",
  "slug": "introduce-router-scroller-in-angular-v6-1",
  "properties": {
    "title": "Introduce Router Scroller in Angular v6.1",
    "date": "2018-06-09T00:00:00.000Z",
    "tags": ["Angular"]
  },
  "content": [
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "With Angular’s next minor update, a new feature will be out.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Its name is ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "Router Scroller",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": ".",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "For long-time people using Angular it is a long-awaited feature that is so glad that tears come out.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "In this article, for the strange one, “I can not wait next week beta.1! I want to try it now!”, I will also show you how to try it with the latest build.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "Router Scroller",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "The Router Scroller provides functions related to scrolling to the Angular Router.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "With Router Scroller, you can do the following things.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "bulleted_list",
      "items": [
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "Restore to scroll position before transition when browser back",
              "annotations": {}
            }
          ],
          "children": []
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "Fragmented URL like ",
              "annotations": {}
            },
            {
              "type": "text",
              "text": "#foo",
              "annotations": {
                "code": true
              }
            },
            {
              "type": "text",
              "text": " and automatically scroll to elements with corresponding ID",
              "annotations": {}
            }
          ],
          "children": []
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "If both of them are static HTML pages, the browser will do it automatically. And today, the same behavior can be easily introduced even by SPA by Angular Router.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "I will introduce about each.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "Scroll Position Restoration",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Router Scroller The first function is to store and restore the scroll position.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Every time Router navigates, it stores the scroll position at that point.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "And when the screen returns to the previous screen by the return operation of the browser, it automatically restores to the stored scroll position.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Since the timing is controlled by the Router in this restoration process, the scroll moves after the routing process of the previous screen is finished.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "Anchor Scrolling",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Another function is to scroll to an element with a corresponding ID if there is a fragment like ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "#foo",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " in the URL.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "This is also a function commonly used in static HTML pages, but in Angular it did not work because the browser searches for the element earlier than component generation by Router.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "This time Router has the Anchor Scrolling function, so even with Angular application it is possible to scroll by ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "#foo",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": ".",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "In addition to navigation by Router, it scrolls in the same way even if you reload.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "How to use",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Both Scroll Position Restoration and Anchor Scrolling are disabled by default at v6.1.0.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "So, you need to set ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "RouterModule",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " to enable it.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ScrollPositionRestoration",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " and ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "anchorScrolling",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " have been added to the option of the second argument of ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "RouterModule.forRoot",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " method.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "If set to ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "’enabled’",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " respectively, the function is enabled.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "That’s all there is to it.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: \"enabled\",\n      anchorScrolling: \"enabled\"\n    })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}"
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "Scroll Offset",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "You can also specify an offset for the Router Scroller.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "If you want to shift the scroll position, such as when the header is fixed or sticky, set ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "scrollOffset",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " with the option of the second argument of",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "RouterModule.forRoot",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " method.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "In the previous example of Anchor Scrolling, since the upper header is sticky, the y coordinate is shifted down by 64 px.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "@NgModule({\n  imports: [\n    RouterModule.forRoot(routes, {\n      scrollPositionRestoration: \"enabled\",\n      anchorScrolling: \"enabled\",\n      scrollOffset: [0, 64] // [x, y]\n    })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}"
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "Learn more",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "For those who want to know more, it would be better to read the commit content of the function.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://github.com/angular/angular/commit/49c5234c6817ceae02b8bacb30adae99c45a49a9"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "The sample code of this article is published on GitHub.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://github.com/lacolaco/ng-router-scrolling-example"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Thanks.",
          "annotations": {}
        }
      ]
    }
  ]
}
