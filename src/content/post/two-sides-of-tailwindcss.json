{
  "pageId": "6ede1797-c024-4d72-aea3-05528ed253b1",
  "lastEditedAt": "2023-11-08T01:19:00.000Z",
  "slug": "two-sides-of-tailwindcss",
  "properties": {
    "title": "Tailwind CSSの二面性、デザインシステムを借りるということ",
    "date": "2022-07-24T00:52:00.000Z",
    "tags": ["tailwindcss", "雑記", "言語化"],
    "updatedAt": "2022-07-24T00:00:00.000Z"
  },
  "content": [
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "この雑記を書く問題意識は、Tailwind CSSに対して向けられている世の人々の不満が、Tailwind CSSがコミットしていることから外れた、お門違いの期待の押しつけになっているのではないかと感じるところにある。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ライブラリやフレームワーク、道具にはそれが作られた目的があり、果たそうとするコミットメントがある。その圏内において果たされていないコミットメントに対する不満は、それ自体の存在意義にかかわる意味を持つが、しかし利用者が一方的に寄せた期待が果たされないことに対する不満はそうではない。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "念押しするまでもないと思うが、これはTailwind CSSに対して不満を向ける",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "べきではない",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "という話ではまったくない。むしろ、その不満の下敷きとなっている Tailwind CSS への期待が Tailwind CSS 自体によってコミットされたものでないとしたら、不満を向けてもしょうがないのではないか、あるいは、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "向けようがないのではないか",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "と考えられる可能性を検討してみようという話である。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "まずは、Tailwind CSSについて、その二面性についての考察からはじめる。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "2つの顔",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Tailwind CSSというツールの本質は大きく2つ認められるだろう。そのひとつは〈",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "pluggableなCSSライブラリビルドツール",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "〉としての本質、もうひとつはその上に構築される〈",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "デザインシステムを表現するCSSライブラリ",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "〉としての本質だ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "pluggableなCSSライブラリビルドツールとしての本質",
          "annotations": {
            "bold": true
          }
        }
      ]
    },
    {
      "type": "image",
      "url": "/images/two-sides-of-tailwindcss/eb9aade5-5d38-4ffa-a7d9-1f6133f180d9/Untitled.png",
      "caption": [
        {
          "type": "text",
          "text": "“Use the tailwind.config.js” file to craft your own design system”",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "〈pluggableなCSSライブラリビルドツール〉としての本質は、Tailwind CSSの設定ファイル ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "tailwind.config.js",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " （以降Tailwindコンフィグ）をもとにCSSスタイルシートを出力する部分がそれを担っている。Tailwindコンフィグをある程度触ったことがある人ならわかっていると思うが、Tailwind CSSのカスタマイズとはデフォルトで用意されたユーティリティCSSを拡張できるというレベルの機能",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "ではない",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Tailwind CSSがデフォルトで提供しているユーティリティCSSは、何から何までコアプラグインと呼ばれるプリインの",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "プラグイン",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "によって実装されている。すべてがプラグインであるということは、任意に着脱可能であるし、同じ機能を別のプラグインとして実装することもできるということを意味する。",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "デフォルトの機能はプラグインとしてファーストパーティではあるが、機能としてツールに組み込まれたビルトインではない",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "。すべてのプラグインを取り外し、完全にゼロからCSSライブラリを実装することもできる。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://tailwindcss.com/docs/presets"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "この点において、〈pluggableなCSSライブラリビルドツール〉としての本質は、その上に構築されるCSSライブラリの詳細についての関心を",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "含まない",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "。 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "flex",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " や ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "text-sm",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " などのユーティリティクラスは、デフォルトで同梱されるコアプラグインが提供している機能であり、ビルドツールが支配する領域ではない。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "このビルドツールはいわば、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "Tailwindコンフィグを入力とし、CSSライブラリを出力とする関数",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "と捉えることもできるだろう。だから、どのようなCSSライブラリが出力されるかについては、入力次第であるとしか言えないのだ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "デザインシステムを表現するCSSライブラリとしての本質",
          "annotations": {}
        }
      ]
    },
    {
      "type": "image",
      "url": "/images/two-sides-of-tailwindcss/e8aac7d8-328b-40e8-99ed-5c91c18e5866/Untitled.png",
      "caption": [
        {
          "type": "text",
          "text": "“An API for your design system”",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "〈デザインシステムを表現するCSSライブラリ〉としての本質は、実際にWebサイトやWebアプリケーションの構築において利用可能な、 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "flex",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " や ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "text-sm",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " といったユーティリティクラスが担っている。しかし上述のとおり、それはTailwindコンフィグをもとにビルドツールが出力したものにすぎない。つまり、この本質の核はそれらのコアプラグインをまとめて調和させた",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "デフォルトのプリセット",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "である。そしてそのプリセットは、設計済みの、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "Tailwind というひとつのデザインシステム",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "の一部である。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Tailwind がひとつのデザインシステムであるということ、それは Tailwind CSS を利用するということが、その根底にあるデザイン原則からデザイントークンからコンポーネントに至るまでその全体を",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "借りて、そのデザインシステムの上に",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "われわれのWebサイトやWebアプリケーションを構築するということを意味する。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Tailwind CSS が提供するCSSライブラリのユーティリティクラスがどれだけ汎用的であっても、それはひとつのデザインシステムであることと矛盾しない。同社が提供する",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "Tailwind UI",
          "href": "https://tailwindui.com/",
          "annotations": {}
        },
        {
          "type": "text",
          "text": " も同じデザインシステム上で構築されたコンポーネントライブラリである。充実したドキュメンテーションもデザインシステムの一部分であり、プリセットのコンフィグが内包するコアプラグインとデフォルトのテーマも含め、その全体がひとつのデザインシステムである。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "これが、 Tailwind CSS を二面性のもとに、2つの本質を持つものとして捉える見方である。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "image",
      "url": "/images/two-sides-of-tailwindcss/80fc96c9-18c7-4f83-874c-c1cab7de24f9/Untitled.png",
      "caption": [
        {
          "type": "text",
          "text": "デザインシステムを元にしたコンフィグと、そのコンフィグをCSSライブラリ化するためのビルドツール",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "デザインシステムを借りるということ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "〈デザインシステムを借りる〉とはどういうことか。世間にライブラリが広く流通している代表的なデザインシステムとして挙げられるのは、Google の Material Design だろう。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "quote",
      "text": [
        {
          "type": "text",
          "text": "Material is a design system created by Google to help teams build high-quality digital experiences for Android, iOS, Flutter, and the web.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://material.io/design/introduction"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ただ Material Design のボタンやフォームのUIを気に入り、その部分だけを利用しているつもりかもしれない。そうした利用もできるのは、 Material というデザインシステムの汎用性と完成度の高さによるものだろう。だが自覚的でなくとも、Material Design を採用してデザインされたWebサイトやアプリケーションは、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "Material というデザインシステムを借りて",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "、その上に構築されている。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "だが、借り物は借り物である以上、そのデザインシステムの",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "オーナーシップは、われわれの側にはない",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "。デザインシステムはそのシステムの許す範囲で拡張性を持ち、それをAPIとして利用者に提供することもあるが、その範囲を超え出るような拡張を施そうとすれば矛盾と衝突が起こるのは必然である。典型的には、ライブラリが提供するAPIでは表現できないカスタマイズのために、グローバルCSSを上書きすることになる。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "これと同じ図式は Tailwind CSS にも当てはめられる。プリセットのコアプラグインとテーマは、その土台となるデザインシステムの許す範囲で拡張性を備えているが、その範囲を超える拡張まではサポートしきれない。借り物のデザインシステムの上で表現できるのは、そのデザインシステムが想定する範囲のものに限られる。〈デザインシステムを借りる〉というのは、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "表現力の限界を他者に委ねる",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "ことにほかならない。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "だが、Tailwind CSS が画期的であった点は、それが単にデザインシステムを表現するライブラリであるだけでなく、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "デザインシステムをライブラリで表現する手段",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "もまたツールとして提供している点だ。これにより、独自のデザインシステムを持つ利用者がそれをCSSライブラリとして表現することを容易にした。〈pluggableなCSSライブラリビルドツール〉としての本質は、デザインシステムをライブラリにする",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "工程そのものを普遍化させる",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "という、ひとつの発明である。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "不満の矛先",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Tailwind CSS が提供するユーティリティCSSの命名や振る舞いが気に入らないのであれば、それは〈デザインシステムを表現するCSSライブラリ〉としてのTailwind CSSに対する不満であり、それは結局 Tailwind というデザインシステムへの不満である。だが、それは借り物のデザインシステムと、自分が表現したいデザインとの不協和音にすぎず、どちらかが正解でもなく間違っているのでもない。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "表現力を他者に委ねることが省力化による喜びを生み出すかぎりは、借り物のデザインシステムは有益なものになるだろう。しかしそれが不自由による苦しみを生むのであれば、それを解消する方法はコントロールを取り戻すことしかないだろう。デザインシステムを借りることをやめ、独自のデザインシステムを構築することだ。幸いにも、Tailwind CSS はそれも容易にしている。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "また、ひとつの体系として調和を図ること自体が難しい、クリエイティブかつ探索的な段階の表現においては、デザインシステムの根本的な効用であるはずの",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "制約",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "こそが目的を阻害するのであるから、Tailwind に限らずデザインシステムそのものがミスマッチである。どこまでの表現力が必要になるかわからないうちにデザインシステムを利用するのは賭けであると言えよう。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    }
  ]
}
