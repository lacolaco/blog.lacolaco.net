{
  "pageId": "83989f98-b8c5-470d-b414-90f097702ea3",
  "lastEditedAt": "2023-06-21T06:06:00.000Z",
  "slug": "signals-memo-20230621",
  "properties": {
    "title": "Signals 雑記 (2023-06-21)",
    "date": "2023-06-08T00:09:00.000Z",
    "tags": ["雑記", "Signals", "Angular"]
  },
  "content": [
    {
      "type": "tweet",
      "url": "https://twitter.com/laco2net/status/1671341278246887425"
    },
    {
      "type": "tweet",
      "url": "https://twitter.com/laco2net/status/1671342944878759937"
    },
    {
      "type": "tweet",
      "url": "https://twitter.com/laco2net/status/1671343903453364224"
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "bulleted_list",
      "items": [
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "Signalがプリミティブであるということの意味",
              "annotations": {}
            }
          ],
          "children": [
            {
              "type": "bulleted_list",
              "items": [
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "プリミティブとそうでないものの違い=遍在性",
                      "annotations": {}
                    }
                  ],
                  "children": []
                },
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "どこで使われていてもおかしくない原始的な構成要素",
                      "annotations": {}
                    }
                  ],
                  "children": []
                },
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "Angular Signalsがリアクティビティプリミティブであるなら、Angular Signals はAngularアプリケーションのどこにどう登場してもおかしくない",
                      "annotations": {}
                    }
                  ],
                  "children": []
                },
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "たとえドメイン層であっても",
                      "annotations": {}
                    }
                  ],
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "脱State, 脱Store",
              "annotations": {}
            }
          ],
          "children": [
            {
              "type": "bulleted_list",
              "items": [
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "State, Store というメンタルモデル",
                      "annotations": {}
                    }
                  ],
                  "children": []
                },
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "JavaScriptでオブジェクトの状態の変化に対して反応的であるためには、なんらかの仕組みが必要",
                      "annotations": {}
                    }
                  ],
                  "children": [
                    {
                      "type": "bulleted_list",
                      "items": [
                        {
                          "type": "bulleted_list_item",
                          "text": [
                            {
                              "type": "text",
                              "text": "Pull型でいえばポーリング、tick + dirty checking",
                              "annotations": {}
                            }
                          ],
                          "children": [
                            {
                              "type": "bulleted_list",
                              "items": [
                                {
                                  "type": "bulleted_list_item",
                                  "text": [
                                    {
                                      "type": "text",
                                      "text": "変化の有無を都度検出する",
                                      "annotations": {}
                                    }
                                  ],
                                  "children": []
                                }
                              ]
                            }
                          ]
                        },
                        {
                          "type": "bulleted_list_item",
                          "text": [
                            {
                              "type": "text",
                              "text": "Push型でいえばイベントリスナー、Observerパターン",
                              "annotations": {}
                            }
                          ],
                          "children": [
                            {
                              "type": "bulleted_list",
                              "items": [
                                {
                                  "type": "bulleted_list_item",
                                  "text": [
                                    {
                                      "type": "text",
                                      "text": "変化されたことを通知される",
                                      "annotations": {}
                                    }
                                  ],
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "あるオブジェクトについて、そのオブジェクトの変更を追跡するために外付けされるアダプターとして、Store というパターンが使われてきた",
                      "annotations": {}
                    }
                  ],
                  "children": [
                    {
                      "type": "bulleted_list",
                      "items": [
                        {
                          "type": "bulleted_list_item",
                          "text": [
                            {
                              "type": "text",
                              "text": "Store パターンの本質はオブジェクトに対する変更(mutation)経路の制限",
                              "annotations": {}
                            }
                          ],
                          "children": []
                        },
                        {
                          "type": "bulleted_list_item",
                          "text": [
                            {
                              "type": "text",
                              "text": "変更経路を絞ることで、変更されたときに確実に通知できる",
                              "annotations": {}
                            }
                          ],
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "Store パターンを再利用可能な部品として実装しようとすると、あるひとまとまりのオブジェクトに対するポリモーフィックな設計になる",
                      "annotations": {}
                    }
                  ],
                  "children": [
                    {
                      "type": "bulleted_list",
                      "items": [
                        {
                          "type": "bulleted_list_item",
                          "text": [
                            {
                              "type": "text",
                              "text": "Store<T>",
                              "annotations": {
                                "code": true
                              }
                            },
                            {
                              "type": "text",
                              "text": " ",
                              "annotations": {}
                            }
                          ],
                          "children": []
                        },
                        {
                          "type": "bulleted_list_item",
                          "text": [
                            {
                              "type": "text",
                              "text": "この ",
                              "annotations": {}
                            },
                            {
                              "type": "text",
                              "text": "T",
                              "annotations": {
                                "code": true
                              }
                            },
                            {
                              "type": "text",
                              "text": " がすなわち State ",
                              "annotations": {}
                            }
                          ],
                          "children": []
                        },
                        {
                          "type": "bulleted_list_item",
                          "text": [
                            {
                              "type": "text",
                              "text": "Store パターンが State という分節単位を要求する",
                              "annotations": {}
                            }
                          ],
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "ところが、Signalsはオブジェクトそれ自体が変更を通知する、「物言うオブジェクト」",
                      "annotations": {}
                    }
                  ],
                  "children": [
                    {
                      "type": "bulleted_list",
                      "items": [
                        {
                          "type": "bulleted_list_item",
                          "text": [
                            {
                              "type": "text",
                              "text": "変更を追跡するために追加の仕組みを必要としない",
                              "annotations": {}
                            }
                          ],
                          "children": []
                        },
                        {
                          "type": "bulleted_list_item",
                          "text": [
                            {
                              "type": "text",
                              "text": "つまり、Storeが不要",
                              "annotations": {}
                            }
                          ],
                          "children": []
                        },
                        {
                          "type": "bulleted_list_item",
                          "text": [
                            {
                              "type": "text",
                              "text": "Storeが不要であるなら、同時に State という分節単位も不要",
                              "annotations": {}
                            }
                          ],
                          "children": [
                            {
                              "type": "bulleted_list",
                              "items": [
                                {
                                  "type": "bulleted_list_item",
                                  "text": [
                                    {
                                      "type": "text",
                                      "text": "State に組み入れられていたひとつひとつのオブジェクトが、それぞれ独立して状態として振る舞える",
                                      "annotations": {}
                                    }
                                  ],
                                  "children": []
                                }
                              ]
                            }
                          ]
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "そのような意味における脱State, 脱Store",
                      "annotations": {}
                    }
                  ],
                  "children": [
                    {
                      "type": "bulleted_list",
                      "items": [
                        {
                          "type": "bulleted_list_item",
                          "text": [
                            {
                              "type": "text",
                              "text": "実際には、細分化、to be fine-grained",
                              "annotations": {}
                            }
                          ],
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "\"状態管理\"はもはや責務ではなくなった",
              "annotations": {}
            }
          ],
          "children": [
            {
              "type": "bulleted_list",
              "items": [
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "Signalsによって、Observerパターンがプリミティブとして状態オブジェクトそのものに組み込まれた",
                      "annotations": {}
                    }
                  ],
                  "children": []
                },
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "もはや独立したメカニズムとして外部化できるものではなくなる",
                      "annotations": {}
                    }
                  ],
                  "children": [
                    {
                      "type": "bulleted_list",
                      "items": [
                        {
                          "type": "bulleted_list_item",
                          "text": [
                            {
                              "type": "text",
                              "text": "分離可能な関心事ではなくなる",
                              "annotations": {}
                            }
                          ],
                          "children": []
                        }
                      ]
                    }
                  ]
                },
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "Signals以後に残るのは、自律分散的に存在するそれぞれの状態オブジェクトが、互いにどのように関係するかというネットワークの構築か",
                      "annotations": {}
                    }
                  ],
                  "children": [
                    {
                      "type": "bulleted_list",
                      "items": [
                        {
                          "type": "bulleted_list_item",
                          "text": [
                            {
                              "type": "text",
                              "text": "オブジェクト同士のP2P的な依存マップを設計する",
                              "annotations": {}
                            }
                          ],
                          "children": []
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            {
              "type": "paragraph",
              "text": []
            }
          ]
        }
      ]
    }
  ]
}
