{
  "pageId": "b28b8ef4-ebdb-495f-a2b5-1c0e89c9cded",
  "lastEditedAt": "2023-12-30T09:58:00.000Z",
  "slug": "gha-advent-calendar-2023",
  "locale": "ja",
  "properties": {
    "title": "GitHub ActionsのJob Outputsでハマった話",
    "date": "2023-12-20T15:00:00.000Z",
    "category": "Tech",
    "tags": ["GitHub Actions"]
  },
  "content": [
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "この記事は ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "GitHub Actions Advent Calendar",
          "href": "https://qiita.com/advent-calendar/2023/github-actions",
          "annotations": {}
        },
        {
          "type": "text",
          "text": " 21日目の記事です。昨日は@eno49conanさんの ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "GitHub Actions、キャッシュで時間短縮(とLambda更新で少し苦労)した話",
          "href": "https://qiita.com/eno49conan/items/508bae516fa2ed089db9",
          "annotations": {}
        },
        {
          "type": "text",
          "text": " でした。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://qiita.com/advent-calendar/2023/github-actions"
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "アドベントカレンダーなので、小粒のちょっとした話を書きます。先日GitHub Actionsの",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "Job Outputs",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": " 機能のめちゃくちゃ初歩的な仕様を勘違いしてしばらくハマってしまったので、備忘録も兼ねてその話を。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "Job Outputs",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Job Outputsは、先行するジョブから出力された値を、後続のジョブで利用するための機能です。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "quote",
      "text": [
        {
          "type": "text",
          "text": "You can use ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "jobs.<job_id>.outputs",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " to create a map of outputs for a job. Job outputs are available to all downstream jobs that depend on this job. For more information on defining job dependencies, see ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "jobs.<job_id>.needs",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": ".",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "出力は各ステップに紐づき、同一ジョブ内では ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "steps.<step_id>.outputs",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " でアクセスできますが、異なるジョブから参照するには一旦ジョブの出力としてマッピングしなおす必要があります。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "yaml",
      "filename": "",
      "text": "# 公式ドキュメントより\njobs:\n  job1:\n    runs-on: ubuntu-latest\n    # Map a step output to a job output\n    outputs:\n      output1: ${{ steps.step1.outputs.test }}\n      output2: ${{ steps.step2.outputs.test }}\n    steps:\n      - id: step1\n        run: echo \"test=hello\" >> \"$GITHUB_OUTPUT\"\n      - id: step2\n        run: echo \"test=world\" >> \"$GITHUB_OUTPUT\"\n  job2:\n    runs-on: ubuntu-latest\n    needs: job1\n    steps:\n      - env:\n          OUTPUT1: ${{needs.job1.outputs.output1}}\n          OUTPUT2: ${{needs.job1.outputs.output2}}\n        run: echo \"$OUTPUT1 $OUTPUT2\""
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "出力は常に文字列エンコードされる",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ドキュメントを読めばそこかしこに書いてあるのですが、僕はこの仕様を完全に見落としていて時間を無駄にしました。ステップやジョブの出力は、常にUnicode文字列にエンコードされます。文字列以外のオブジェクトが出力された場合は、JSON文字列に変換されます。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "これが何を意味するかというと、 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "false",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " が出力されると ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "\"false\"",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " になるということです。もう察しがついたかもしれませんが、真偽値を出力していると思ったまま後続のジョブの ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "if",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 条件でその値を参照してしまい、 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "\"true\"",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " でも ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "\"false\"",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " でも常に ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "if",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " は真だと評価してしまう、というのをやらかしました。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "yaml",
      "filename": "",
      "text": "# こんなイメージ\njobs:\n  check:\n    runs-on: ubuntu-latest\n    outputs:\n      release_ready: ${{ steps.release_check.outputs.ready }}\n    steps:\n      - id: release_check\n        uses: ... # 内部で ready=true|false を出力する\n  release:\n    runs-on: ubuntu-latest\n    needs: \n      - check\n    if: ${{ needs.check.outputs.release_ready }} # 常に真になる\n    steps:\n      - ..."
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "これに気づくのが遅れた理由はいくつかあり、ひとつはその出力をしている部分のコードを読むと ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "@actions/core",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " のJavaScript APIで、 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "setOutput()",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 関数を呼び出しており、そこだけ見たら出力は間違いなくブール値であったためです。しかし、これは ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "@actions/core",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " APIへの理解が不足しており、ソースコードのJSDocまで読んでいれば第2引数がJSONエンコードされることは明記してありました。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "https://github.com/actions/toolkit/tree/main/packages/core#inputsoutputs",
          "href": "https://github.com/actions/toolkit/tree/main/packages/core#inputsoutputs",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "https://github.com/actions/toolkit/blob/main/packages/core/src/core.ts#L185-L200",
          "href": "https://github.com/actions/toolkit/blob/main/packages/core/src/core.ts#L185-L200",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "typescript",
      "filename": "",
      "text": "/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function setOutput(name: string, value: any): void {"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ふたつめの理由は、上述の例でいうところの ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "release_ready",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " が本当に ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "false",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " になっているのかを確かめるためにログを入れての調査は早くに始めていたのですが、 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "echo ${{steps.release_check.outputs.ready}}",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "  では ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "false",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " と ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "\"false\"",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " の区別がつかないことに気づくのが遅かったためです。ログには ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "false",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " と出力されるのに ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "if",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 条件が真になってしまうのが謎でかなり悩みました。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "文字列以外の出力には ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "fromJSON()",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " を",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "そういうわけでハマった問題の原因は暗黙的に文字列に変換されたことに気づいていなかったというしょーもないものでした。こういうしょーもないものほど盲点で、気づくのに時間がかかるのはあるあるですね。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "今回の場合は ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "if",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 条件で参照するときに ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "fromJSON()",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 関数で文字列からデコードするのが適切な記述でした。あるいは、文字列として ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "\"true\"",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " との一致をチェックすることもできますね。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "https://docs.github.com/en/actions/learn-github-actions/expressions#fromjson",
          "href": "https://docs.github.com/en/actions/learn-github-actions/expressions#fromjson",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "yaml",
      "filename": "",
      "text": "# こんなイメージ\njobs:\n  check:\n    runs-on: ubuntu-latest\n    outputs:\n      release_ready: ${{ steps.release_check.outputs.ready }}\n    steps:\n      - id: release_check\n        uses: ... # 内部で ready=true|false を出力する\n  release:\n    runs-on: ubuntu-latest\n    needs: \n      - check\n    if: fromJSON(needs.check.outputs.release_ready)\n    steps:\n      - ..."
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "これにて一件落着、めでたしめでたしということで、今年もたくさんGitHub Actionsのお世話になりました。来年もたくさんお世話になると思います。みなさんも楽しいGitHub Actionsライフを！",
          "annotations": {}
        }
      ]
    }
  ]
}
