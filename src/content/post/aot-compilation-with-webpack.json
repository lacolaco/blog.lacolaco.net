{
  "pageId": "655c55b5-69cc-4063-8608-44d8f10ec88b",
  "lastEditedAt": "2023-05-21T05:06:00.000Z",
  "slug": "aot-compilation-with-webpack",
  "properties": {
    "title": "Angular AoT Compilation with webpack",
    "date": "2016-10-23T00:00:00.000Z",
    "tags": ["tech", "Angular", "webpack"]
  },
  "content": [
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "How to use ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "@ngtools/webpack",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": ".",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "@ngtools/webpack",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": " package provides a very easy way to switch compilations of an Angular application from JiT to ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "AoT",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": ". It’s used in Angular-CLI. The tool allows us enable AoT compilation ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "without any changes",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": " of the application code. Let’s use new great stuff!",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "Make base app",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "At first, make a very simple application.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "├── index.html\n├── package.json\n├── src\n│   ├── app\n│   │   ├── app.component.css\n│   │   ├── app.component.html\n│   │   ├── app.component.ts\n│   │   ├── app.module.ts\n│   │   └── home\n│   │       ├── home.component.html\n│   │       └── home.component.ts\n│   └── main.ts\n├── tsconfig.json\n└── webpack.config.js"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "This is current webpack configuration.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "module.exports = {\n  entry: {\n    main: \"./src/main.ts\"\n  },\n  output: {\n    path: \"./dist\",\n    filename: \"[name].bundle.js\"\n  },\n  resolve: {\n    extensions: [\".ts\", \".js\", \".html\"]\n  },\n  module: {\n    rules: [\n      { test: /\\.html$/, loader: \"raw\" },\n      { test: /\\.css$/, loader: \"raw\" },\n      {\n        test: /\\.ts/,\n        loaders: [\"awesome-typescript-loader\", \"angular2-template-loader\"]\n      }\n    ]\n  },\n  devtool: \"#source-map\"\n};"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Current Project: ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "https://github.com/laco0416/ngtools-webpack-example/tree/base-app",
          "href": "https://github.com/laco0416/ngtools-webpack-example/tree/base-app",
          "annotations": {}
        },
        {
          "type": "text",
          "text": " ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "Switching dev/prod mode with CLI option",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "I want to have two build mode. ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "dev",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": " mode is fast and no optimization. In other hand, ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "prod",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": " mode is fully optimized build. We can pass ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "env",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": " options via webpack CLI if the configuration is a function. New webpack.config.js is below:",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "const webpack = require(\"webpack\");\nmodule.exports = envOptions => {\n  envOptions = envOptions || {};\n  const config = {\n    entry: {\n      main: \"./src/main.ts\"\n    },\n    output: {\n      path: \"./dist\",\n      filename: \"[name].bundle.js\"\n    },\n    resolve: {\n      extensions: [\".ts\", \".js\", \".html\"]\n    },\n    module: {\n      rules: [\n        { test: /\\.html$/, loader: \"raw\" },\n        { test: /\\.css$/, loader: \"raw\" },\n        {\n          test: /\\.ts/,\n          loaders: [\"awesome-typescript-loader\", \"angular2-template-loader\"]\n        }\n      ]\n    },\n    devtool: \"#source-map\"\n  };\n  if (envOptions.MODE === \"prod\") {\n    config.plugins = [\n      new webpack.optimize.UglifyJsPlugin({\n        beautify: false,\n        mangle: {\n          screw_ie8: true,\n          keep_fnames: true\n        },\n        compress: {\n          warnings: false,\n          screw_ie8: true\n        },\n        comments: false\n      })\n    ];\n  }\n  return config;\n};"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "And new npm-scripts are below.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "json",
      "filename": "",
      "text": "\"scripts\": {\n    \"build\": \"webpack --config webpack.config.js\",\n    \"build:prod\": \"webpack --config webpack.config.js --env.MODE=prod\"\n},"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Current Project: ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "https://github.com/laco0416/ngtools-webpack-example/tree/build-mode",
          "href": "https://github.com/laco0416/ngtools-webpack-example/tree/build-mode",
          "annotations": {}
        },
        {
          "type": "text",
          "text": " ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "Use NgcLoader and AotPlugin in prod mode",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "AoT compilation is a large effective optimization. It should be used in prod mode. To build with AoT compilation, let’s install ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "@ngtools/webpack",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " package and its dependencies.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "npm install -D @angular/compiler-cli @ngtools/webpack"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "And update webpack.config.js to enable AotPlugin. Separate .ts file resolution, use ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "@ngtools/webpack",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " loader (NgcLoader) and add AotPlugin.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "",
      "filename": "",
      "text": "const webpack = require(\"webpack\");\nconst AotPlugin = require(\"@ngtools/webpack\").AotPlugin;\nmodule.exports = envOptions => {\n  envOptions = envOptions || {};\n  const config = {\n    entry: {\n      main: \"./src/main.ts\"\n    },\n    output: {\n      path: \"./dist\",\n      filename: \"[name].bundle.js\"\n    },\n    resolve: {\n      extensions: [\".ts\", \".js\", \".html\"]\n    },\n    module: {\n      rules: [\n        { test: /\\.html$/, loader: \"raw\" },\n        { test: /\\.css$/, loader: \"raw\" }\n      ]\n    },\n    devtool: \"#source-map\"\n  };\n  if (envOptions.MODE === \"prod\") {\n    config.module.rules.push({ test: /\\.ts$/, loaders: [\"@ngtools/webpack\"] });\n    config.plugins = [\n      new AotPlugin({\n        tsConfigPath: \"./tsconfig.json\",\n        entryModule: \"src/app/app.module#AppModule\"\n      }),\n      new webpack.optimize.UglifyJsPlugin({\n        beautify: false,\n        mangle: {\n          screw_ie8: true,\n          keep_fnames: true\n        },\n        compress: {\n          warnings: false,\n          screw_ie8: true\n        },\n        comments: false\n      })\n    ];\n  } else {\n    config.module.rules.push({\n      test: /\\.ts$/,\n      loaders: [\"awesome-typescript-loader\", \"angular2-template-loader\"]\n    });\n  }\n  return config;\n};"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "AotPlugin takes two parameters at least. ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "tsConfigPath",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": " identifies the path of tsconfig.json, and ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "entryModule",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": " identifies the path and module class used for bootstrapping.",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Now, ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "npm run build:prod",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " command executes AoT compilation. Congrats!",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Final Project: ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "https://github.com/laco0416/ngtools-webpack-example/tree/aot-plugin",
          "href": "https://github.com/laco0416/ngtools-webpack-example/tree/aot-plugin",
          "annotations": {}
        },
        {
          "type": "text",
          "text": " ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "Conclusion",
          "annotations": {}
        }
      ]
    },
    {
      "type": "bulleted_list",
      "items": [
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "Switch build mode with webpack’s environment options: –env.MODE",
              "annotations": {}
            }
          ],
          "children": []
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "Install @ngtools/webpack",
              "annotations": {}
            }
          ],
          "children": []
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "Use NgcLoader and add AotPlugin in prod mode",
              "annotations": {}
            }
          ],
          "children": []
        }
      ]
    }
  ]
}
