{
  "pageId": "2d6a637a-1d09-4e33-b181-28d0f15c450e",
  "lastEditedAt": "2023-12-30T10:07:00.000Z",
  "slug": "angular-state-of-linting-2020",
  "properties": {
    "title": "Angular: ESLintサポートの現状 2020 Autumn",
    "date": "2020-11-12T00:00:00.000Z",
    "tags": ["Angular", "ESLint"]
  },
  "content": [
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Angular v11.0.0のリリースとともに、Angularの開発ロードマップも更新された。 この記事では開発ロードマップから “Migrate To ESLint” が消えたことと、Lintingに関するAngular CLIの動きについて簡単にまとめる。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "TL;DR",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "要点だけ知りたい人は次のことだけ持ち帰って欲しい。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "bulleted_list",
      "items": [
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "TSLintからESLintへの移行はサードパーティの",
              "annotations": {}
            },
            {
              "type": "text",
              "text": "angular-eslint",
              "href": "https://github.com/angular-eslint/angular-eslint",
              "annotations": {}
            },
            {
              "type": "text",
              "text": "の利用を公式に推奨している",
              "annotations": {}
            }
          ],
          "children": []
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "Angular CLIのデフォルトLinter(TSLint)はv12で非推奨になる",
              "annotations": {}
            }
          ],
          "children": []
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "angular-eslint",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "AngularチームがTSLintからESLintへの移行を考え始める以前から、angular-eslintプロジェクトはTSLint+Codelyzerの機能をESLintで再現するツールを開発してきた。 近々angular-eslintのリリースはアルファからベータになり、実戦投入可能なレベルに仕上がりつつある。 これまでCodelyzerが提供してきたTSLintのルールに対応するESLintルールはまだ不完全ではあるが、多くが対応済みだ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Rules List ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "https://github.com/angular-eslint/angular-eslint#rules-list",
          "href": "https://github.com/angular-eslint/angular-eslint#rules-list",
          "annotations": {}
        },
        {
          "type": "text",
          "text": " ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "デフォルトLinterの廃止",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "当初はAngular CLIのデフォルトLinterをESLintに移行するために、ESLint対応のファーストパーティ実装を追加する方向で進んでいたが、 すでにサードパーティで存在していて活発に開発されているangular-eslintの意向を尊重し、angular-eslintと連携する方針に固まった。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://github.com/angular/angular-cli/issues/13732#issuecomment-719724640"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "v12でAngular CLIはデフォルトのTSLintサポートを非推奨にする（おそらくOpt-inに切り替え、利用者に警告を出す）。その後はそもそも“デフォルトLinter”というものを持たないようになる予定だ。 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "ng deploy",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " コマンドと同じように、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "ng lint",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " コマンドはエントリポイントだけを提供し、実体はプラグインが提供するようになるだろう。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "v11のリリースブログにも同様のことが書かれている。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://blog.angular.io/version-11-of-angular-now-available-74721b7952f7"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Angular外のエコシステムへ柔軟に対応するためのプラグイン化という側面もあるが、Angularチームの開発リソースをより本質的なプロジェクトへ集中するため、コミュニティに任せられるところは任せたい、ということもあるだろう。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "そういう流れで、Angularチームの開発ロードマップからは “Migrate to ESLint” は無くなった。 Angularチームが取り組むまでもなく、すでにコミュニティが推進していたからだ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://angular.io/guide/roadmap"
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "今できること",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Lintの設定をデフォルトからほとんど変えていないのであれば、v12, v13あたりで公式に推奨されるであろう移行ガイドを待っていてもよいだろう。 もちろん今すぐangular-eslintに切り替えるのも自由だ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ただ、もしAngularのプロジェクトでTSLintのカスタムルールを今から追加しようとしているのであれば、それはangular-eslintに移行してからESLintのカスタムルールを追加するように切り替えたほうがいいだろう。 特にCodelyzerによるテンプレートASTの解析に依存するカスタムルールであれば、今から新たに追加するのは将来移行するのを難しくする可能性がある。 むしろangular-eslintへ移行した上で足りない機能があれば早めにフィードバックしておくのがオープンソース利用者の振る舞いとしても好ましいだろう。",
          "annotations": {}
        }
      ]
    }
  ]
}
