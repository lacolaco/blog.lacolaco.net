{
  "pageId": "ca90e008-8109-41f6-a4bb-889503419f3b",
  "lastEditedAt": "2023-12-24T00:27:00.000Z",
  "slug": "20-lines-simple-store-with-rxjs",
  "properties": {
    "title": "20 Lines Simple Store with RxJS",
    "date": "2018-01-05T00:00:00.000Z",
    "tags": ["TypeScript", "RxJS"]
  },
  "content": [
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "code",
      "language": "typescript",
      "filename": "",
      "text": "import { distinctUntilChanged, map } from \"rxjs/operators\";\nimport { BehaviorSubject } from \"rxjs/BehaviorSubject\";\n\nexport abstract class Store<T> extends BehaviorSubject<T> {\n  constructor(initialState: T) {\n    super(initialState);\n  }\n\n  public dispatch(fn: (state: T) => T) {\n    this.next(fn(this.getValue()));\n  }\n\n  public select<R>(fn: (state: T) => R) {\n    return this.pipe(map<T, R>(fn), distinctUntilChanged());\n  }\n\n  public selectSync<R>(fn: (state: T) => R) {\n    return fn(this.getValue());\n  }\n}\n"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Example: UserStore",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "typescript",
      "filename": "",
      "text": "import { User } from \"../entity/user\";\nimport { Store } from \"../../store\";\n\nexport interface State {\n  currentUser: User | null;\n}\n\nexport class UserStore extends Store<State> {\n  constructor() {\n    super({\n      currentUser: null\n    });\n  }\n\n  get currentUser$() {\n    return this.select(state => state.currentUser);\n  }\n  get currentUser() {\n    return this.selectSync(state => state.currentUser);\n  }\n\n  setCurrentUser(user: User) {\n    this.dispatch(state => ({\n      ...state,\n      currentUser: user\n    }));\n  }\n}\n"
    }
  ]
}
