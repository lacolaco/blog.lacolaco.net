{
  "pageId": "40f4e1df-5de5-45b9-b837-f96a36605ba9",
  "lastEditedAt": "2023-10-18T04:04:00.000Z",
  "slug": "angular-mat-suffix-show-only-when-focused",
  "properties": {
    "title": "Angular MatSuffixをフォーカス中だけ表示する",
    "date": "2023-10-18T02:50:00.000Z",
    "tags": ["Angular", "Angular Material", "tailwindcss"],
    "canonicalUrl": "https://zenn.dev/lacolaco/articles/angular-mat-suffix-show-only-when-focused"
  },
  "content": [
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Angular Material の MatFormField と MatInput を使う場面で、フォーカスにより MatSuffix の表示状態を制御する方法の一例を紹介する。ユーザーに対する入力中のヒントを表示するのに便利なケースがあるかもしれない。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "image",
      "url": "/images/angular-mat-suffix-show-only-when-focused/3c6255ea-b6c7-4055-8126-638d2819f0c3/1f8c90ee-66fa-4cc6-a4b3-268d3e7c5431/capture.gif",
      "caption": [
        {
          "type": "text",
          "text": "テキストフィールドにフォーカスがあるときだけMatSuffix要素が可視化される",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "サンプルコードでは TailwindCSS の標準ユーティリティクラスを使うが、原理的にはCSSで実現しているのと変わらない。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "stackblitz",
      "url": "https://stackblitz.com/edit/i7rk3p?ctl=1&embed=1&file=src/app/app.component.ts"
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "MatSuffixの準備",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "まずはフォーカスによるMatSuffixの表示制御をしていない状態はこのような感じになる。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "typescript",
      "filename": "",
      "text": "@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, MatFormFieldModule, MatInputModule],\n  template: `\n  <div class=\"container p-8\">\n    <mat-form-field class=\"w-full\">\n      <mat-label>Search</mat-label>\n      <input matInput type=\"text\">\n\n      <div matSuffix class=\"px-2\">\n        <span class=\"text-xs text-gray-500\">Enter to submit</span>\n      </div>\n    </mat-form-field>\n  </div>\n  `,\n  styleUrls: ['./app.component.css'],\n})\nexport class AppComponent {}"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ここから、 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "<mat-form-field>",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 要素にフォーカスがあるときにだけスタイルを適用されるように変更する。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": ":focus-within",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 疑似クラス",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://developer.mozilla.org/ja/docs/Web/CSS/:focus-within"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "今回のように、親要素のフォーカスにより子孫要素に条件付きのスタイルを付与する場合に使えるのは",
          "annotations": {}
        },
        {
          "type": "text",
          "text": ":focus-within",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 擬似クラスである。 実際にフォーカスを受けるのは ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "<input>",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 要素だが、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": ":focus-within",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 擬似クラスによって ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "<input>",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 要素を内包する ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "<mat-form-field>",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 要素を起点にCSSを記述できる。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "TailwindCSSでは、 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "group-{modifer}",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 機能を使って実装できる。フォーカス状態を監視する親要素に ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "group",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " クラスを付与し、スタイルを変更する子要素に ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "group-focus-within:",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " モディファイアを利用する。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://tailwindcss.com/docs/hover-focus-and-other-states#styling-based-on-parent-state"
    },
    {
      "type": "code",
      "language": "html",
      "filename": "",
      "text": "<div class=\"container p-8\">\n\t<!-- \"group\" を追加 -->\n  <mat-form-field class=\"w-full group\"> \n    <mat-label>Search</mat-label>\n    <input matInput type=\"text\">\n\n\t\t<!-- \"invisible group-focus-within:visible\" を追加 -->\n    <div matSuffix class=\"px-2 invisible group-focus-within:visible\">\n      <span class=\"text-xs text-gray-500\">Enter to submit</span>\n    </div>\n  </mat-form-field>\n</div>"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "素のCSSであれば、上記のHTMLに対して次のように書けば同等のことができる。 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": ":focus-within",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 擬似クラスにより、 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": ".group",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 要素の子孫要素のどれかにフォーカスがあれば ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": ".group:focus-within",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " セレクタにマッチするようになる。あとはその子孫セレクタで表示状態を切り替えればよい。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "css",
      "filename": "",
      "text": ".invisible {\n\tvisibility: hidden;\n}\n\n.group:focus-within group-focus-within:visible {\n\tvisibility: visible;\n}"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "今回は ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "visibility",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " で表示状態を切り替えているが、別に ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "display",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " による切り替えでも問題はない。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    }
  ]
}
