{
  "pageId": "1ff3521b-014a-80ce-ac20-c9e6e608bc43",
  "lastEditedAt": "2025-05-28T06:50:00.000Z",
  "slug": "deck-markdown-to-google-slides",
  "locale": "ja",
  "properties": {
    "title": "k1LoW/deck: MarkdownでGoogleスライドを作る",
    "date": "2025-05-28T01:09:00.000Z",
    "category": "Tech",
    "tags": ["雑記"]
  },
  "content": [
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "先日",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "TSKaigi 2025で登壇したときに使った資料",
          "href": "https://blog.lacolaco.net/posts/tskaigi-2025-slide/",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "は、Googleスライドで作ったものだが、実はその「ソースコード」はMarkdownで書いた。どういうことかというと、MarkdownファイルからGoogleスライドを生成できる “",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "deck",
          "annotations": {
            "bold": true
          }
        },
        {
          "type": "text",
          "text": "” というツールを使った。開発者はk1LoWさん。deckが生まれるに至るまでの経緯はぜひご本人のブログを読んでほしい。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "link_preview",
      "url": "https://github.com/k1LoW/deck"
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "link_preview",
      "url": "https://k1low.hatenablog.com/entry/2025/03/31/083000"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "deck はもともとk1LoWさんが個人的に使うために作ったツールのようだが、OSSとして公開されていたので試しに使わせてもらった。使ってみるとかなり手に馴染んで、実はTSKaigiの前にも「",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "技術書とお金 夏の夜",
          "href": "https://tech-book-cat.connpass.com/event/325189/",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "」での発表スライド（非公開）もdeckで作っている。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "TSKaigi用のスライドのソースコードをGistに貼った。コメントを多用するので、プレビューでは消えてしまう。Rawで見たほうがよくわかると思う。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://gist.github.com/lacolaco/f11270f4fb663841976e873b55020978"
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "なぜGoogleスライドか",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Markdownを書いて、それを発表スライド化するツールは他にもいろいろあるが、僕は最終的な発表ツールはGoogleスライドを使いたかった。理由はざっと挙げると以下:",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "bulleted_list",
      "items": [
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "当日の失敗確率が低い",
              "annotations": {
                "bold": true
              }
            }
          ],
          "children": [
            {
              "type": "bulleted_list",
              "items": [
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "BYODなイベントだったとしても、Googleスライドなら当日自分のPCがダメになっても最悪誰かにURL渡して助けてもらえる",
                      "annotations": {}
                    }
                  ],
                  "children": []
                },
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "スピーカー用パネルが便利（スピーカーノート、次ページプレビュー、タイマーなど）",
                      "annotations": {}
                    }
                  ],
                  "children": []
                },
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "Google Driveはなかなか壊れない",
                      "annotations": {}
                    }
                  ],
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "画像や図表を埋め込める",
              "annotations": {}
            }
          ],
          "children": [
            {
              "type": "bulleted_list",
              "items": [
                {
                  "type": "bulleted_list_item",
                  "text": [
                    {
                      "type": "text",
                      "text": "クリップボードから貼り付けられるのが助かる",
                      "annotations": {}
                    }
                  ],
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "Google Developer Experts用のスライドテンプレートがあるので使いたい",
              "annotations": {}
            }
          ],
          "children": []
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "終わった後URLで公開しやすい",
              "annotations": {}
            }
          ],
          "children": []
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "慣れてる",
              "annotations": {
                "bold": true
              }
            }
          ],
          "children": []
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "細かいところは他にも色々あるし、Googleスライドじゃなくてもできることも含まれているが、結局「慣れてる」が一番大きい。あまり失敗したくない発表の本番では手に馴染んで信頼できるツールを使いたい。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "しかし我らプログラマー、プレーンテキストでいい部分にはプレーンテキストを使いたいという欲求が本能に刻まれているわけなので、MarkdownをソースコードとしてGoogleスライドが出力されるツールがあるなら飛びつくのも自然であった。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "deckの使い心地",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "結論からいうととてもよかった。使い始めはいろいろ困った部分もあったが、毎回GitHubにイシューを立てたらk1LoWさんが爆速で解決していってくれるので、どんどん自分好みのツールに育っていった。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "bulleted_list",
      "items": [
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "絵文字のサポート",
              "annotations": {}
            }
          ],
          "children": []
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://github.com/k1LoW/deck/issues/82"
    },
    {
      "type": "bulleted_list",
      "items": [
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "リスト内でのインラインコードブロックのサポート",
              "annotations": {}
            }
          ],
          "children": []
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://github.com/k1LoW/deck/issues/87"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "また、deckは最初は",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "apply",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "コマンドでバッチ処理するだけだったので、書きながらプレビューすることができなかった。その問題を解決するために、自前で",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "mise",
          "href": "https://mise.jdx.dev/",
          "annotations": {}
        },
        {
          "type": "text",
          "text": " CLIを使って擬似的にdeckのwatchモードを作った。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://scrapbox.io/lacolaco/k1LoW%2Fdeck_%E3%81%A7%E3%82%B9%E3%83%A9%E3%82%A4%E3%83%89%E8%B3%87%E6%96%99%E3%82%92%E4%BD%9C%E3%82%8B"
    },
    {
      "type": "link_preview",
      "url": "https://scrapbox.io/lacolaco/k1LoW%2Fdeck_%E3%82%92monorepo%E7%9A%84%E3%81%AB%E4%BD%BF%E3%81%86%E3%81%9F%E3%82%81%E3%81%AE%E8%A3%9C%E5%8A%A9CLI"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "という話をk1LoWさんに伝えたら、本家にwatchモードが実装された。これがかなりゲームチェンジャーで、今後しばらくはdeckでスライドを作ろうと思えた進化だった。Markdown書きながらリアルタイムプレビューがあるというのはすばらしい。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://k1low.hatenablog.com/entry/2025/04/30/083000"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "これが可能なのも、deckのコンセプトがよく効いていて、最初から継続的なスライドのメンテナンスができるようにテキストとリッチコンテンツ・デザインを分離した設計になっているからだ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "watchモードが生まれたことで、スライドがどうなるかをMarkdownを書きながら脳内レンダリングする必要なくなったのは革命的だった。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "使う上での工夫",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ここからは実際にTSKaigi 2025のスライドを作るうえでやった工夫、あるいはその裏にあるdeckの伸びしろについてのメモ。改めて要求を整理してまたイシューを投げるつもり。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "ソースコードを見せるスライド",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ソースコードはシンタックスハイライトされた状態で見せたいので、テキストではなくCarbonのようなツールで画像化したものを貼りたい。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://carbon.now.sh/"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "k1LoWさんはこれがターミナルでできる",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "silicon",
          "href": "https://github.com/Aloxaf/silicon",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "を使っているようだが、画像を作るにあたってはやはり視覚的にプレビューしてサイズの調整などもやりたいし、Carbonをこのまま使いたい。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "deckにおいては画像だけを貼るページは白紙と同じだが、あとからMarkdownを見たときに何のページなのかわからなくなるので、コメントでCarbonに埋め込んでいるのと同じコードを書いて置いている。というより、まずMarkdown側で書いたソースコードをCarbonに貼り付けている。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "code",
      "language": "markdown",
      "filename": "",
      "text": "---\n\n<!-- { \"layout\": \"Blank - Black\" } -->\n\n\n<!--\n```\nlet counter = 0;\nconst content = () => `counter: ${counter}`;\nconst render = () => {\n  element.innerText = content();\n}\n\nconst setCounter = (value: number) => {\n  counter = value;\n  render();\n};\n\nsetInterval(() => setCounter(counter + 1), 1000);\n```\n\n - counter が 状態 \n - 問題点\n    - setCounterがrenderを直接呼び出す（状態管理とUIレンダリングの密結合）\n    - counterの値に変化がなくてもcontentは再計算される\n    - counterが更新されたときに別のUIも更新したくなったら？\n-->\n\n---"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "本当は、このように書いたソースコードがdeckのビルド時にsilicon的な何かを経由し自動的に画像化されてGoogleスライドに埋め込められるとイノベーションすぎるのだが、流石に求めすぎだと思うのでここは諦めている。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 3,
      "text": [
        {
          "type": "text",
          "text": "ページの挿入・削除に弱い",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "おそらくこれはdeckの根本的な仕組み上仕方ないと思うが、Markdown側で10枚ページがあるときに、5ページ目と6ページの間に新たにページを作ると、それ以降の6から10ページまでがすべて再作成される。どういうことかというと、そのページにGoogleスライド側で貼り付けていた画像はすべて消える。同様に、途中のページを1枚消すとそれ以降のページが再作成される。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "この問題があって画像が頻繁に貼り直しになるので、スライド中で使う画像はすべてローカルに保存しておいた。クリップボード貼り付けだと毎回Carbonで作り直すところからやり直しになる。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "これはReactでいうところの ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "key",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 、Angularでいうところの ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "track",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " と同じで、リストの長さが変わったときにそれがどの要素の追加・削除なのかを決定するためには各要素を追跡する識別子が必要で、それがMarkdown内にないからページインデックス以外に頼るものがないのだ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Markdown側でページを増やす・減らす前にGoogleスライド側であらかじめ整合性が取れるように変えておくとうまくいくケースもありそうだが、なかなか難しい。なので、Googleスライド側の作業が始まる前にページ数だけは確定させておかないと手戻りが多くなる。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "しかし実際にスライド作るときにはページを削ったり、順番を入れ替えたりという編集作業は終盤にこそ多いので、ここがいま一番deckでどうにかなってほしい部分だ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Markdown側で ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "key",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " を明示的に書けばそれを追跡して移動を検出する？",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "apply",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " のときにMarkdown側に機械的に採番された",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "key",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "を埋め込む？Howはイシューを挙げてからの話になるが、ユーザビリティとの両立がけっこう難しい問題だと思うが、k1LoWさんならきっとやってくれそう。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "お試しあれ",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "普通に便利なうえに、開発者との距離が近くOSSとしても面白いので、ぜひ普段Googleスライドを使っているがMarkdownでソースコード管理したいと思った方は使ってみてほしい。広げようdeckの輪。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    }
  ]
}
