{
  "pageId": "a1bb976f-7cd0-4fd0-a892-7a6ada485f97",
  "lastEditedAt": "2023-12-30T10:12:00.000Z",
  "slug": "8892acbcdb0e",
  "locale": "ja",
  "properties": {
    "title": "Astroの画像最適化を利用する",
    "date": "2023-12-27T05:34:00.000Z",
    "category": "Tech",
    "tags": ["Astro", "Blog Dev"]
  },
  "content": [
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ブログ記事中の画像を表示するために、Astroの画像最適化機能を使うようにした。これまではオリジナルの画像をそのまま",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "img",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "タグに渡しており、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "width",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "や",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "height",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "も設定していなかったため、読み込みパフォーマンスの面でもレイアウトシフトの面でも問題があったが、手抜きで放置していた。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Astroの画像最適化は、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "Image",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "コンポーネントを使うのが簡単だ。だが、ブログの作りの上で工夫が必要な点があった。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://docs.astro.build/ja/guides/images/"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ブログ記事中の画像は外部URLで配信されているものと、CMS（Notion）で管理しているローカル管理のものがある。今回はローカル管理のものに限って",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "Image",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "コンポーネントを使うようにした。外部URLのものはせめてもの最適化ということで",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "decoding=\"async”",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "だけは有効にした。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://developer.mozilla.org/ja/docs/Web/API/HTMLImageElement/decoding"
    },
    {
      "type": "code",
      "language": "typescript",
      "filename": "",
      "text": "{\n  external ? (\n    <img src={url} decoding=\"async\" />\n  ) : (\n    <AstroImage\n      src={images[url]()}\n    />\n  )\n}"
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ローカル画像のほうは、次のガイドを参考に動的読み込みを使って解決した。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://docs.astro.build/ja/recipes/dynamically-importing-images/"
    },
    {
      "type": "code",
      "language": "typescript",
      "filename": "",
      "text": "const images = import.meta.glob<{ default: ImageMetadata }>('/src/content/images/**/*.{jpg,jpeg,png,gif,svg}');\nif (!external && !images[url]) {\n  throw new Error(`\"${url}\" does not exist in glob: \"src/content/images/**/*\"`);\n}"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "はじめは直接 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "import(url)",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " の戻り値をImageコンポーネントに渡していたが、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "astro dev",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "では読み込めるものの、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "astro build",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "すると画像ファイルの読み込みに失敗した。Viteの内部的なビルドシステムに起因してそうだ。",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "import.meta.glob",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": "を使うやり方では問題なく動作した。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ということで、Astroのビルド時に画像の幅・高さの設定とwebpへの最適化、遅延読み込みの有効化などが自動的に行われるようになった。めでたしめでたし。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "image",
      "external": false,
      "url": "/src/content/images/8892acbcdb0e/3c6255ea-b6c7-4055-8126-638d2819f0c3/2fc9b104-20e3-45fc-96eb-7b1b896aed99.png",
      "caption": ""
    }
  ]
}
