{
  "pageId": "7b14ed47-6933-4797-8ef0-c29e83922a49",
  "lastEditedAt": "2023-12-30T10:01:00.000Z",
  "slug": "testing-angular-applications-with-vitest",
  "locale": "ja",
  "properties": {
    "title": "AngularアプリケーションをVitestでテストする",
    "date": "2023-08-05T13:19:00.000Z",
    "category": "Tech",
    "tags": ["Angular", "Testing", "Vitest"]
  },
  "content": [
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Angular v16系現在、Angular CLIの ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "ng new",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " コマンドで生成されたプロジェクトのユニットテストは テスティングライブラリとしてJasmineを、テストランナーとしてKarmaを使用する。この構成を",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "Vitest",
          "href": "https://vitest.dev/",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "に置き換えてみた。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "実際に動作するサンプルコードはGitHubで公開している。気になった人は手元にクローンしてテスト実行してもらいたい。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "link_preview",
      "url": "https://github.com/lacolaco/angular-vitest-sandbox"
    },
    {
      "type": "paragraph",
      "text": []
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "ng new",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " 以後に加えた主な変更について以下で簡単にまとめるが、Vitestの機能については説明せず、VitestをAngularアプリケーションに適用するための重要な部分だけにフォーカスする。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "関連パッケージのインストール",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "Karma, Jasmine関連のパッケージをすべてアンインストールし、Vitestをインストールする。また、AngularアプリケーションをViteで扱えるようにするプラグイン ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "@analogjs/vite-plugin-angular",
          "href": "https://github.com/analogjs/analog/blob/main/packages/vite-plugin-angular/README.md",
          "annotations": {}
        },
        {
          "type": "text",
          "text": " もインストールする。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "shell",
      "filename": "",
      "text": "npm i -D vitest @analogjs/vite-plugin-angular"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "まだこれでは不足しているパッケージがいくつかあるが、Vitestは賢いのでテスト実行しようとすれば不足パッケージを教えてくれる。その指示に従ってインストールすればやがて全部揃うはずだ。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "設定ファイルの作成",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "いろいろと試行錯誤した結果、設定は以下のようになった。",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "vite-plugin-angularの ",
          "annotations": {
            "strikethrough": true
          }
        },
        {
          "type": "text",
          "text": "jit",
          "annotations": {
            "strikethrough": true,
            "code": true
          }
        },
        {
          "type": "text",
          "text": " フラグをfalseにしないと、コンポーネントが ",
          "annotations": {
            "strikethrough": true
          }
        },
        {
          "type": "text",
          "text": "templateUrl",
          "annotations": {
            "strikethrough": true,
            "code": true
          }
        },
        {
          "type": "text",
          "text": " で外部ファイルを読み込んでいる場合にパースに失敗することがあった。",
          "annotations": {
            "strikethrough": true
          }
        }
      ]
    },
    {
      "type": "callout",
      "text": [
        {
          "type": "text",
          "text": "Analog 0.2.0でJITコンパイルに関するエラーは修正されたので、 ",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "jit: false",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " は不要になった。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "また、今回は Karma からの乗り換えを前提としているため、",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "VitestのBrowser Mode",
          "href": "https://vitest.dev/guide/browser.html",
          "annotations": {}
        },
        {
          "type": "text",
          "text": "を有効化している。これによって、JSDOMによるエミュレーションではなく、Karmaと同じように実際のブラウザ上でDOMのテストができる。ブラウザ制御のためのプロバイダーはWebDriverIOがデフォルトだったが、GitHub Actions上でうまくヘッドレス実行ができなかったため、playwrightに変更している。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "typescript",
      "filename": "",
      "text": "/// <reference types=\"vitest\" />\n\nimport { defineConfig } from 'vitest/config';\nimport angular from '@analogjs/vite-plugin-angular';\n\nconst isCI = !!process.env['CI'];\n\nexport default defineConfig({\n  plugins: [\n    angular({\n      tsconfig: 'tsconfig.spec.json',\n    }),\n  ],\n  test: {\n    globals: true,\n    setupFiles: ['src/setup-vitest.ts'],\n    include: ['src/**/*.spec.ts'],\n    browser: {\n      enabled: true,\n      name: 'chromium',\n      headless: isCI,\n      provider: 'playwright',\n    },\n  },\n});"
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "setup-vitest.ts",
          "annotations": {
            "code": true
          }
        },
        {
          "type": "text",
          "text": " ファイル",
          "annotations": {}
        }
      ]
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "最後に、テスト実行環境を初期化するためのセットアップコードを記述する。最初にvite-plugin-angularのセットアップモジュールを読み込む以外は、普通のAngularのTestBed初期化と変わらない。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "code",
      "language": "typescript",
      "filename": "",
      "text": "// Patch vitest APIs with Zone\nimport '@analogjs/vite-plugin-angular/setup-vitest';\n\nimport { getTestBed } from '@angular/core/testing';\nimport {\n  BrowserDynamicTestingModule,\n  platformBrowserDynamicTesting,\n} from '@angular/platform-browser-dynamic/testing';\n\ngetTestBed().initTestEnvironment(\n  BrowserDynamicTestingModule,\n  platformBrowserDynamicTesting()\n);"
    },
    {
      "type": "paragraph",
      "text": [
        {
          "type": "text",
          "text": "これでAngularアプリケーションのテストをVitestで実行する準備が整った。",
          "annotations": {}
        }
      ]
    },
    {
      "type": "heading",
      "level": 2,
      "text": [
        {
          "type": "text",
          "text": "所感",
          "annotations": {}
        }
      ]
    },
    {
      "type": "bulleted_list",
      "items": [
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "ブラウザテストなので、Vitestとはいえやはり起動の時間はかかる。",
              "annotations": {}
            }
          ],
          "children": []
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "@analogjs/vite-plugin-angular はまだまだ安定していないため、覚悟が必要",
              "annotations": {}
            }
          ],
          "children": []
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "とはいえ、Karma → Jest の置き換えよりは躓くポイントが少ないように思える。特にES Module周りや、JSDOM周り",
              "annotations": {}
            }
          ],
          "children": []
        },
        {
          "type": "bulleted_list_item",
          "text": [
            {
              "type": "text",
              "text": "まだ単純なテストケースしか試していないので、今の時点でどこまで機能するかは未知数。ぜひこれを読んで気になった人も試してみてほしい。",
              "annotations": {}
            }
          ],
          "children": []
        }
      ]
    }
  ]
}
