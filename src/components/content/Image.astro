---
import { ImageNode } from '@lib/post';
import { imageSize } from 'image-size';
import Text from './Text.astro';

type Props = ImageNode;

const image = Astro.props;

function imageLoader(config: { src: string; width: number }): string {
  const { src, width } = config;
  if (!import.meta.env.PRODUCTION) {
    return src;
  }

  const params = ['format=auto'];
  if (width) {
    params.push(`w=${width}`);
  }

  return `https://blog.lacolaco.net/cdn-cgi/image/${params.join(',')}/${src}`;
}

function getLocalImageSize(src: string): { width: number; height: number } {
  const { width, height } = imageSize(`${import.meta.dirname}/../../../public/images/${src}`);
  if (!width || !height) {
    throw new Error('Failed to get image size');
  }
  return { width, height };
}
---

<figure class="flex flex-col items-center py-2">
  {
    image.external ? (
      <img
        class:list="object-contain w-full md:max-w-screen-md max-h-[50vh]"
        src={image.url}
        decoding="async"
        loading="lazy"
      />
    ) : (
      <img
        class:list="object-contain w-full md:max-w-screen-md max-h-[50vh]"
        src={`/images/${image.path}`}
        {...getLocalImageSize(image.path)}
        srcset={[
          `${imageLoader({ src: `/images/${image.path}`, width: 640 })} 640w`,
          `${imageLoader({ src: `/images/${image.path}`, width: 768 })} 768w`,
          `${imageLoader({ src: `/images/${image.path}`, width: 1024 })} 1024w`,
        ].join(',')}
        alt={
          image.caption
            ? Array.isArray(image.caption)
              ? image.caption.map((node) => node.text).join('')
              : image.caption
            : ''
        }
        loading="lazy"
        decoding="async"
      />
    )
  }
  {
    image.caption && (
      <figcaption class="text-center text-sm text-gray-500">
        {Array.isArray(image.caption) ? image.caption.map((node) => <Text {...node} />) : image.caption}
      </figcaption>
    )
  }
</figure>
