---
import { ImageNode } from '@lib/post';
import { Image as AstroImage } from 'astro:assets';
import Text from './Text.astro';

type Props = ImageNode;

// external=true by default
const { url, caption, external = true } = Astro.props;
const images = import.meta.glob<{ default: ImageMetadata }>('/src/content/images/**/*.{jpg,jpeg,png,gif,svg}');
if (!external && !images[url]) {
  console.log(images);
  throw new Error(`"${url}" does not exist in glob: "src/content/images/**/*"`);
}
---

<figure class="flex flex-col items-center py-2">
  {
    // gif throws an error when using astro-image
    external || url.endsWith('.gif') ? (
      <img
        class:list="object-contain w-full md:max-w-screen-md max-h-[50vh]"
        src={url}
        decoding="async"
        loading="lazy"
      />
    ) : (
      <AstroImage
        class:list="object-contain w-full md:max-w-screen-md max-h-[50vh]"
        src={images[url]()}
        alt={caption ? (Array.isArray(caption) ? caption.map((node) => node.text).join('') : caption) : ''}
      />
    )
  }
  {
    caption && (
      <figcaption class="text-center text-sm text-gray-500">
        {Array.isArray(caption) ? caption.map((node) => <Text {...node} />) : caption}
      </figcaption>
    )
  }
</figure>
