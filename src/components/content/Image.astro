---
import { ImageNode } from '@lib/post';
import Text from './Text.astro';

type Props = ImageNode;

const image = Astro.props;

function imageLoader(src: string, options: { width: number }): string {
  const { width } = options;
  return `/image?w=${width}&src=${src}`;
}
---

<figure class="flex flex-col items-center py-2">
  {
    image.external ? (
      <img
        class:list="object-contain w-full md:max-w-screen-md max-h-[50vh]"
        src={image.url}
        decoding="async"
        loading="lazy"
      />
    ) : (
      <picture>
        <source srcset={imageLoader(`/images/${image.path}`, { width: 1024 })} media="(min-width: 1024px)" />
        <source srcset={imageLoader(`/images/${image.path}`, { width: 768 })} media="(min-width: 768px)" />
        <source srcset={imageLoader(`/images/${image.path}`, { width: 640 })} media="(min-width: 640px)" />
        <img
          class:list="object-contain w-full md:max-w-screen-md max-h-[50vh]"
          src={`/images/${image.path}`}
          alt={
            image.caption
              ? Array.isArray(image.caption)
                ? image.caption.map((node) => node.text).join('')
                : image.caption
              : ''
          }
          loading="lazy"
        />
      </picture>
    )
  }
  {
    image.caption && (
      <figcaption class="text-center text-sm text-gray-500">
        {Array.isArray(image.caption) ? image.caption.map((node) => <Text {...node} />) : image.caption}
      </figcaption>
    )
  }
</figure>
